{"ast":null,"code":"var __jsx = React.createElement;\nimport { Form, Input, Button } from 'antd';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addPost, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE, ADD_POST_REQUEST } from '../reducers/post';\nimport useInput from \"../hooks/useInput\";\n\nconst PostForm = () => {\n  const {\n    imagePaths,\n    addPostDone\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const [text, onChangeText, setText] = useInput('');\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  const onSubmit = useCallback(() => {\n    if (!text || !text.trim()) {\n      // 게시글이 없다면 게시글 작성 alert\n      return alert('게시글을 작성하세요.');\n    }\n\n    const formData = new FormData();\n    imagePaths.forEach(p => {\n      formData.append('image', p); // req.body.content\n    });\n    formData.append('content', text);\n    return dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    });\n  }, [text, imagePaths]);\n  const imageInput = useRef();\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onChangeImages = useCallback(e => {\n    console.log('images info :: ', e.target.files); // 이미지에 대한 정보가 담겨있음\n\n    const imageFormData = new FormData(); // form data 를 multipart 형식으로 서버로 보냄\n\n    [].forEach.call(e.target.files, f => {\n      // 배열에 forEach 를 빌려 쓰는 것\n      imageFormData.append('image', f); // image 키랑 f 값\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []);\n  const onRemoveImage = useCallback(index => () => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: index\n    });\n  }, []);\n  return (// post Form\n    __jsx(Form, {\n      style: {\n        margin: '10px 0 20px'\n      },\n      encType: \"multipart/form-data\",\n      onFinish: onSubmit\n    }, __jsx(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n    }), __jsx(\"div\", null, __jsx(\"input\", {\n      type: \"file\",\n      name: \"image\",\n      multiple: true,\n      hidden: true,\n      ref: imageInput,\n      onChange: onChangeImages\n    }), __jsx(Button, {\n      onClick: onClickImageUpload\n    }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n      type: \"primary\",\n      style: {\n        float: 'right'\n      },\n      htmlType: \"submit\"\n    }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", null, imagePaths.map((v, i) => {\n      return (// 이미지 등록을 했을 시, 이미지 경로가 저장되며, 반복문으로 표시해줌\n        __jsx(\"div\", {\n          key: v,\n          style: {\n            display: 'inline-block'\n          }\n        }, __jsx(\"img\", {\n          src: `http://localhost:3065/${v}`,\n          style: {\n            width: '200px'\n          },\n          alt: v\n        }), __jsx(\"div\", null, __jsx(Button, {\n          onClick: onRemoveImage(i)\n        }, \"\\uC81C\\uAC70\")))\n      );\n    })))\n  );\n};\n\nexport default PostForm;","map":null,"metadata":{},"sourceType":"module"}