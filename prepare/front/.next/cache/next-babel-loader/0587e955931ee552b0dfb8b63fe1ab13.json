{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\intellijProjects\\\\react-nodebird\\\\prepare\\\\front\\\\component\\\\CommentForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport { Button, Form, Input } from \"antd\";\nimport useInput from \"../hooks/useInput\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      commentText = _useInput2[0],\n      onChangeCommentText = _useInput2[1];\n\n  var onSubmitComment = useCallback(function () {\n    console.log(post.id, commentText);\n  }, [commentText]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }\n  }, __jsx(Form.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(Input.Textarea, {\n    value: commentText,\n    onchange: onChangeCommentText,\n    rows: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 6\n    }\n  }), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 6\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n\n_s(CommentForm, \"PptqMkMnW7reCXQEE7qotaIWwp0=\", false, function () {\n  return [useSelector, useInput];\n});\n\n_c = CommentForm;\nCommentForm.prototype = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["D:/intellijProjects/react-nodebird/prepare/front/component/CommentForm.js"],"names":["React","useCallback","Button","Form","Input","useInput","PropTypes","useSelector","CommentForm","post","id","state","user","me","commentText","onChangeCommentText","onSubmitComment","console","log","prototype","object","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,QAAkC,MAAlC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,WAAR,QAA0B,aAA1B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAY;AAAA;;AAAA,MAAVC,IAAU,QAAVA,IAAU;AAC/B,MAAMC,EAAE,GAAGH,WAAW,CAAC,UAACI,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;;AACA,kBAA2CL,QAAQ,CAAC,EAAD,CAAnD;AAAA;AAAA,MAAOS,WAAP;AAAA,MAAoBC,mBAApB;;AAEA,MAAMC,eAAe,GAAGf,WAAW,CAAC,YAAM;AACzCgB,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAI,CAACC,EAAjB,EAAqBI,WAArB;AACA,GAFkC,EAEhC,CAACA,WAAD,CAFgC,CAAnC;AAIA,SACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEF,WAAvB;AAAoC,IAAA,QAAQ,EAAEC,mBAA9C;AAAmE,IAAA,IAAI,EAAE,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFD,CADD,CADF;AAQA,CAhBD;;GAAMP,W;UACMD,W,EACgCF,Q;;;KAFtCG,W;AAiBNA,WAAW,CAACW,SAAZ,GAAwB;AACvBV,EAAAA,IAAI,EAAEH,SAAS,CAACc,MAAV,CAAiBC;AADA,CAAxB;AAGA,eAAeb,WAAf","sourcesContent":["import React, {useCallback} from 'react'\r\nimport {Button, Form, Input} from \"antd\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport PropTypes from \"prop-types\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst CommentForm = ({post}) => {\r\n\tconst id = useSelector((state) => state.user.me?.id)\r\n\tconst [commentText, onChangeCommentText] = useInput('')\r\n\r\n\tconst onSubmitComment = useCallback(() => {\r\n\t\tconsole.log(post.id, commentText)\r\n\t}, [commentText])\r\n\r\n\treturn (\r\n\t\t\t<Form onFinish={onSubmitComment}>\r\n\t\t\t\t<Form.Item>\r\n\t\t\t\t\t<Input.Textarea value={commentText} onchange={onChangeCommentText} rows={4} />\r\n\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">삐약</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t)\r\n}\r\nCommentForm.prototype = {\r\n\tpost: PropTypes.object.isRequired,\r\n}\r\nexport default CommentForm;\r\n"]},"metadata":{},"sourceType":"module"}