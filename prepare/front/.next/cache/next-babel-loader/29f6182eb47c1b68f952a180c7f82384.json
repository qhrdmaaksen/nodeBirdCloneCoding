{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\intellijProjects\\\\react-nodebird\\\\prepare\\\\front\\\\component\\\\LoginForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport useInput from '../hooks/useInput';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginAction, loginRequestAction } from \"../reducers/user\";\nvar ButtonWrapper = styled.div.withConfig({\n  displayName: \"LoginForm__ButtonWrapper\",\n  componentId: \"sc-1nxlttv-0\"\n})([\"margin-top:10px;\"]);\n_c = ButtonWrapper;\nvar FormWrapper = styled(Form).withConfig({\n  displayName: \"LoginForm__FormWrapper\",\n  componentId: \"sc-1nxlttv-1\"\n})([\"padding:10px;\"]);\n_c2 = FormWrapper;\n\nvar LoginForm = function LoginForm() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      logInLoading = _useSelector.logInLoading,\n      logInError = _useSelector.logInError;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      email = _useInput2[0],\n      onChangeEmail = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      password = _useInput4[0],\n      onChangePassword = _useInput4[1]; // 로그인 에러\n\n\n  useEffect(function () {\n    if (logInError) {\n      alert(logInError);\n    }\n  }, [logInError]); // const style = useMemo(()=>({ // styled component 를 사용원치 않을때 useMemo 사용\n  //   marginTop: 10\n  // }), []);\n\n  var onSubmitFrom = useCallback(function () {\n    console.log('email : ' + email + ',' + ' password : ' + password); //setIsLoggedIn(true)\n\n    dispatch(loginRequestAction({\n      email: email,\n      password: password\n    })); // 동적 create\n  }, [email, password]);\n  return __jsx(FormWrapper, {\n    onFinish: onSubmitFrom,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 6\n    }\n  }, \"\\uC774\\uBA54\\uC77C\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 6\n    }\n  }), __jsx(Input, {\n    name: \"user-email\",\n    type: \"email\",\n    value: email,\n    onChange: onChangeEmail,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 6\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 6\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 6\n    }\n  }), __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    onChange: onChangePassword,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }\n  })), __jsx(ButtonWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: logInLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 6\n    }\n  }, \"\\uB85C\\uADF8\\uC778 \"), __jsx(Link, {\n    href: \"/signup\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 8\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))));\n};\n/*LoginForm.propTypes = {\r\n  setIsLoggedIn: PropTypes.func.isRequired,\r\n}*/\n\n\n_s(LoginForm, \"jREhXmr4dM7GJ/tIUdLPllyEjpM=\", false, function () {\n  return [useDispatch, useSelector, useInput, useInput];\n});\n\n_c3 = LoginForm;\nexport default LoginForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ButtonWrapper\");\n$RefreshReg$(_c2, \"FormWrapper\");\n$RefreshReg$(_c3, \"LoginForm\");","map":{"version":3,"sources":["D:/intellijProjects/react-nodebird/prepare/front/component/LoginForm.js"],"names":["React","useCallback","useEffect","Form","Input","Button","Link","styled","PropTypes","useInput","useDispatch","useSelector","loginAction","loginRequestAction","ButtonWrapper","div","FormWrapper","LoginForm","dispatch","state","user","logInLoading","logInError","email","onChangeEmail","password","onChangePassword","alert","onSubmitFrom","console","log"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect} from 'react'\r\nimport {Form, Input, Button} from 'antd'\r\nimport Link from 'next/link'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport useInput from '../hooks/useInput'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {loginAction, loginRequestAction} from \"../reducers/user\";\r\n\r\nconst ButtonWrapper = styled.div`\r\n\tmargin-top: 10px;\r\n`\r\n\r\nconst FormWrapper = styled(Form)`\r\n\tpadding: 10px;\r\n`\r\n\r\nconst LoginForm = () => {\r\n\tconst dispatch = useDispatch()\r\n\tconst {logInLoading, logInError} = useSelector((state) => state.user)\r\n\tconst [email, onChangeEmail] = useInput('')\r\n\tconst [password, onChangePassword] = useInput('')\r\n\r\n\t// 로그인 에러\r\n\tuseEffect(()=>{\r\n\t\tif (logInError) {\r\n\t\t\talert(logInError)\r\n\t\t}\r\n\t},[logInError])\r\n\r\n\t// const style = useMemo(()=>({ // styled component 를 사용원치 않을때 useMemo 사용\r\n\t//   marginTop: 10\r\n\t// }), []);\r\n\r\n\tconst onSubmitFrom = useCallback(() => {\r\n\t\tconsole.log('email : ' + email + ',' + ' password : ' + password)\r\n\t\t//setIsLoggedIn(true)\r\n\t\tdispatch(loginRequestAction({email, password})) // 동적 create\r\n\t}, [email, password])\r\n\r\n\treturn (\r\n\t\t\t<FormWrapper onFinish={onSubmitFrom}>\r\n\t\t\t\t{/*onFinish 는 이미 e.preventDefault() 가 적용되어있다.*/}\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label htmlFor=\"user-email\">이메일</label>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<Input name=\"user-email\" type=\"email\" value={email} onChange={onChangeEmail} required/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label htmlFor=\"user-password\">비밀번호</label>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<Input name=\"user-password\" type=\"password\" value={password} onChange={onChangePassword} required/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ButtonWrapper>\r\n\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" loading={logInLoading}>\r\n\t\t\t\t\t\t로그인 {/*htmlType 을 붙여줘야 submit 이 된다*/}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Link href=\"/signup\">\r\n\t\t\t\t\t\t<a>\r\n\t\t\t\t\t\t\t<Button>회원가입</Button>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</ButtonWrapper>\r\n\t\t\t</FormWrapper>\r\n\t)\r\n}\r\n\r\n/*LoginForm.propTypes = {\r\n  setIsLoggedIn: PropTypes.func.isRequired,\r\n}*/\r\n\r\nexport default LoginForm\r\n"]},"metadata":{},"sourceType":"module"}