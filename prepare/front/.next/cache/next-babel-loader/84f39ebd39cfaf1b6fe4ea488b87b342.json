{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '비타민'\n    },\n    content: '첫 번째 게시글 #해시태그 #익스프레스',\n    Images: [{\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\n    }],\n    Comments: [{\n      User: {\n        nickname: 'nero'\n      },\n      content: '개정판이 나왔네요!?'\n    }, {\n      User: {\n        nickname: 'hero'\n      },\n      content: '정말정말 신기하당!'\n    }]\n  }],\n  imagePaths: [],\n  // 이미지 경로들이 저장됨\n  postAdded: false // 게시물 추가가 완료되었을때 true 변환\n\n}; //게시글 작성하는 액션\n\nvar ADD_POST = 'ADD_POST'; // 변수로 따로 만들어줘야 중간에 오타가나는 일을 막을 수 있다\n\nexport var addPost = {\n  type: ADD_POST\n};\nvar dummyPost = {\n  id: 2,\n  content: '더미데이터입니당',\n  User: {\n    id: 1,\n    nickname: 'vitamin'\n  },\n  Images: [],\n  Comments: []\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost].concat(_toConsumableArray(state.mainPosts)),\n        // 불변성 지켜주며 앞에다가 추가해야 게시글 위에올라감\n        postAdded: true\n      });\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/intellijProjects/react-nodebird/prepare/front/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","postAdded","ADD_POST","addPost","type","dummyPost","reducer","state","action"],"mappings":";;;;;;;AAAA,OAAO,IAAMA,YAAY,GAAG;AAC3BC,EAAAA,SAAS,EAAE,CACV;AACCC,IAAAA,EAAE,EAAE,CADL;AAECC,IAAAA,IAAI,EAAE;AACLD,MAAAA,EAAE,EAAE,CADC;AAELE,MAAAA,QAAQ,EAAE;AAFL,KAFP;AAMCC,IAAAA,OAAO,EAAE,uBANV;AAOCC,IAAAA,MAAM,EAAE,CAAC;AACRC,MAAAA,GAAG,EAAE;AADG,KAAD,EAEL;AACFA,MAAAA,GAAG,EAAE;AADH,KAFK,EAIL;AACFA,MAAAA,GAAG,EAAE;AADH,KAJK,CAPT;AAcCC,IAAAA,QAAQ,EAAE,CACT;AACCL,MAAAA,IAAI,EAAE;AACLC,QAAAA,QAAQ,EAAE;AADL,OADP;AAICC,MAAAA,OAAO,EAAE;AAJV,KADS,EAOT;AACCF,MAAAA,IAAI,EAAE;AACLC,QAAAA,QAAQ,EAAE;AADL,OADP;AAICC,MAAAA,OAAO,EAAE;AAJV,KAPS;AAdX,GADU,CADgB;AAgC3BI,EAAAA,UAAU,EAAE,EAhCe;AAgCX;AAChBC,EAAAA,SAAS,EAAE,KAjCgB,CAiCT;;AAjCS,CAArB,C,CAoCP;;AACA,IAAMC,QAAQ,GAAG,UAAjB,C,CAA6B;;AAC7B,OAAO,IAAMC,OAAO,GAAG;AACtBC,EAAAA,IAAI,EAAEF;AADgB,CAAhB;AAIP,IAAMG,SAAS,GAAG;AACjBZ,EAAAA,EAAE,EAAE,CADa;AAEjBG,EAAAA,OAAO,EAAE,UAFQ;AAGjBF,EAAAA,IAAI,EAAE;AACLD,IAAAA,EAAE,EAAE,CADC;AAELE,IAAAA,QAAQ,EAAE;AAFL,GAHW;AAOjBE,EAAAA,MAAM,EAAE,EAPS;AAQjBE,EAAAA,QAAQ,EAAE;AARO,CAAlB;;AAWA,IAAMO,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBhB,YAAyB;AAAA,MAAXiB,MAAW;;AACjD,UAAQA,MAAM,CAACJ,IAAf;AACC,SAAKF,QAAL;AACC,6CACIK,KADJ;AAECf,QAAAA,SAAS,GAAGa,SAAH,4BAAiBE,KAAK,CAACf,SAAvB,EAFV;AAE6C;AAC5CS,QAAAA,SAAS,EAAE;AAHZ;;AAKD;AAAS;AACR,iCACIM,KADJ;AAGA;AAXF;AAaA,CAdD;;AAgBA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n\tmainPosts: [\r\n\t\t{\r\n\t\t\tid: 1,\r\n\t\t\tUser: {\r\n\t\t\t\tid: 1,\r\n\t\t\t\tnickname: '비타민',\r\n\t\t\t},\r\n\t\t\tcontent: '첫 번째 게시글 #해시태그 #익스프레스',\r\n\t\t\tImages: [{\r\n\t\t\t\tsrc: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\r\n\t\t\t}, {\r\n\t\t\t\tsrc: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\r\n\t\t\t}, {\r\n\t\t\t\tsrc: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\r\n\t\t\t}],\r\n\t\t\tComments: [\r\n\t\t\t\t{\r\n\t\t\t\t\tUser: {\r\n\t\t\t\t\t\tnickname: 'nero',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcontent: '개정판이 나왔네요!?',\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tUser: {\r\n\t\t\t\t\t\tnickname: 'hero',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcontent: '정말정말 신기하당!',\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t],\r\n\timagePaths: [], // 이미지 경로들이 저장됨\r\n\tpostAdded: false, // 게시물 추가가 완료되었을때 true 변환\r\n}\r\n\r\n//게시글 작성하는 액션\r\nconst ADD_POST = 'ADD_POST'; // 변수로 따로 만들어줘야 중간에 오타가나는 일을 막을 수 있다\r\nexport const addPost = {\r\n\ttype: ADD_POST,\r\n}\r\n\r\nconst dummyPost = {\r\n\tid: 2,\r\n\tcontent: '더미데이터입니당',\r\n\tUser: {\r\n\t\tid: 1,\r\n\t\tnickname: 'vitamin',\r\n\t},\r\n\tImages: [],\r\n\tComments: [],\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase ADD_POST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmainPosts: [dummyPost, ...state.mainPosts], // 불변성 지켜주며 앞에다가 추가해야 게시글 위에올라감\r\n\t\t\t\tpostAdded: true,\r\n\t\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default reducer\r\n"]},"metadata":{},"sourceType":"module"}