{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\intellijProjects\\\\react-nodebird\\\\prepare\\\\front\\\\component\\\\PostCard.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport { Avatar, Button, Card, Comment, List, Popover } from \"antd\";\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined, HeartTwoTone } from \"@ant-design/icons\";\nimport { useSelector } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport PostImages from \"./PostImages\";\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  }); //state.user.me && state.user.me.id\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setCommentFormOpened = _useState2[1];\n\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 32\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 8\n      }\n    }), // 리트윗 버튼\n    liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 12\n      }\n    }) // 하트 버튼\n    : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    }), // 하트 버튼\n    __jsx(MessageOutlined, {\n      key: \"comment\",\n      onClick: onToggleComment,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 8\n      }\n    }), // 댓글 버튼\n    __jsx(Popover, {\n      key: \"more\",\n      content: // 더 보기 버튼\n      __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 10\n        }\n      }, id && post.User.id === id ?\n      /*내가 쓴 글이면 수정 삭제 가능*/\n      __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 14\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 14\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }\n      }, \"\\uC2E0\\uACE0\"), \" \"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 8\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }))],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 16\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 6\n    }\n  })), commentFormOpened && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, __jsx(CommentForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 8\n    }\n  }), __jsx(List, {\n    header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n    itemLayout: \"horizontal\",\n    dataSource: post.Comments,\n    renderItem: function renderItem(item) {\n      return __jsx(\"li\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, __jsx(Comment, {\n        author: item.User.nickname,\n        avatar: __jsx(Avatar, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }\n        }, item.User.nickname[0]),\n        content: item.content,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 12\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 8\n    }\n  })));\n};\n\n_s(PostCard, \"TDWGRGH9sEmk3O3m4fnWhihQZFs=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    // 날짜 객체\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["D:/intellijProjects/react-nodebird/prepare/front/component/PostCard.js"],"names":["React","useCallback","useState","Avatar","Button","Card","Comment","List","Popover","EllipsisOutlined","HeartOutlined","MessageOutlined","RetweetOutlined","HeartTwoTone","useSelector","PropTypes","PostImages","PostCard","post","id","state","user","me","liked","setLiked","commentFormOpened","setCommentFormOpened","onToggleLike","prev","onToggleComment","marginBottom","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React, {useCallback, useState} from 'react'\r\nimport {Avatar, Button, Card, Comment, List, Popover} from \"antd\";\r\nimport {EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined, HeartTwoTone} from \"@ant-design/icons\";\r\nimport {useSelector} from \"react-redux\";\r\nimport PropTypes from 'prop-types'\r\nimport PostImages from \"./PostImages\";\r\n\r\nconst PostCard = ({post}) => {\r\n\tconst id = useSelector((state) => state.user.me?.id) //state.user.me && state.user.me.id\r\n\tconst [liked, setLiked] = useState(false)\r\n\tconst [commentFormOpened, setCommentFormOpened] = useState(false)\r\n\r\n\tconst onToggleLike = useCallback(() => {\r\n\t\tsetLiked((prev) => !prev)\r\n\t}, [])\r\n\r\n\tconst onToggleComment = useCallback(() => {\r\n\t\tsetCommentFormOpened((prev) => !prev)\r\n\t}, [])\r\n\r\n\r\n\treturn (\r\n\t\t\t<div style={{marginBottom: 20}}>\r\n\t\t\t\t<Card\r\n\t\t\t\t\t\tcover={post.Images[0] && <PostImages images={post.Images}/>}\r\n\t\t\t\t\t\tactions={[\r\n\t\t\t\t\t\t\t<RetweetOutlined key=\"retweet\"/>, // 리트윗 버튼\r\n\t\t\t\t\t\t\tliked\r\n\t\t\t\t\t\t\t\t\t? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike}/> // 하트 버튼\r\n\t\t\t\t\t\t\t\t\t: <HeartOutlined key=\"heart\" onClick={onToggleLike}/>, // 하트 버튼\r\n\t\t\t\t\t\t\t<MessageOutlined key=\"comment\" onClick={onToggleComment}/>, // 댓글 버튼\r\n\t\t\t\t\t\t\t<Popover key=\"more\" content={( // 더 보기 버튼\r\n\t\t\t\t\t\t\t\t\t<Button.Group>\r\n\t\t\t\t\t\t\t\t\t\t{id && post.User.id === id ? ( /*내가 쓴 글이면 수정 삭제 가능*/\r\n\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button>수정</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button type=\"danger\">삭제</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t) : <Button>신고</Button>} {/* 남이 쓴 글이면 삭제 가능*/}\r\n\t\t\t\t\t\t\t\t\t</Button.Group>\r\n\t\t\t\t\t\t\t)}>\r\n\t\t\t\t\t\t\t\t<EllipsisOutlined/>\r\n\t\t\t\t\t\t\t</Popover>,\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Card.Meta\r\n\t\t\t\t\t\t\tavatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n\t\t\t\t\t\t\ttitle={post.User.nickname}\r\n\t\t\t\t\t\t\tdescription={post.content}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Card>\r\n\t\t\t\t{commentFormOpened && (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<CommentForm />\r\n\t\t\t\t\t\t\t<List\r\n\t\t\t\t\t\t\t\theader={`${post.Comments.length}개의 댓글`}\r\n\t\t\t\t\t\t\t\titemLayout=\"horizontal\"\r\n\t\t\t\t\t\t\t\tdataSource={post.Comments}\r\n\t\t\t\t\t\t\t\trenderItem={(item) => (\r\n\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t<Comment\r\n\t\t\t\t\t\t\t\t\t\t\t\tauthor={item.User.nickname}\r\n\t\t\t\t\t\t\t\t\t\t\t\tavatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontent={item.content}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>)}\r\n\t\t\t\t{/*<CommentForm />\r\n\t\t\t\t<Comments />*/}\r\n\t\t\t</div>\r\n\t)\r\n}\r\nPostCard.propTypes = {\r\n\tpost: PropTypes.shape({\r\n\t\tid: PropTypes.number,\r\n\t\tUser: PropTypes.object,\r\n\t\tcontent: PropTypes.string,\r\n\t\tcreatedAt: PropTypes.object, // 날짜 객체\r\n\t\tComments: PropTypes.arrayOf(PropTypes.object),\r\n\t\tImages: PropTypes.arrayOf(PropTypes.object),\r\n\t}).isRequired,\r\n}\r\n\r\nexport default PostCard"]},"metadata":{},"sourceType":"module"}