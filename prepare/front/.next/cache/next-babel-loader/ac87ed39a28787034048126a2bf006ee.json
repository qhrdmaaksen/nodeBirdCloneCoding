{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport shortId from 'shortid';\nexport var initialState = {\n  mainPosts: [{\n    id: shortId.generate(),\n    User: {\n      id: shortId.generate(),\n      nickname: '비타민'\n    },\n    content: '첫 번째 게시글 #해시태그 #익스프레스',\n    Images: [{\n      id: shortId.generate(),\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726'\n    }, {\n      id: shortId.generate(),\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\n    }, {\n      id: shortId.generate(),\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'nero'\n      },\n      content: '개정판이 나왔네요!?'\n    }, {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'hero'\n      },\n      content: '정말정말 신기하당!'\n    }]\n  }],\n  imagePaths: [],\n  // 이미지 경로들이 저장됨\n  addPostLoading: false,\n  // 게시물 등록중 로딩\n  addPostDone: false,\n  // 게시물 추가가 완료되었을때 true 변환\n  addPostError: null,\n  removePostLoading: false,\n  // 게시물 삭제중 로딩\n  removePostDone: false,\n  // 게시물 삭제가 완료되었을때 true 변환\n  removePostError: null,\n  addCommentLoading: false,\n  // 댓글 등록중 로딩\n  addCommentDone: false,\n  // 게시물 추가가 완료되었을때 true 변환\n  addCommentError: null\n}; //게시글 작성하는 액션\n\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST'; // 변수로 따로 만들어줘야 중간에 오타가나는 일을 막을 수 있다\n\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n}; // dynamic action create\n\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: '비타민'\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: '비타민'\n    }\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost(action.data)].concat(_toConsumableArray(state.mainPosts)),\n        // 불변성 지켜주며 앞에다가 추가해야 게시글 위에올라감\n        addPostLoading: false,\n        addPostDone: true\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostError: action.error\n      });\n\n    case REMOVE_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        removePostLoading: true,\n        removePostDone: false,\n        removePostError: null\n      });\n\n    case REMOVE_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: state.mainPosts.filter(function (v) {\n          return v.id === action.data;\n        }),\n        // 지울땐 보통 filter 로 불변성 지키며 지움\n        removePostLoading: false,\n        removePostDone: true\n      });\n\n    case REMOVE_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        removePostLoading: false,\n        removePostError: action.error\n      });\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentDone: false,\n        addCommentError: null\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        //action.data.content, postId, userId\n        var postIndex = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n\n        var post = _objectSpread({}, state.mainPosts[postIndex]);\n\n        post.Comments = [dummyComment(action.data.content)].concat(_toConsumableArray(post.Comments));\n\n        var mainPosts = _toConsumableArray(state.mainPosts);\n\n        mainPosts[postIndex] = post;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts: mainPosts,\n          //mainPosts: [dummyPost, ...state.mainPosts], // 불변성 지켜주며 앞에다가 추가해야 게시글 위에올라감\n          addCommentLoading: false,\n          addCommentDone: true\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentError: action.error\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/intellijProjects/react-nodebird/prepare/front/reducers/post.js"],"names":["shortId","initialState","mainPosts","id","generate","User","nickname","content","Images","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","dummyComment","reducer","state","action","error","filter","v","postIndex","findIndex","postId","post"],"mappings":"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","sourcesContent":["import shortId from 'shortid'\r\n\r\n\r\nexport const initialState = {\r\n\tmainPosts: [\r\n\t\t{\r\n\t\t\tid: shortId.generate(),\r\n\t\t\tUser: {\r\n\t\t\t\tid: shortId.generate(),\r\n\t\t\t\tnickname: '비타민',\r\n\t\t\t},\r\n\t\t\tcontent: '첫 번째 게시글 #해시태그 #익스프레스',\r\n\t\t\tImages: [{\r\n\t\t\t\tid: shortId.generate(),\r\n\t\t\t\tsrc: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\r\n\t\t\t}, {\r\n\t\t\t\tid: shortId.generate(),\r\n\t\t\t\tsrc: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\r\n\t\t\t}, {\r\n\t\t\t\tid: shortId.generate(),\r\n\t\t\t\tsrc: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\r\n\t\t\t}],\r\n\t\t\tComments: [\r\n\t\t\t\t{\r\n\t\t\t\t\tid: shortId.generate(),\r\n\t\t\t\t\tUser: {\r\n\t\t\t\t\t\tid: shortId.generate(),\r\n\t\t\t\t\t\tnickname: 'nero',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcontent: '개정판이 나왔네요!?',\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tid: shortId.generate(),\r\n\t\t\t\t\tUser: {\r\n\t\t\t\t\t\tid: shortId.generate(),\r\n\t\t\t\t\t\tnickname: 'hero',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcontent: '정말정말 신기하당!',\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t],\r\n\timagePaths: [], // 이미지 경로들이 저장됨\r\n\taddPostLoading: false, // 게시물 등록중 로딩\r\n\taddPostDone: false, // 게시물 추가가 완료되었을때 true 변환\r\n\taddPostError: null,\r\n\tremovePostLoading: false, // 게시물 삭제중 로딩\r\n\tremovePostDone: false, // 게시물 삭제가 완료되었을때 true 변환\r\n\tremovePostError: null,\r\n\taddCommentLoading: false, // 댓글 등록중 로딩\r\n\taddCommentDone: false, // 게시물 추가가 완료되었을때 true 변환\r\n\taddCommentError: null,\r\n}\r\n\r\n//게시글 작성하는 액션\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST'; // 변수로 따로 만들어줘야 중간에 오타가나는 일을 막을 수 있다\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const addPost = (data) => ({\r\n\ttype: ADD_POST_REQUEST,\r\n\tdata,\r\n})\r\n\r\n// dynamic action create\r\nexport const addComment = (data) => ({\r\n\ttype: ADD_COMMENT_REQUEST,\r\n\tdata,\r\n})\r\n\r\nconst dummyPost = (data) => ({\r\n\tid: data.id,\r\n\tcontent: data.content,\r\n\tUser: {\r\n\t\tid: 1,\r\n\t\tnickname: '비타민',\r\n\t},\r\n\tImages: [],\r\n\tComments: [],\r\n})\r\n\r\nconst dummyComment = (data) => ({\r\n\tid: shortId.generate(),\r\n\tcontent: data,\r\n\tUser: {\r\n\t\tid: 1,\r\n\t\tnickname: '비타민',\r\n\t}\r\n})\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase ADD_POST_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\taddPostLoading: true,\r\n\t\t\t\taddPostDone: false,\r\n\t\t\t\taddPostError: null,\r\n\t\t\t}\r\n\t\tcase ADD_POST_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmainPosts: [dummyPost(action.data), ...state.mainPosts], // 불변성 지켜주며 앞에다가 추가해야 게시글 위에올라감\r\n\t\t\t\taddPostLoading: false,\r\n\t\t\t\taddPostDone: true,\r\n\t\t\t}\r\n\t\tcase ADD_POST_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\taddPostLoading: false,\r\n\t\t\t\taddPostError: action.error,\r\n\t\t\t}\r\n\t\tcase REMOVE_POST_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tremovePostLoading: true,\r\n\t\t\t\tremovePostDone: false,\r\n\t\t\t\tremovePostError: null,\r\n\t\t\t}\r\n\t\tcase REMOVE_POST_SUCCESS:\r\n\t\t\treturn {// 불변성 지켜주며 앞에다가 추가해야 게시글 위에올라감\r\n\t\t\t\t...state,\r\n\t\t\t\tmainPosts: state.mainPosts.filter((v) => v.id === action.data), // 지울땐 보통 filter 로 불변성 지키며 지움\r\n\t\t\t\tremovePostLoading: false,\r\n\t\t\t\tremovePostDone: true,\r\n\t\t\t}\r\n\t\tcase REMOVE_POST_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tremovePostLoading: false,\r\n\t\t\t\tremovePostError: action.error,\r\n\t\t\t}\r\n\t\tcase ADD_COMMENT_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\taddCommentLoading: true,\r\n\t\t\t\taddCommentDone: false,\r\n\t\t\t\taddCommentError: null,\r\n\t\t\t}\r\n\t\tcase ADD_COMMENT_SUCCESS:{\r\n\t\t\t//action.data.content, postId, userId\r\n\t\t\tconst postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId)\r\n\t\t\tconst post = {...state.mainPosts[postIndex]}\r\n\t\t\tpost.Comments = [dummyComment(action.data.content), ...post.Comments]\r\n\t\t\tconst mainPosts = [...state.mainPosts]\r\n\t\t\tmainPosts[postIndex] = post\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmainPosts,\r\n\t\t\t\t//mainPosts: [dummyPost, ...state.mainPosts], // 불변성 지켜주며 앞에다가 추가해야 게시글 위에올라감\r\n\t\t\t\taddCommentLoading: false,\r\n\t\t\t\taddCommentDone: true,\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase ADD_COMMENT_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\taddCommentLoading: false,\r\n\t\t\t\taddCommentError: action.error,\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t}\r\n\t}\r\n}\r\nexport default reducer\r\n"]},"metadata":{},"sourceType":"module"}