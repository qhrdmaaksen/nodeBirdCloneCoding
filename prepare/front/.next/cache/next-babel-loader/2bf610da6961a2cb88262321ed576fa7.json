{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  isLoggedIn: false,\n  me: null,\n  signUpData: {},\n  loginData: {}\n}; // 로그인 액션 생성기\n\nexport const loginRequestAction = data => {\n  return {\n    type: 'LOG_IN_REQUEST',\n    data\n  };\n};\nexport const loginSuccessAction = data => {\n  return {\n    type: 'LOG_IN_SUCCESS',\n    data\n  };\n};\nexport const loginRequestFailure = data => {\n  return {\n    type: 'LOG_IN_FAILURE',\n    data\n  };\n}; // 로그아웃 액션 생성기\n\nexport const logoutRequestAction = () => {\n  return {\n    type: 'LOG_OUT_REQUEST'\n  };\n};\nexport const logoutSuccessAction = () => {\n  return {\n    type: 'LOG_OUT_SUCCESS'\n  };\n};\nexport const logoutRequestFailure = () => {\n  return {\n    type: 'LOG_OUT_FAILURE'\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: true,\n        me: action.data\n      });\n\n    case 'LOG_OUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: false,\n        me: null\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/intellijProjects/react-nodebird/prepare/front/reducers/user.js"],"names":["initialState","isLoggedIn","me","signUpData","loginData","loginRequestAction","data","type","loginSuccessAction","loginRequestFailure","logoutRequestAction","logoutSuccessAction","logoutRequestFailure","reducer","state","action"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AAC3BC,EAAAA,UAAU,EAAE,KADe;AAE3BC,EAAAA,EAAE,EAAE,IAFuB;AAG3BC,EAAAA,UAAU,EAAE,EAHe;AAI3BC,EAAAA,SAAS,EAAE;AAJgB,CAArB,C,CAOP;;AACA,OAAO,MAAMC,kBAAkB,GAAIC,IAAD,IAAU;AAC3C,SAAO;AACNC,IAAAA,IAAI,EAAE,gBADA;AAEND,IAAAA;AAFM,GAAP;AAIA,CALM;AAMP,OAAO,MAAME,kBAAkB,GAAIF,IAAD,IAAU;AAC3C,SAAO;AACNC,IAAAA,IAAI,EAAE,gBADA;AAEND,IAAAA;AAFM,GAAP;AAIA,CALM;AAMP,OAAO,MAAMG,mBAAmB,GAAIH,IAAD,IAAU;AAC5C,SAAO;AACNC,IAAAA,IAAI,EAAE,gBADA;AAEND,IAAAA;AAFM,GAAP;AAIA,CALM,C,CAMP;;AACA,OAAO,MAAMI,mBAAmB,GAAG,MAAM;AACxC,SAAO;AACNH,IAAAA,IAAI,EAAE;AADA,GAAP;AAGA,CAJM;AAKP,OAAO,MAAMI,mBAAmB,GAAG,MAAM;AACxC,SAAO;AACNJ,IAAAA,IAAI,EAAE;AADA,GAAP;AAGA,CAJM;AAKP,OAAO,MAAMK,oBAAoB,GAAG,MAAM;AACzC,SAAO;AACNL,IAAAA,IAAI,EAAE;AADA,GAAP;AAGA,CAJM;;AAMP,MAAMM,OAAO,GAAG,CAACC,KAAK,GAAGd,YAAT,EAAuBe,MAAvB,KAAkC;AACjD,UAAQA,MAAM,CAACR,IAAf;AACC,SAAK,QAAL;AACC,6CAEIO,KAFJ;AAGCb,QAAAA,UAAU,EAAE,IAHb;AAICC,QAAAA,EAAE,EAAEa,MAAM,CAACT;AAJZ;;AAMD,SAAK,SAAL;AACC,6CAEIQ,KAFJ;AAGCb,QAAAA,UAAU,EAAE,KAHb;AAICC,QAAAA,EAAE,EAAE;AAJL;;AAMD;AACC,aAAOY,KAAP;AAhBF;AAkBA,CAnBD;;AAqBA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n\tisLoggedIn: false,\r\n\tme: null,\r\n\tsignUpData: {},\r\n\tloginData: {},\r\n}\r\n\r\n// 로그인 액션 생성기\r\nexport const loginRequestAction = (data) => {\r\n\treturn {\r\n\t\ttype: 'LOG_IN_REQUEST',\r\n\t\tdata,\r\n\t}\r\n}\r\nexport const loginSuccessAction = (data) => {\r\n\treturn {\r\n\t\ttype: 'LOG_IN_SUCCESS',\r\n\t\tdata,\r\n\t}\r\n}\r\nexport const loginRequestFailure = (data) => {\r\n\treturn {\r\n\t\ttype: 'LOG_IN_FAILURE',\r\n\t\tdata,\r\n\t}\r\n}\r\n// 로그아웃 액션 생성기\r\nexport const logoutRequestAction = () => {\r\n\treturn {\r\n\t\ttype: 'LOG_OUT_REQUEST',\r\n\t}\r\n}\r\nexport const logoutSuccessAction = () => {\r\n\treturn {\r\n\t\ttype: 'LOG_OUT_SUCCESS',\r\n\t}\r\n}\r\nexport const logoutRequestFailure = () => {\r\n\treturn {\r\n\t\ttype: 'LOG_OUT_FAILURE',\r\n\t}\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'LOG_IN':\r\n\t\t\treturn {\r\n\t\t\t\t// store 에서 보낸 state 가 만들어짐, state 자체가 uiser.js 의 state 임\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoggedIn: true,\r\n\t\t\t\tme: action.data,\r\n\t\t\t}\r\n\t\tcase 'LOG_OUT':\r\n\t\t\treturn {\r\n\t\t\t\t// store 에서 보낸 state 가 만들어짐\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoggedIn: false,\r\n\t\t\t\tme: null,\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}