{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(logIn),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(logOut),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(changeNickname),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(loadMyInfo),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(follow),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(unfollow),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(loadFollowers),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(loadFollowings),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadFollowers),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadFollowings),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchChangeNickname),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadMyInfo),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(watchFollow),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnFollow),\n    _marked16 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogIn),\n    _marked17 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogOut),\n    _marked18 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignUp),\n    _marked19 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from \"../reducers/user\";\n\nfunction logInAPI(data) {\n  // generator 아님\n  //return axios.post('/api/login', data) // 실제 서버에 로그인 요청을 보냄 // front\n  // 실제 서버에 로그인 요청을 보냄 // back\n  //return axios.post('http://localhost:3065/user/login', data)\n  // localhost 중복 없애기\n  return axios.post('/user/login', data);\n} // 테스트 코드\n// const l = logIn({type: 'LOG_IN_REQUEST', data: {id: 'rlaalsdn8@naver.com'}})\n// \t\tl.next();\n// \t\tl.next();\n/////////////////\n\n\nfunction logIn(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function logIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(logInAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          // 서버에서 받은 결과 값을 받음\n          console.log('saga logIn 실행중::', action.data);\n          _context.next = 7;\n          return put({\n            type: LOG_IN_SUCCESS,\n            //data: action.data, // front\n            data: result.data // (성공 결과 담김) back\n\n          });\n\n        case 7:\n          console.log('saga logIn 완료 ::', result);\n          _context.next = 15;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          console.error('logIn', _context.t0);\n          _context.next = 15;\n          return put({\n            // put 은 dispatch 라고 생각하자\n            type: LOG_IN_FAILURE,\n            error: _context.t0.response.data // (실패 결과 담김)\n\n          });\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 10]]);\n}\n\nfunction logOutAPI() {\n  // return axios.post('/api/logout') front\n  return axios.post('/user/logout');\n}\n\nfunction logOut() {\n  return _regeneratorRuntime.wrap(function logOut$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(logOutAPI);\n\n        case 3:\n          // 서버에서 받은 결과 값을 받음 back\n          console.log('sagas:: logout 실행');\n          _context2.next = 6;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 6:\n          console.log('sagas:: logout 완료');\n          _context2.next = 14;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error('front logOut : ', _context2.t0);\n          _context2.next = 14;\n          return put({\n            // put 은 dispatch 라고 생각하자\n            type: LOG_OUT_FAILURE,\n            error: _context2.t0.response.data // (실패 결과 담김)\n\n          });\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 9]]);\n}\n\nfunction changeNicknameAPI(data) {\n  // generator 아님\n  // 실제 서버에 로그인 요청을 보냄 // back\n  //return axios.post('http://localhost:3065/user/login', data)\n  // localhost 중복 없애기\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\nfunction changeNickname(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function changeNickname$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(changeNicknameAPI, action.data);\n\n        case 3:\n          result = _context3.sent;\n          // 서버에서 받은 결과 값을 받음\n          console.log('saga changeNickname 실행중::', action.data);\n          _context3.next = 7;\n          return put({\n            type: CHANGE_NICKNAME_SUCCESS,\n            //data: action.data, // front\n            data: result.data // (성공 결과 담김) back\n\n          });\n\n        case 7:\n          console.log('saga changeNickname 완료 ::', result);\n          _context3.next = 15;\n          break;\n\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error('changeNickname', _context3.t0);\n          _context3.next = 15;\n          return put({\n            // put 은 dispatch 라고 생각하자\n            type: CHANGE_NICKNAME_FAILURE,\n            error: _context3.t0.response.data // (실패 결과 담김)\n\n          });\n\n        case 15:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 10]]);\n}\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction loadMyInfo(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadMyInfo$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(loadMyInfoAPI, action.data);\n\n        case 3:\n          result = _context4.sent;\n          console.log('saga loadMyInfo 실행중::', action.data);\n          _context4.next = 7;\n          return put({\n            type: LOAD_MY_INFO_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          console.log('saga loadMyInfo 완료', result);\n          _context4.next = 15;\n          break;\n\n        case 10:\n          _context4.prev = 10;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.error('saga loadMyInfo error : ', _context4.t0);\n          _context4.next = 15;\n          return put({\n            type: LOAD_MY_INFO_FAILURE,\n            error: _context4.t0.response.data\n          });\n\n        case 15:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 10]]);\n}\n\nfunction followAPI(data) {\n  // data 에 사용자 id 넣어주기\n  // return axios.post('/api/follow', data) front\n  return axios.patch(\"/user/\".concat(data, \"/follow\"));\n}\n\nfunction follow(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function follow$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(followAPI, action.data);\n\n        case 3:\n          result = _context5.sent;\n          console.log('saga follow 실행 : ', result);\n          _context5.next = 7;\n          return put({\n            type: FOLLOW_SUCCESS,\n            //data: action.data front\n            data: result.data\n          });\n\n        case 7:\n          console.log('saga follow 완료 :: ', result);\n          _context5.next = 15;\n          break;\n\n        case 10:\n          _context5.prev = 10;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error('saga follow error :: ', _context5.t0);\n          _context5.next = 15;\n          return put({\n            type: FOLLOW_FAILURE,\n            error: _context5.t0.response.data\n          });\n\n        case 15:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 10]]);\n}\n\nfunction unfollowAPI(data) {\n  // data 에 사용자 id 넣어주기\n  //return axios.post('/api/unfollow', data) front\n  return axios[\"delete\"](\"/user/\".concat(data, \"/follow\"));\n}\n\nfunction unfollow(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function unfollow$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(unfollowAPI, action.data);\n\n        case 3:\n          result = _context6.sent;\n          //yield delay(1000) front\n          console.log('saga unfollow 요청 :: ', action.data);\n          _context6.next = 7;\n          return put({\n            type: UNFOLLOW_SUCCESS,\n            //data: action.data front\n            data: result.data\n          });\n\n        case 7:\n          console.log('saga unfollow 성공:: ', result);\n          _context6.next = 15;\n          break;\n\n        case 10:\n          _context6.prev = 10;\n          _context6.t0 = _context6[\"catch\"](0);\n          console.error('saga unfollow error:: ', _context6.t0);\n          _context6.next = 15;\n          return put({\n            type: UNFOLLOW_FAILURE,\n            error: _context6.t0.response.data\n          });\n\n        case 15:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 10]]);\n}\n\nfunction signUpAPI(data) {\n  // back end server addr\n  // data 는 email, nickname, password object\n  //return axios.post('/api/signup', data) // front\n  return axios.post('/user', data); // back\n}\n\nfunction signUp(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function signUp$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(signUpAPI, action.data);\n\n        case 3:\n          result = _context7.sent;\n          console.log('saga sign up result 실행중 :: ', action.data);\n          _context7.next = 7;\n          return put({\n            type: SIGN_UP_SUCCESS //data: result.data\n\n          });\n\n        case 7:\n          console.log('saga sign up 완료 :: ', result);\n          _context7.next = 15;\n          break;\n\n        case 10:\n          _context7.prev = 10;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.error('saga signUp error : ', _context7.t0);\n          _context7.next = 15;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context7.t0.response.data\n          });\n\n        case 15:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 10]]);\n}\n\nfunction loadFollowersAPI(data) {\n  return axios.get(\"/followers\", data);\n}\n\nfunction loadFollowers(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadFollowers$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _context8.next = 3;\n          return call(loadFollowersAPI, action.data);\n\n        case 3:\n          result = _context8.sent;\n          console.log('saga followers:: 요청', action.data);\n          _context8.next = 7;\n          return put({\n            type: LOAD_FOLLOWERS_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          console.log('saga followers:: 성공', result);\n          _context8.next = 15;\n          break;\n\n        case 10:\n          _context8.prev = 10;\n          _context8.t0 = _context8[\"catch\"](0);\n          console.error('saga followers::', _context8.t0);\n          _context8.next = 15;\n          return put({\n            type: LOAD_FOLLOWERS_FAILURE,\n            error: _context8.t0.response.data\n          });\n\n        case 15:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[0, 10]]);\n}\n\nfunction loadFollowingsAPI(data) {\n  return axios.get(\"/followings\", data);\n}\n\nfunction loadFollowings(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadFollowings$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(loadFollowingsAPI, action.data);\n\n        case 3:\n          result = _context9.sent;\n          console.log('saga followings 요청::', action.data);\n          _context9.next = 7;\n          return put({\n            type: LOAD_FOLLOWINGS_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          console.log('saga followings 성공::', result);\n          _context9.next = 15;\n          break;\n\n        case 10:\n          _context9.prev = 10;\n          _context9.t0 = _context9[\"catch\"](0);\n          console.error('saga followings 실패::', _context9.t0);\n          _context9.next = 15;\n          return put({\n            type: LOAD_FOLLOWINGS_FAILURE,\n            error: _context9.t0.response.data\n          });\n\n        case 15:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 10]]);\n}\n\nfunction watchLoadFollowers() {\n  return _regeneratorRuntime.wrap(function watchLoadFollowers$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction watchLoadFollowings() {\n  return _regeneratorRuntime.wrap(function watchLoadFollowings$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\n\nfunction watchChangeNickname() {\n  return _regeneratorRuntime.wrap(function watchChangeNickname$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nfunction watchLoadMyInfo() {\n  return _regeneratorRuntime.wrap(function watchLoadMyInfo$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}\n\nfunction watchFollow() {\n  return _regeneratorRuntime.wrap(function watchFollow$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeLatest(FOLLOW_REQUEST, follow);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\n\nfunction watchUnFollow() {\n  return _regeneratorRuntime.wrap(function watchUnFollow$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return takeLatest(UNFOLLOW_REQUEST, unfollow);\n\n        case 2:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15);\n}\n\nfunction watchLogIn() {\n  return _regeneratorRuntime.wrap(function watchLogIn$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return takeLatest(LOG_IN_REQUEST, logIn);\n\n        case 2:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, _marked18);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.next = 2;\n          return all([fork(watchLoadFollowers), fork(watchLoadFollowings), fork(watchChangeNickname), fork(watchLoadMyInfo), fork(watchFollow), fork(watchUnFollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n\n        case 2:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, _marked19);\n}","map":{"version":3,"sources":["D:/intellijProjects/react-nodebird/prepare/front/sagas/user.js"],"names":["logIn","logOut","changeNickname","loadMyInfo","follow","unfollow","signUp","loadFollowers","loadFollowings","watchLoadFollowers","watchLoadFollowings","watchChangeNickname","watchLoadMyInfo","watchFollow","watchUnFollow","watchLogIn","watchLogOut","watchSignUp","userSaga","all","call","delay","fork","put","takeLatest","axios","CHANGE_NICKNAME_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","logInAPI","data","post","action","result","console","log","type","error","response","logOutAPI","changeNicknameAPI","patch","nickname","loadMyInfoAPI","get","followAPI","unfollowAPI","signUpAPI","loadFollowersAPI","loadFollowingsAPI"],"mappings":"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","sourcesContent":["import {all, call, delay, fork, put, takeLatest} from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport {\r\n\tCHANGE_NICKNAME_FAILURE,\r\n\tCHANGE_NICKNAME_REQUEST,\r\n\tCHANGE_NICKNAME_SUCCESS,\r\n\tFOLLOW_FAILURE,\r\n\tFOLLOW_REQUEST,\r\n\tFOLLOW_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWERS_REQUEST,\r\n\tLOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS,\r\n\tLOAD_MY_INFO_FAILURE,\r\n\tLOAD_MY_INFO_REQUEST,\r\n\tLOAD_MY_INFO_SUCCESS,\r\n\tLOG_IN_FAILURE,\r\n\tLOG_IN_REQUEST,\r\n\tLOG_IN_SUCCESS,\r\n\tLOG_OUT_FAILURE,\r\n\tLOG_OUT_REQUEST,\r\n\tLOG_OUT_SUCCESS,\r\n\tSIGN_UP_FAILURE,\r\n\tSIGN_UP_REQUEST,\r\n\tSIGN_UP_SUCCESS,\r\n\tUNFOLLOW_FAILURE,\r\n\tUNFOLLOW_REQUEST,\r\n\tUNFOLLOW_SUCCESS,\r\n} from \"../reducers/user\";\r\n\r\n\r\nfunction logInAPI(data) { // generator 아님\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t//return axios.post('/api/login', data) // 실제 서버에 로그인 요청을 보냄 // front\r\n\r\n\t// 실제 서버에 로그인 요청을 보냄 // back\r\n\t//return axios.post('http://localhost:3065/user/login', data)\r\n\r\n\t// localhost 중복 없애기\r\n\treturn axios.post('/user/login', data)\r\n}\r\n\r\n// 테스트 코드\r\n// const l = logIn({type: 'LOG_IN_REQUEST', data: {id: 'rlaalsdn8@naver.com'}})\r\n// \t\tl.next();\r\n// \t\tl.next();\r\n/////////////////\r\nfunction* logIn(action) { // login action request 가 action 에 전달\r\n\ttry { // 요청 실패 대비\r\n\t\t//yield delay(1000) // front\r\n\t\tconst result = yield call(logInAPI, action.data) // 서버에서 받은 결과 값을 받음\r\n\t\tconsole.log('saga logIn 실행중::', action.data)\r\n\t\tyield put({\r\n\t\t\ttype: LOG_IN_SUCCESS,\r\n\t\t\t//data: action.data, // front\r\n\t\t\tdata: result.data // (성공 결과 담김) back\r\n\t\t})\r\n\t\tconsole.log('saga logIn 완료 ::', result)\r\n\t} catch (err) {\r\n\t\tconsole.error('logIn', err)\r\n\t\tyield put({ // put 은 dispatch 라고 생각하자\r\n\t\t\ttype: LOG_IN_FAILURE,\r\n\t\t\terror: err.response.data // (실패 결과 담김)\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction logOutAPI() {\r\n\t// return axios.post('/api/logout') front\r\n\treturn axios.post('/user/logout')\r\n}\r\n\r\nfunction* logOut() {\r\n\ttry { // 요청 실패 대비\r\n\t\t//yield delay(1000) front\r\n\t\tyield call(logOutAPI) // 서버에서 받은 결과 값을 받음 back\r\n\t\tconsole.log('sagas:: logout 실행')\r\n\t\tyield put({\r\n\t\t\ttype: LOG_OUT_SUCCESS,\r\n\t\t})\r\n\t\tconsole.log('sagas:: logout 완료')\r\n\t} catch (err) {\r\n\t\tconsole.error('front logOut : ', err)\r\n\t\tyield put({ // put 은 dispatch 라고 생각하자\r\n\t\t\ttype: LOG_OUT_FAILURE,\r\n\t\t\terror: err.response.data // (실패 결과 담김)\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction changeNicknameAPI(data) { // generator 아님\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t // 실제 서버에 로그인 요청을 보냄 // back\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t //return axios.post('http://localhost:3065/user/login', data)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t // localhost 중복 없애기\r\n\treturn axios.patch('/user/nickname', {nickname: data})\r\n}\r\n\r\nfunction* changeNickname(action) { // login action request 가 action 에 전달\r\n\ttry { // 요청 실패 대비\r\n\t\t//yield delay(1000) // front\r\n\t\tconst result = yield call(changeNicknameAPI, action.data) // 서버에서 받은 결과 값을 받음\r\n\t\tconsole.log('saga changeNickname 실행중::', action.data)\r\n\t\tyield put({\r\n\t\t\ttype: CHANGE_NICKNAME_SUCCESS,\r\n\t\t\t//data: action.data, // front\r\n\t\t\tdata: result.data // (성공 결과 담김) back\r\n\t\t})\r\n\t\tconsole.log('saga changeNickname 완료 ::', result)\r\n\t} catch (err) {\r\n\t\tconsole.error('changeNickname', err)\r\n\t\tyield put({ // put 은 dispatch 라고 생각하자\r\n\t\t\ttype: CHANGE_NICKNAME_FAILURE,\r\n\t\t\terror: err.response.data // (실패 결과 담김)\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction loadMyInfoAPI() {\r\n\treturn axios.get('/user')\r\n}\r\n\r\nfunction* loadMyInfo(action) {\r\n\ttry {\r\n\t\tconst result = yield call(loadMyInfoAPI, action.data)\r\n\t\tconsole.log('saga loadMyInfo 실행중::', action.data)\r\n\t\tyield put({\r\n\t\t\ttype: LOAD_MY_INFO_SUCCESS,\r\n\t\t\tdata: result.data\r\n\t\t})\r\n\t\tconsole.log('saga loadMyInfo 완료', result)\r\n\t} catch (err) {\r\n\t\tconsole.error('saga loadMyInfo error : ', err)\r\n\t\tyield put({\r\n\t\t\ttype: LOAD_MY_INFO_FAILURE,\r\n\t\t\terror: err.response.data\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction followAPI(data) { // data 에 사용자 id 넣어주기\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t // return axios.post('/api/follow', data) front\r\n\treturn axios.patch(`/user/${data}/follow`)\r\n}\r\n\r\nfunction* follow(action) {\r\n\ttry {\r\n\t\t//yield delay(1000) front\r\n\t\tconst result = yield call(followAPI, action.data)\r\n\t\tconsole.log('saga follow 실행 : ', result)\r\n\t\tyield put({\r\n\t\t\ttype: FOLLOW_SUCCESS,\r\n\t\t\t//data: action.data front\r\n\t\t\tdata: result.data\r\n\t\t})\r\n\t\tconsole.log('saga follow 완료 :: ', result)\r\n\t} catch (err) {\r\n\t\tconsole.error('saga follow error :: ', err)\r\n\t\tyield put({\r\n\t\t\ttype: FOLLOW_FAILURE,\r\n\t\t\terror: err.response.data,\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction unfollowAPI(data) {// data 에 사용자 id 넣어주기\r\n\t//return axios.post('/api/unfollow', data) front\r\n\treturn axios.delete(`/user/${data}/follow`)\r\n}\r\n\r\nfunction* unfollow(action) {\r\n\ttry {\r\n\t\tconst result = yield call(unfollowAPI, action.data)\r\n\t\t//yield delay(1000) front\r\n\t\tconsole.log('saga unfollow 요청 :: ', action.data)\r\n\t\tyield put({\r\n\t\t\ttype: UNFOLLOW_SUCCESS,\r\n\t\t\t//data: action.data front\r\n\t\t\tdata: result.data\r\n\t\t})\r\n\t\tconsole.log('saga unfollow 성공:: ', result)\r\n\t} catch (err) {\r\n\t\tconsole.error('saga unfollow error:: ', err)\r\n\t\tyield put({\r\n\t\t\ttype: UNFOLLOW_FAILURE,\r\n\t\t\terror: err.response.data,\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n\t// back end server addr\r\n\t// data 는 email, nickname, password object\r\n\t//return axios.post('/api/signup', data) // front\r\n\treturn axios.post('/user', data) // back\r\n}\r\n\r\nfunction* signUp(action) {\r\n\ttry {\r\n\t\t//yield delay(1000)\r\n\t\tconst result = yield call(signUpAPI, action.data)\r\n\t\tconsole.log('saga sign up result 실행중 :: ', action.data)\r\n\t\tyield put({\r\n\t\t\ttype: SIGN_UP_SUCCESS,\r\n\t\t\t//data: result.data\r\n\t\t})\r\n\t\tconsole.log('saga sign up 완료 :: ', result)\r\n\t} catch (err) {\r\n\t\tconsole.error('saga signUp error : ', err)\r\n\t\tyield put({\r\n\t\t\ttype: SIGN_UP_FAILURE,\r\n\t\t\terror: err.response.data\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction loadFollowersAPI(data) {\r\n\treturn axios.get(`/followers`, data)\r\n}\r\n\r\nfunction* loadFollowers(action) {\r\n\ttry {\r\n\t\tconst result = yield call(loadFollowersAPI, action.data)\r\n\t\tconsole.log('saga followers:: 요청', action.data)\r\n\t\tyield put({\r\n\t\t\ttype: LOAD_FOLLOWERS_SUCCESS,\r\n\t\t\tdata: result.data,\r\n\t\t})\r\n\t\tconsole.log('saga followers:: 성공', result)\r\n\t} catch (err) {\r\n\t\tconsole.error('saga followers::', err)\r\n\t\tyield put({\r\n\t\t\ttype: LOAD_FOLLOWERS_FAILURE,\r\n\t\t\terror: err.response.data,\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction loadFollowingsAPI(data) {\r\n\treturn axios.get(`/followings`, data)\r\n}\r\n\r\nfunction* loadFollowings(action) {\r\n\ttry {\r\n\t\tconst result = yield call(loadFollowingsAPI, action.data)\r\n\t\tconsole.log('saga followings 요청::', action.data)\r\n\t\tyield put({\r\n\t\t\ttype: LOAD_FOLLOWINGS_SUCCESS,\r\n\t\t\tdata: result.data\r\n\t\t})\r\n\t\tconsole.log('saga followings 성공::', result)\r\n\t} catch (err) {\r\n\t\tconsole.error('saga followings 실패::', err)\r\n\t\tyield put({\r\n\t\t\ttype: LOAD_FOLLOWINGS_FAILURE,\r\n\t\t\terror: err.response.data\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction* watchLoadFollowers() {\r\n\tyield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers)\r\n}\r\n\r\nfunction* watchLoadFollowings() {\r\n\tyield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings)\r\n}\r\n\r\nfunction* watchChangeNickname() {\r\n\tyield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname)\r\n}\r\n\r\nfunction* watchLoadMyInfo() {\r\n\tyield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo)\r\n}\r\n\r\nfunction* watchFollow() {\r\n\tyield takeLatest(FOLLOW_REQUEST, follow)\r\n}\r\n\r\nfunction* watchUnFollow() {\r\n\tyield takeLatest(UNFOLLOW_REQUEST, unfollow)\r\n}\r\n\r\nfunction* watchLogIn() {\t// 로그인 액션이 실행될때까지 기다리겠다는 뜻\r\n\tyield takeLatest(LOG_IN_REQUEST, logIn) //LOG_IN_REQUEST 액션이 실행되면 logIn 함수 실행\r\n}\r\n\r\nfunction* watchLogOut() {\t// 로그아웃 액션이 실행될때까지 기다리겠다는 뜻\r\n\tyield takeLatest(LOG_OUT_REQUEST, logOut) //LOG_OUT_REQUEST 액션이 실행되면 logIn 함수 실행\r\n}\r\n\r\nfunction* watchSignUp() {\t// 회원가입 액션이 실행될때까지 기다리겠다는 뜻\r\n\tyield takeLatest(SIGN_UP_REQUEST, signUp) // SIGN_UP_REQUEST 액션이 실행되면 logIn 함수 실행\r\n}\r\n\r\nexport default function* userSaga() {\r\n\tyield all([\r\n\t\tfork(watchLoadFollowers),\r\n\t\tfork(watchLoadFollowings),\r\n\t\tfork(watchChangeNickname),\r\n\t\tfork(watchLoadMyInfo),\r\n\t\tfork(watchFollow),\r\n\t\tfork(watchUnFollow),\r\n\t\tfork(watchLogIn),\r\n\t\tfork(watchLogOut),\r\n\t\tfork(watchSignUp),\r\n\t])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}