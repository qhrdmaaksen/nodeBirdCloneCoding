{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Document, { Html, Main, Head, NextScript } from 'next/document';\nimport { ServerStyleSheet } from 'styled-components'; // ServerStyleSheet 는 styled component 를 ssr 할 수있게 제공\n// document 커스텀\n\nexport default class MyDocument extends Document {\n  // document 와 app.js 에서는 사용 getInitialProps (SSR Method)\n  static async getInitialProps(ctx) {\n    const sheet = new ServerStyleSheet();\n    const originalRenderPage = ctx.renderPage;\n\n    try {\n      // 원래 document 기능에다가 styleSheet 가 styled components 를 ssr 을 해주는 기능\n      ctx.renderPage = () => originalRenderPage({\n        enhanceApp: App => props => sheet.collectStyles(__jsx(App, props))\n      });\n\n      const initialProps = await Document.getInitialProps(ctx);\n      return _objectSpread(_objectSpread({}, initialProps), {}, {\n        styles: __jsx(React.Fragment, null, initialProps.styles, sheet.getStyleElement())\n      });\n    } finally {\n      sheet.seal();\n    }\n  }\n\n  render() {\n    return __jsx(Html, null, __jsx(Head, null), __jsx(\"body\", null, __jsx(Main, null), __jsx(NextScript, null)));\n  }\n\n}","map":{"version":3,"sources":["D:/intellijProjects/react-nodebird/prepare/front/pages/_document.js"],"names":["React","Document","Html","Main","Head","NextScript","ServerStyleSheet","MyDocument","getInitialProps","ctx","sheet","originalRenderPage","renderPage","enhanceApp","App","props","collectStyles","initialProps","styles","getStyleElement","seal","render"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAkBC,IAAlB,EAAwBC,IAAxB,EAA8BC,IAA9B,EAAoCC,UAApC,QAAqD,eAArD;AACA,SAAQC,gBAAR,QAA+B,mBAA/B,C,CAAmD;AAEnD;;AACA,eAAe,MAAMC,UAAN,SAAyBN,QAAzB,CAAkC;AAChD;AAC4B,eAAfO,eAAe,CAACC,GAAD,EAAM;AACjC,UAAMC,KAAK,GAAG,IAAIJ,gBAAJ,EAAd;AACA,UAAMK,kBAAkB,GAAGF,GAAG,CAACG,UAA/B;;AAEA,QAAI;AACH;AACAH,MAAAA,GAAG,CAACG,UAAJ,GAAiB,MAAMD,kBAAkB,CAAC;AACzCE,QAAAA,UAAU,EAAEC,GAAG,IAAIC,KAAK,IAAIL,KAAK,CAACM,aAAN,CAAoB,MAAC,GAAD,EAASD,KAAT,CAApB;AADa,OAAD,CAAzC;;AAIA,YAAME,YAAY,GAAG,MAAMhB,QAAQ,CAACO,eAAT,CAAyBC,GAAzB,CAA3B;AACA,6CACIQ,YADJ;AAECC,QAAAA,MAAM,EACJ,4BACED,YAAY,CAACC,MADf,EAEER,KAAK,CAACS,eAAN,EAFF;AAHH;AASA,KAhBD,SAgBU;AACTT,MAAAA,KAAK,CAACU,IAAN;AACA;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACR,WACE,MAAC,IAAD,QACC,MAAC,IAAD,OADD,EAEC,oBACA,MAAC,IAAD,OADA,EAEA,MAAC,UAAD,OAFA,CAFD,CADF;AASA;;AArC+C","sourcesContent":["import React from 'react'\r\nimport Document, {Html, Main, Head, NextScript} from 'next/document'\r\nimport {ServerStyleSheet} from 'styled-components' // ServerStyleSheet 는 styled component 를 ssr 할 수있게 제공\r\n\r\n// document 커스텀\r\nexport default class MyDocument extends Document {\r\n\t// document 와 app.js 에서는 사용 getInitialProps (SSR Method)\r\n\tstatic async getInitialProps(ctx) {\r\n\t\tconst sheet = new ServerStyleSheet();\r\n\t\tconst originalRenderPage = ctx.renderPage;\r\n\r\n\t\ttry {\r\n\t\t\t// 원래 document 기능에다가 styleSheet 가 styled components 를 ssr 을 해주는 기능\r\n\t\t\tctx.renderPage = () => originalRenderPage({\r\n\t\t\t\tenhanceApp: App => props => sheet.collectStyles(<App {...props} />),\r\n\t\t\t});\r\n\r\n\t\t\tconst initialProps = await Document.getInitialProps(ctx);\r\n\t\t\treturn {\r\n\t\t\t\t...initialProps,\r\n\t\t\t\tstyles: (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t{initialProps.styles}\r\n\t\t\t\t\t\t\t{sheet.getStyleElement()}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t),\r\n\t\t\t};\r\n\t\t} finally {\r\n\t\t\tsheet.seal();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t\t<Html>\r\n\t\t\t\t\t<Head/>\r\n\t\t\t\t\t<body>\r\n\t\t\t\t\t<Main/>\r\n\t\t\t\t\t<NextScript/>\r\n\t\t\t\t\t</body>\r\n\t\t\t\t</Html>\r\n\t\t);\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}