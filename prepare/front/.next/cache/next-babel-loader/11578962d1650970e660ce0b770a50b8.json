{"ast":null,"code":"var _jsxFileName = \"D:\\\\intellijProjects\\\\react-nodebird\\\\prepare\\\\front\\\\component\\\\PostForm.js\";\nvar __jsx = React.createElement;\nimport { Form, Input, Button } from 'antd';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addPost } from '../reducers/post';\nimport useInput from \"../hooks/useInput\";\n\nconst PostForm = () => {\n  const {\n    imagePaths,\n    addPostDone\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const [text, onChangeText, setText] = useInput('');\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  const onSubmit = useCallback(() => {\n    dispatch(addPost(text));\n  }, [text]);\n  const imageInput = useRef();\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onChangeImages = useCallback(e => {\n    console.log('images info :: ', e.target.files); // 이미지에 대한 정보가 담겨있음\n\n    const imageFormData = new FormData(); // form data 를 multipart 형식으로 \n  }, [input]);\n  return (// post Form\n    __jsx(Form, {\n      style: {\n        margin: '10px 0 20px'\n      },\n      encType: \"multipart/form-data\",\n      onFinish: onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 4\n      }\n    }, __jsx(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }, __jsx(\"input\", {\n      type: \"file\",\n      name: \"image\",\n      multiple: true,\n      hidden: true,\n      ref: imageInput,\n      onChange: onChangeImages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 6\n      }\n    }), __jsx(Button, {\n      onClick: onClickImageUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 6\n      }\n    }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n      type: \"primary\",\n      style: {\n        float: 'right'\n      },\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 6\n      }\n    }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }\n    }, imagePaths.map(v => {\n      return (// 이미지 등록을 했을 시, 이미지 경로가 저장되며, 반복문으로 표시해줌\n        __jsx(\"div\", {\n          key: v,\n          style: {\n            display: 'inline-block'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 9\n          }\n        }, __jsx(\"img\", {\n          src: `http://localhost:3065/${v}`,\n          style: {\n            width: '200px'\n          },\n          alt: v,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 10\n          }\n        }), __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 10\n          }\n        }, __jsx(Button, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }\n        }, \"\\uC81C\\uAC70\")))\n      );\n    })))\n  );\n};\n\nexport default PostForm;","map":{"version":3,"sources":["D:/intellijProjects/react-nodebird/prepare/front/component/PostForm.js"],"names":["Form","Input","Button","React","useCallback","useEffect","useRef","useState","useSelector","useDispatch","addPost","useInput","PostForm","imagePaths","addPostDone","state","post","dispatch","text","onChangeText","setText","onSubmit","imageInput","onClickImageUpload","current","click","onChangeImages","e","console","log","target","files","imageFormData","FormData","input","margin","float","map","v","display","width"],"mappings":"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","sourcesContent":["import {Form, Input, Button} from 'antd'\r\nimport React, {useCallback, useEffect, useRef, useState} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {addPost} from '../reducers/post'\r\nimport useInput from \"../hooks/useInput\";\r\n\r\nconst PostForm = () => {\r\n\tconst {imagePaths, addPostDone} = useSelector((state) => state.post)\r\n\tconst dispatch = useDispatch()\r\n\tconst [text, onChangeText, setText] = useInput('')\r\n\r\n\tuseEffect(() => {\r\n\t\tif (addPostDone) {\r\n\t\t\tsetText('')\r\n\t\t}\r\n\t}, [addPostDone])\r\n\r\n\tconst onSubmit = useCallback(() => {\r\n\t\tdispatch(addPost(text))\r\n\t}, [text])\r\n\r\n\tconst imageInput = useRef()\r\n\tconst onClickImageUpload = useCallback(() => {\r\n\t\timageInput.current.click()\r\n\t}, [imageInput.current])\r\n\r\n\tconst onChangeImages = useCallback(\r\n\t\t\t(e) => {\r\n\t\t\t\tconsole.log('images info :: ', e.target.files) // 이미지에 대한 정보가 담겨있음\r\n\t\t\t\tconst imageFormData = new FormData() // form data 를 multipart 형식으로 \r\n\t\t\t},\r\n\t\t\t[input],\r\n\t);\r\n\r\n\r\n\treturn (\r\n\t\t\t// post Form\r\n\t\t\t<Form style={{margin: '10px 0 20px'}} encType=\"multipart/form-data\" onFinish={onSubmit}>\r\n\t\t\t\t<Input.TextArea value={text} onChange={onChangeText} maxLength={140} placeholder=\"어떤 신기한 일이 있었나요?\"/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input type=\"file\" name=\"image\" multiple hidden ref={imageInput} onChange={onChangeImages}/>\r\n\t\t\t\t\t<Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n\t\t\t\t\t<Button type=\"primary\" style={{float: 'right'}} htmlType=\"submit\">\r\n\t\t\t\t\t\t짹짹\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{imagePaths.map((v) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t// 이미지 등록을 했을 시, 이미지 경로가 저장되며, 반복문으로 표시해줌\r\n\t\t\t\t\t\t\t\t<div key={v} style={{display: 'inline-block'}}>\r\n\t\t\t\t\t\t\t\t\t<img src={`http://localhost:3065/${v}`} style={{width: '200px'}} alt={v}/>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<Button>제거</Button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</Form>\r\n\t)\r\n}\r\n\r\nexport default PostForm\r\n"]},"metadata":{},"sourceType":"module"}