{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport { Button } from 'antd';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from \"../reducers/user\";\n\nvar FollowButton = function FollowButton(_ref) {\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me,\n      followLoading = _useSelector.followLoading,\n      unfollowLoading = _useSelector.unfollowLoading; // v.id 가 포스트 작성자의 id 라면\n\n\n  var isFollowing = me === null || me === void 0 ? void 0 : me.Followings.find(function (v) {\n    return v.id === post.User.id;\n  });\n  var onClickButton = useCallback(function () {\n    if (isFollowing) {\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: post.User.id\n        /*팔로우할때 사용자의 정보를 보내주는곳*/\n\n      });\n    } else {\n      dispatch({\n        type: FOLLOW_REQUEST,\n        data: post.User.id\n      });\n    }\n  }, [isFollowing]);\n\n  if (post.User.id === me.id) {\n    // 포스트 작성자의 아이디와 내 아이디가 같다면 팔로우 버튼 null\n    return null;\n  }\n\n  return __jsx(Button, {\n    loading: followLoading || unfollowLoading,\n    onClick: onClickButton\n  }, isFollowing ? '언팔로우' : '팔로우', \" \");\n};\n\nexport default FollowButton;","map":{"version":3,"sources":["D:/intellijProjects/react-nodebird/prepare/front/components/FollowButton.js"],"names":["React","useCallback","Button","useDispatch","useSelector","FOLLOW_REQUEST","UNFOLLOW_REQUEST","FollowButton","post","dispatch","state","user","me","followLoading","unfollowLoading","isFollowing","Followings","find","v","id","User","onClickButton","type","data"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AAEA,SAAQC,MAAR,QAAqB,MAArB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,cAAR,EAAwBC,gBAAxB,QAA+C,kBAA/C;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAY;AAAA,MAAVC,IAAU,QAAVA,IAAU;AAChC,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AACA,qBAA6CC,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAxD;AAAA,MAAOC,EAAP,gBAAOA,EAAP;AAAA,MAAWC,aAAX,gBAAWA,aAAX;AAAA,MAA0BC,eAA1B,gBAA0BA,eAA1B,CAFgC,CAIhC;;;AACA,MAAMC,WAAW,GAAGH,EAAH,aAAGA,EAAH,uBAAGA,EAAE,CAAEI,UAAJ,CAAeC,IAAf,CAAoB,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACC,EAAF,KAASX,IAAI,CAACY,IAAL,CAAUD,EAA1B;AAAA,GAApB,CAApB;AAEA,MAAME,aAAa,GAAGpB,WAAW,CAAC,YAAM;AACvC,QAAIc,WAAJ,EAAiB;AAChBN,MAAAA,QAAQ,CAAC;AACRa,QAAAA,IAAI,EAAEhB,gBADE;AAERiB,QAAAA,IAAI,EAAEf,IAAI,CAACY,IAAL,CAAUD;AAAI;;AAFZ,OAAD,CAAR;AAIA,KALD,MAKO;AACNV,MAAAA,QAAQ,CAAC;AACRa,QAAAA,IAAI,EAAEjB,cADE;AAERkB,QAAAA,IAAI,EAAEf,IAAI,CAACY,IAAL,CAAUD;AAFR,OAAD,CAAR;AAIA;AACD,GAZgC,EAY9B,CAACJ,WAAD,CAZ8B,CAAjC;;AAcA,MAAIP,IAAI,CAACY,IAAL,CAAUD,EAAV,KAAiBP,EAAE,CAACO,EAAxB,EAA4B;AAAE;AAC7B,WAAO,IAAP;AACA;;AAED,SACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEN,aAAa,IAAIC,eAAlC;AAAmD,IAAA,OAAO,EAAEO;AAA5D,KACEN,WAAW,GAAG,MAAH,GAAY,KADzB,MADF;AAKA,CA9BD;;AAkCA,eAAeR,YAAf","sourcesContent":["import React, {useCallback} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {Button} from 'antd'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {FOLLOW_REQUEST, UNFOLLOW_REQUEST} from \"../reducers/user\";\r\n\r\nconst FollowButton = ({post}) => {\r\n\tconst dispatch = useDispatch()\r\n\tconst {me, followLoading, unfollowLoading} = useSelector((state) => state.user)\r\n\r\n\t// v.id 가 포스트 작성자의 id 라면\r\n\tconst isFollowing = me?.Followings.find((v) => v.id === post.User.id)\r\n\r\n\tconst onClickButton = useCallback(() => {\r\n\t\tif (isFollowing) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UNFOLLOW_REQUEST,\r\n\t\t\t\tdata: post.User.id, /*팔로우할때 사용자의 정보를 보내주는곳*/\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: FOLLOW_REQUEST,\r\n\t\t\t\tdata: post.User.id,\r\n\t\t\t})\r\n\t\t}\r\n\t}, [isFollowing])\r\n\r\n\tif (post.User.id === me.id) { // 포스트 작성자의 아이디와 내 아이디가 같다면 팔로우 버튼 null\r\n\t\treturn null\r\n\t}\r\n\r\n\treturn (\r\n\t\t\t<Button loading={followLoading || unfollowLoading} onClick={onClickButton}>\r\n\t\t\t\t{isFollowing ? '언팔로우' : '팔로우'} {/*팔로우상태라면 true 상태면 언팔로우, false 라면 팔로우*/}\r\n\t\t\t</Button>\r\n\t)\r\n}\r\nFollowButton.propTypes = {\r\n\tpost: PropTypes.object.isRequired,\r\n}\r\nexport default FollowButton"]},"metadata":{},"sourceType":"module"}