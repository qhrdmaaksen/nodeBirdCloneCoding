{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport Link from 'next/link';\nimport { Menu, Input, Row, Col } from 'antd'; // antd 에 Menu 사용\n\nimport styled, { createGlobalStyle } from 'styled-components';\nimport UserProfile from '../components/UserProfile';\nimport LoginForm from '../components/LoginForm';\nimport { useSelector } from 'react-redux';\nimport useInput from \"../hooks/useInput\";\nimport Router from \"next/router\";\nvar Global = createGlobalStyle([\".ant-row{margin-right:0 !important;margin-left:0 !important;}.ant-col:first-child{padding-left:0 !important;}.ant-col:last-child{padding-right:0 !important;}\"]); // antd 에서 사용한 Input.Search 를 styled components 로 바꿔 넣어줌\n\nvar SearchInput = styled(Input.Search).withConfig({\n  displayName: \"AppLayout__SearchInput\",\n  componentId: \"sc-1x6xxdo-0\"\n})([\"vertical-align:middle;\"]);\n\nvar AppLayout = function AppLayout(_ref) {\n  var children = _ref.children;\n\n  //const [isLoggedIn, setIsLoggedIn] = useState(false)\n  // 유저 자체를 받아와서 유저 안에서 isLoggedIn 을 구조분해 할당\n  //const { isLoggedIn } = useSelector((state) => state.user)\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      searchInput = _useInput2[0],\n      onChangeSearchInput = _useInput2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var onSearch = useCallback(function () {\n    Router.push(\"/hashtag/\".concat(searchInput)); // searchInput 해쉬태그로 이동\n  }, [searchInput]);\n  return __jsx(\"div\", null, __jsx(Global, null), __jsx(Menu, {\n    mode: \"horizontal\"\n  }, __jsx(Menu.Item, {\n    key: \"home\"\n  }, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", null, \"\\uB178\\uB4DC\\uBC84\\uB4DC\"))), __jsx(Menu.Item, {\n    key: \"profile\"\n  }, __jsx(Link, {\n    href: \"/profile\"\n  }, __jsx(\"a\", null, \"\\uD504\\uB85C\\uD544\"))), __jsx(Menu.Item, {\n    key: \"mail\"\n  }, __jsx(SearchInput // 검색창을 통해 해쉬태그 검색\n  , {\n    enterButton: true,\n    value: searchInput,\n    onChange: onChangeSearchInput,\n    onSearch: onSearch\n  }))), __jsx(Row, {\n    gutter: 8\n  }, __jsx(Col, {\n    xs: 24,\n    md: 6\n  }, me ? __jsx(UserProfile, null) : __jsx(LoginForm, null)), __jsx(Col, {\n    xs: 24,\n    md: 12\n  }, children, \" \"), __jsx(Col, {\n    xs: 24,\n    md: 6\n  }, __jsx(\"a\", {\n    href: \"https://qhrdmaaksen.github.io/\",\n    target: '_blank',\n    rel: \"noreferrer noopener\"\n  }, \"Made in Vitamin\"))));\n};\n\nexport default AppLayout;","map":{"version":3,"sources":["D:/intellijProjects/react-nodebird/prepare/front/components/AppLayout.js"],"names":["React","useCallback","Link","Menu","Input","Row","Col","styled","createGlobalStyle","UserProfile","LoginForm","useSelector","useInput","Router","Global","SearchInput","Search","AppLayout","children","searchInput","onChangeSearchInput","state","user","me","onSearch","push"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,GAArB,EAA0BC,GAA1B,QAAoC,MAApC,C,CAA2C;;AAC3C,OAAOC,MAAP,IAAgBC,iBAAhB,QAAwC,mBAAxC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAGA,IAAMC,MAAM,GAAGN,iBAAH,mKAAZ,C,CAeA;;AACA,IAAMO,WAAW,GAAGR,MAAM,CAACH,KAAK,CAACY,MAAP,CAAT;AAAA;AAAA;AAAA,8BAAjB;;AAIA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;;AACjC;AACA;AACA;AACA,kBAA2CN,QAAQ,CAAC,EAAD,CAAnD;AAAA;AAAA,MAAOO,WAAP;AAAA,MAAoBC,mBAApB;;AACA,qBAAaT,WAAW,CAAC,UAACU,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAxB;AAAA,MAAOC,EAAP,gBAAOA,EAAP;;AAEA,MAAMC,QAAQ,GAAGvB,WAAW,CAC1B,YAAM;AACLY,IAAAA,MAAM,CAACY,IAAP,oBAAwBN,WAAxB,GADK,CACkC;AACvC,GAHyB,EAI1B,CAACA,WAAD,CAJ0B,CAA5B;AAQA,SACE,mBACC,MAAC,MAAD,OADD,EAEC,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,KACC,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,GAAG,EAAC;AAAf,KACC,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,KACC,4CADD,CADD,CADD,EAMC,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,GAAG,EAAC;AAAf,KACC,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,KACC,sCADD,CADD,CAND,EAWC,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,GAAG,EAAC;AAAf,KACC,MAAC,WAAD,CAAa;AAAb;AACE,IAAA,WAAW,MADb;AAEE,IAAA,KAAK,EAAEA,WAFT;AAGE,IAAA,QAAQ,EAAEC,mBAHZ;AAIE,IAAA,QAAQ,EAAEI;AAJZ,IADD,CAXD,CAFD,EAuBC,MAAC,GAAD;AAAK,IAAA,MAAM,EAAE;AAAb,KAEC,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE;AAAjB,KAGED,EAAE,GAAG,MAAC,WAAD,OAAH,GAAoB,MAAC,SAAD,OAHxB,CAFD,EAOC,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE;AAAjB,KACEL,QADF,MAPD,EAUC,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE;AAAjB,KACC;AAAG,IAAA,IAAI,EAAC,gCAAR;AAAyC,IAAA,MAAM,EAAE,QAAjD;AAA2D,IAAA,GAAG,EAAC;AAA/D,uBADD,CAVD,CAvBD,CADF;AA0CA,CAzDD;;AA+DA,eAAeD,SAAf","sourcesContent":["import React, {useCallback} from 'react'\r\nimport Link from 'next/link'\r\nimport PropTypes from 'prop-types'\r\nimport {Menu, Input, Row, Col} from 'antd' // antd 에 Menu 사용\r\nimport styled, {createGlobalStyle} from 'styled-components'\r\nimport UserProfile from '../components/UserProfile'\r\nimport LoginForm from '../components/LoginForm'\r\nimport {useSelector} from 'react-redux'\r\nimport useInput from \"../hooks/useInput\";\r\nimport Router from \"next/router\";\r\n\r\n\r\nconst Global = createGlobalStyle`\r\n\t.ant-row {\r\n\t\tmargin-right: 0 !important;\r\n\t\tmargin-left: 0 !important;\r\n\t}\r\n\r\n\t.ant-col:first-child {\r\n\t\tpadding-left: 0 !important;\r\n\t}\r\n\r\n\t.ant-col:last-child {\r\n\t\tpadding-right: 0 !important;\r\n\t}\r\n`\r\n\r\n// antd 에서 사용한 Input.Search 를 styled components 로 바꿔 넣어줌\r\nconst SearchInput = styled(Input.Search)`\r\n\tvertical-align: middle;\r\n`\r\n\r\nconst AppLayout = ({children}) => {\r\n\t//const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\t// 유저 자체를 받아와서 유저 안에서 isLoggedIn 을 구조분해 할당\r\n\t//const { isLoggedIn } = useSelector((state) => state.user)\r\n\tconst [searchInput, onChangeSearchInput] = useInput('')\r\n\tconst {me} = useSelector((state) => state.user)\r\n\t\r\n\tconst onSearch = useCallback(\r\n\t\t\t() => {\r\n\t\t\t\tRouter.push(`/hashtag/${searchInput}`) // searchInput 해쉬태그로 이동\r\n\t\t\t},\r\n\t\t\t[searchInput],\r\n\t);\r\n\t\r\n\r\n\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Global/>\r\n\t\t\t\t<Menu mode=\"horizontal\">\r\n\t\t\t\t\t<Menu.Item key=\"home\">\r\n\t\t\t\t\t\t<Link href=\"/\">\r\n\t\t\t\t\t\t\t<a>노드버드</a>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key=\"profile\">\r\n\t\t\t\t\t\t<Link href=\"/profile\">\r\n\t\t\t\t\t\t\t<a>프로필</a>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key=\"mail\">\r\n\t\t\t\t\t\t<SearchInput // 검색창을 통해 해쉬태그 검색\r\n\t\t\t\t\t\t\t\tenterButton\r\n\t\t\t\t\t\t\t\tvalue={searchInput}\r\n\t\t\t\t\t\t\t\tonChange={onChangeSearchInput}\r\n\t\t\t\t\t\t\t\tonSearch={onSearch}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</Menu>\r\n\t\t\t\t{/*컬럼 사이의 간격 gutter*/}\r\n\t\t\t\t<Row gutter={8}>\r\n\t\t\t\t\t{/*antd design 은 세로줄을 24 픽셀로 나눔*/}\r\n\t\t\t\t\t<Col xs={24} md={6}>\r\n\t\t\t\t\t\t{/*dummy data*/}\r\n\t\t\t\t\t\t{/*{isLoggedIn ? <UserProfile setIsLoggedIn={setIsLoggedIn}/> : <LoginForm setIsLoggedIn={setIsLoggedIn} />}*/}\r\n\t\t\t\t\t\t{me ? <UserProfile/> : <LoginForm/>}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col xs={24} md={12}>\r\n\t\t\t\t\t\t{children} {/*여기는 AppLayout 의 children*/}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col xs={24} md={6}>\r\n\t\t\t\t\t\t<a href=\"https://qhrdmaaksen.github.io/\" target={'_blank'} rel=\"noreferrer noopener\">\r\n\t\t\t\t\t\t\tMade in Vitamin\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\t)\r\n}\r\n\r\nAppLayout.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default AppLayout\r\n"]},"metadata":{},"sourceType":"module"}