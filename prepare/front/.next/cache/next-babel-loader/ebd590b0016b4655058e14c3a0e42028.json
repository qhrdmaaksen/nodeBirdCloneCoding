{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\intellijProjects\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react'; // Next 에서는 이 구문이 필요가 없다.\n\nimport { useSelector } from 'react-redux';\nimport AppLayout from '../component/AppLayout';\nimport PostForm from '../component/PostForm';\nimport PostCard from \"../component/PostCard\";\n\nvar Home = function Home() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      isLoggedIn = _useSelector.isLoggedIn;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts;\n\n  return __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, isLoggedIn && __jsx(PostForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 22\n    }\n  }), mainPosts.map(function (post) {\n    return __jsx(PostCard, {\n      key: post.id,\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\n_s(Home, \"yViitBsbbl69mW3t/o7jzus6gBQ=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/intellijProjects/react-nodebird/prepare/front/pages/index.js"],"names":["React","useSelector","AppLayout","PostForm","PostCard","Home","state","user","isLoggedIn","post","mainPosts","map","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAA0B;;AAC1B,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB,qBAAuBJ,WAAW,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAlC;AAAA,MAAQC,UAAR,gBAAQA,UAAR;;AACA,sBAAsBP,WAAW,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACG,IAAjB;AAAA,GAAD,CAAjC;AAAA,MAAQC,SAAR,iBAAQA,SAAR;;AACA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGF,UAAU,IAAI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHjB,EAIGE,SAAS,CAACC,GAAV,CAAc,UAACF,IAAD;AAAA,WACb,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACG,EAApB;AAAwB,MAAA,IAAI,EAAEH,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa;AAAA,GAAd,CAJH,CADF;AAWD,CAdD;;GAAMJ,I;UACmBJ,W,EACDA,W;;;KAFlBI,I;AAgBN,eAAeA,IAAf","sourcesContent":["import React from 'react' // Next 에서는 이 구문이 필요가 없다.\nimport { useSelector } from 'react-redux'\nimport AppLayout from '../component/AppLayout'\nimport PostForm from '../component/PostForm'\nimport PostCard from \"../component/PostCard\";\n\nconst Home = () => {\n  const { isLoggedIn } = useSelector((state) => state.user)\n  const { mainPosts } = useSelector((state) => state.post)\n  return (\n    <AppLayout>\n      {/*AppLayout 을 사용한다, 만약 다른 레이아웃을 사용하고싶다면 따로 component에 만들어서 이와같이 감싸면된다.*/}\n      {/*뭔가 묶일 수 있는 단위가있을 것 같으면 먼저 컴포넌트 이름을 정해주자*/}\n      {isLoggedIn && <PostForm />}\n      {mainPosts.map((post) => (\n        <PostCard key={post.id} post={post} />\n      ))}\n      {/*이와같이 AppLayout 으로 감싼 이부분은 AppLayout 의 children 이된다.*/}\n    </AppLayout>\n  )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}