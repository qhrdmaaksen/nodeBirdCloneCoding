{"ast":null,"code":"var _jsxFileName = \"D:\\\\intellijProjects\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\post\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// 동적 라우팅용 페이지\n// post/[id].js\nimport { useRouter } from \"next/router\";\nimport wrapper from \"../../store/configureStore\";\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport { LOAD_MY_INFO_REQUEST } from \"../../reducers/user\";\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nimport { getStaticProps } from \"../about\";\nimport AppLayout from \"../../component/AppLayout\";\nimport PostCard from \"../../component/PostCard\";\n\nconst Post = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }\n  }, __jsx(PostCard, {\n    post: singlePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }));\n};\n/*getServerSideProps&getStaticProps 안의 context 에서는 context.params.id&context.query.id 하면\r\nuseRouter 에 똑같이 접근 할 수 있다*/\n\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.cookie : '';\n  console.log('dynamic routing Post getServerSideProps Start ::');\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    // 내 정보 요청\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    // 단일 게시글 요청\n    type: LOAD_POST_REQUEST,\n    data: context.params.id //\n\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Post;","map":{"version":3,"sources":["D:/intellijProjects/react-nodebird/prepare/front/pages/post/[id].js"],"names":["useRouter","wrapper","axios","END","LOAD_MY_INFO_REQUEST","LOAD_POST_REQUEST","getStaticProps","AppLayout","PostCard","Post","router","id","query","singlePost","getServerSideProps","context","cookie","req","console","log","defaults","headers","Cookie","store","dispatch","type","data","params","sagaTask","toPromise"],"mappings":";;;AAAA;AACA;AAEA,SAAQA,SAAR,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,QAAkB,YAAlB;AACA,SAAQC,oBAAR,QAAmC,qBAAnC;AACA,SAAQC,iBAAR,QAAgC,qBAAhC;AACA,SAAQC,cAAR,QAA6B,UAA7B;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;AAIA,MAAMC,IAAI,GAAG,MAAM;AAClB,QAAMC,MAAM,GAAGV,SAAS,EAAxB;AACA,QAAM;AAACW,IAAAA;AAAD,MAAOD,MAAM,CAACE,KAApB;AAEA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADF;AAKA,CATD;AAWA;AACA;;;AACA,OAAO,MAAMC,kBAAkB,GAAGb,OAAO,CAACa,kBAAR,CAA2B,MAAMC,OAAN,IAAgB;AAC5E,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYD,MAA1B,GAAmC,EAAlD;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,kDAAZ;AACAjB,EAAAA,KAAK,CAACkB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,GAAgC,EAAhC;;AACA,MAAIP,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;AAC1Bd,IAAAA,KAAK,CAACkB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,GAAgCN,MAAhC;AACA;;AACDD,EAAAA,OAAO,CAACQ,KAAR,CAAcC,QAAd,CAAuB;AAAE;AACxBC,IAAAA,IAAI,EAAErB;AADgB,GAAvB;AAGAW,EAAAA,OAAO,CAACQ,KAAR,CAAcC,QAAd,CAAuB;AAAE;AACxBC,IAAAA,IAAI,EAAEpB,iBADgB;AAEtBqB,IAAAA,IAAI,EAAEX,OAAO,CAACY,MAAR,CAAehB,EAFC,CAEG;;AAFH,GAAvB;AAIAI,EAAAA,OAAO,CAACQ,KAAR,CAAcC,QAAd,CAAuBrB,GAAvB;AACA,QAAMY,OAAO,CAACQ,KAAR,CAAcK,QAAd,CAAuBC,SAAvB,EAAN;AACA,CAhBiC,CAA3B;AAkBP,eAAepB,IAAf","sourcesContent":["// 동적 라우팅용 페이지\r\n// post/[id].js\r\n\r\nimport {useRouter} from \"next/router\";\r\nimport wrapper from \"../../store/configureStore\";\r\nimport axios from 'axios'\r\nimport {END} from 'redux-saga'\r\nimport {LOAD_MY_INFO_REQUEST} from \"../../reducers/user\";\r\nimport {LOAD_POST_REQUEST} from '../../reducers/post'\r\nimport {getStaticProps} from \"../about\";\r\nimport AppLayout from \"../../component/AppLayout\";\r\nimport PostCard from \"../../component/PostCard\";\r\n\r\n\r\n\r\nconst Post = () => {\r\n\tconst router = useRouter()\r\n\tconst {id} = router.query\r\n\r\n\treturn (\r\n\t\t\t<AppLayout>\r\n\t\t\t\t<PostCard post={singlePost} />\r\n\t\t\t</AppLayout>\r\n\t)\r\n}\r\n\r\n/*getServerSideProps&getStaticProps 안의 context 에서는 context.params.id&context.query.id 하면\r\nuseRouter 에 똑같이 접근 할 수 있다*/\r\nexport const getServerSideProps = wrapper.getServerSideProps(async(context)=>{\r\n\tconst cookie = context.req ? context.req.cookie : '';\r\n\tconsole.log('dynamic routing Post getServerSideProps Start ::')\r\n\taxios.defaults.headers.Cookie = ''\r\n\tif (context.req && cookie) {\r\n\t\taxios.defaults.headers.Cookie = cookie\r\n\t}\r\n\tcontext.store.dispatch({ // 내 정보 요청\r\n\t\ttype: LOAD_MY_INFO_REQUEST,\r\n\t})\r\n\tcontext.store.dispatch({ // 단일 게시글 요청\r\n\t\ttype: LOAD_POST_REQUEST,\r\n\t\tdata: context.params.id, //\r\n\t})\r\n\tcontext.store.dispatch(END)\r\n\tawait context.store.sagaTask.toPromise()\r\n})\r\n\r\nexport default Post"]},"metadata":{},"sourceType":"module"}