{"ast":null,"code":"var _jsxFileName = \"D:\\\\intellijProjects\\\\react-nodebird\\\\prepare\\\\front\\\\component\\\\LoginForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport useInput from '../hooks/useInput';\nimport { useDispatch } from \"react-redux\";\nimport { loginAction } from \"../reducers/user\";\nconst ButtonWrapper = styled.div.withConfig({\n  displayName: \"LoginForm__ButtonWrapper\",\n  componentId: \"sc-1nxlttv-0\"\n})([\"margin-top:10px;\"]);\nconst FormWrapper = styled(Form).withConfig({\n  displayName: \"LoginForm__FormWrapper\",\n  componentId: \"sc-1nxlttv-1\"\n})([\"padding:10px;\"]);\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const [id, onChangeId] = useInput('');\n  const [password, onChangePassword] = useInput(''); // const style = useMemo(()=>({ // styled component 를 사용원치 않을때 useMemo 사용\n  //   marginTop: 10\n  // }), []);\n\n  const onSubmitFrom = useCallback(() => {\n    console.log('id : ' + id + ',' + ' password : ' + password); //setIsLoggedIn(true)\n\n    dispatch(loginAction({\n      id,\n      password\n    }));\n  }, [id, password]);\n  return __jsx(FormWrapper, {\n    onFinish: onSubmitFrom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 6\n    }\n  }), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    onChange: onChangeId,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 6\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 6\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 6\n    }\n  }), __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    onChange: onChangePassword,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 6\n    }\n  })), __jsx(ButtonWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 6\n    }\n  }, \"\\uB85C\\uADF8\\uC778 \"), __jsx(Link, {\n    href: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 6\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 8\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))));\n};\n/*LoginForm.propTypes = {\r\n  setIsLoggedIn: PropTypes.func.isRequired,\r\n}*/\n\n\nexport default LoginForm;","map":{"version":3,"sources":["D:/intellijProjects/react-nodebird/prepare/front/component/LoginForm.js"],"names":["React","useCallback","Form","Input","Button","Link","styled","PropTypes","useInput","useDispatch","loginAction","ButtonWrapper","div","FormWrapper","LoginForm","dispatch","id","onChangeId","password","onChangePassword","onSubmitFrom","console","log"],"mappings":"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","sourcesContent":["import React, {useCallback} from 'react'\r\nimport {Form, Input, Button} from 'antd'\r\nimport Link from 'next/link'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport useInput from '../hooks/useInput'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {loginAction} from \"../reducers/user\";\r\n\r\nconst ButtonWrapper = styled.div`\r\n\tmargin-top: 10px;\r\n`\r\n\r\nconst FormWrapper = styled(Form)`\r\n\tpadding: 10px;\r\n`\r\n\r\nconst LoginForm = () => {\r\n\tconst dispatch = useDispatch()\r\n\tconst [id, onChangeId] = useInput('')\r\n\tconst [password, onChangePassword] = useInput('')\r\n\r\n\t// const style = useMemo(()=>({ // styled component 를 사용원치 않을때 useMemo 사용\r\n\t//   marginTop: 10\r\n\t// }), []);\r\n\r\n\tconst onSubmitFrom = useCallback(() => {\r\n\t\tconsole.log('id : ' + id + ',' + ' password : ' + password)\r\n\t\t//setIsLoggedIn(true)\r\n\t\tdispatch(loginAction({id, password}))\r\n\t}, [id, password])\r\n\r\n\treturn (\r\n\t\t\t<FormWrapper onFinish={onSubmitFrom}>\r\n\t\t\t\t{/*onFinish 는 이미 e.preventDefault() 가 적용되어있다.*/}\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label htmlFor=\"user-id\">아이디</label>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<Input name=\"user-id\" value={id} onChange={onChangeId} required/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label htmlFor=\"user-password\">비밀번호</label>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<Input name=\"user-password\" type=\"password\" value={password} onChange={onChangePassword} required/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ButtonWrapper>\r\n\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" loading={false}>\r\n\t\t\t\t\t\t로그인 {/*htmlType 을 붙여줘야 submit 이 된다*/}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Link href=\"/signup\">\r\n\t\t\t\t\t\t<a>\r\n\t\t\t\t\t\t\t<Button>회원가입</Button>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</ButtonWrapper>\r\n\t\t\t</FormWrapper>\r\n\t)\r\n}\r\n\r\n/*LoginForm.propTypes = {\r\n  setIsLoggedIn: PropTypes.func.isRequired,\r\n}*/\r\n\r\nexport default LoginForm\r\n"]},"metadata":{},"sourceType":"module"}