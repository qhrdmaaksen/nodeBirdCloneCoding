{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(logIn),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(logOut),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(follow),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(unfollow),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchFollow),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnFollow),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogIn),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogOut),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignUp),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from \"../reducers/user\";\n\nfunction logInAPI(data) {\n  // gererator 아님\n  //return axios.post('/api/login', data) // 실제 서버에 로그인 요청을 보냄 // front\n  // 실제 서버에 로그인 요청을 보냄 // back\n  //return axios.post('http://localhost:3065/user/login', data)\n  // localhost 중복 없애기\n  return axios.post('/login', data);\n} // 테스트 코드\n// const l = logIn({type: 'LOG_IN_REQUEST', data: {id: 'rlaalsdn8@naver.com'}})\n// \t\tl.next();\n// \t\tl.next();\n/////////////////\n\n\nfunction logIn(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function logIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          // 요청 실패 대비\n          console.log('saga logIn'); //yield delay(1000) // front\n\n          _context.next = 4;\n          return call(logInAPI, action.data);\n\n        case 4:\n          result = _context.sent;\n          _context.next = 7;\n          return put({\n            type: LOG_IN_SUCCESS,\n            //data: action.data, // front\n            data: result.data // (성공 결과 담김) back\n\n          });\n\n        case 7:\n          _context.next = 14;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          console.error('logIn' + _context.t0);\n          _context.next = 14;\n          return put({\n            // put 은 dispatch 라고 생각하자\n            type: LOG_IN_FAILURE,\n            error: _context.t0.response.data // (실패 결과 담김)\n\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}\n\nfunction logOutAPI() {\n  // return axios.post('/api/logout') front\n  return axios.post('/user/logout');\n}\n\nfunction logOut() {\n  return _regeneratorRuntime.wrap(function logOut$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(logOutAPI);\n\n        case 3:\n          _context2.next = 5;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context2.next = 12;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error('front logOut : ' + _context2.t0);\n          _context2.next = 12;\n          return put({\n            // put 은 dispatch 라고 생각하자\n            type: LOG_OUT_FAILURE,\n            error: _context2.t0.response.data // (실패 결과 담김)\n\n          });\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 7]]);\n}\n\nfunction followAPI(data) {\n  return axios.post('/api/follow', data);\n}\n\nfunction follow(action) {\n  return _regeneratorRuntime.wrap(function follow$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context3.next = 5;\n          return put({\n            type: FOLLOW_SUCCESS,\n            data: action.data\n          });\n\n        case 5:\n          _context3.next = 12;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error('follow error : ' + _context3.t0);\n          _context3.next = 12;\n          return put({\n            type: FOLLOW_FAILURE,\n            data: _context3.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 7]]);\n}\n\nfunction unfollowAPI(data) {\n  return axios.post('/api/unfollow', data);\n}\n\nfunction unfollow(action) {\n  return _regeneratorRuntime.wrap(function unfollow$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context4.next = 5;\n          return put({\n            type: UNFOLLOW_SUCCESS,\n            data: action.data\n          });\n\n        case 5:\n          _context4.next = 12;\n          break;\n\n        case 7:\n          _context4.prev = 7;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.error('unfollow error : ' + _context4.t0);\n          _context4.next = 12;\n          return put({\n            type: UNFOLLOW_FAILURE,\n            data: _context4.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 7]]);\n}\n\nfunction signUpAPI(data) {\n  // back end server addr\n  // data 는 email, nickname, password object\n  //return axios.post('/api/signup', data) // front\n  return axios.post('/user', data); // back\n}\n\nfunction signUp(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function signUp$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(signUpAPI, action.data);\n\n        case 3:\n          result = _context5.sent;\n          console.log('sign up result : ' + result);\n          _context5.next = 7;\n          return put({\n            type: SIGN_UP_SUCCESS //data: result.data\n\n          });\n\n        case 7:\n          _context5.next = 14;\n          break;\n\n        case 9:\n          _context5.prev = 9;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error('signUp error : ' + _context5.t0);\n          _context5.next = 14;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context5.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 9]]);\n}\n\nfunction watchFollow() {\n  return _regeneratorRuntime.wrap(function watchFollow$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(FOLLOW_REQUEST, follow);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction watchUnFollow() {\n  return _regeneratorRuntime.wrap(function watchUnFollow$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeLatest(UNFOLLOW_REQUEST, unfollow);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nfunction watchLogIn() {\n  return _regeneratorRuntime.wrap(function watchLogIn$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(LOG_IN_REQUEST, logIn);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return all([fork(watchFollow), fork(watchUnFollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}","map":{"version":3,"sources":["D:/intellijProjects/react-nodebird/prepare/front/sagas/user.js"],"names":["logIn","logOut","follow","unfollow","signUp","watchFollow","watchUnFollow","watchLogIn","watchLogOut","watchSignUp","userSaga","all","call","delay","fork","put","takeLatest","axios","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","logInAPI","data","post","action","console","log","result","type","error","response","logOutAPI","followAPI","unfollowAPI","signUpAPI"],"mappings":";;oDAgCUA,K;qDAwBAC,M;qDAoBAC,M;qDAoBAC,Q;qDAuBAC,M;qDAkBAC,W;qDAIAC,a;qDAIAC,U;qDAIAC,W;sDAIAC,W;sDAIeC,Q;;AA7JzB,SAAQC,GAAR,EAAaC,IAAb,EAAmBC,KAAnB,EAA0BC,IAA1B,EAAgCC,GAAhC,EAAqCC,UAArC,QAAsD,oBAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACCC,cADD,EAECC,cAFD,EAEiBC,cAFjB,EAGCC,cAHD,EAICC,cAJD,EAKCC,cALD,EAMCC,eAND,EAOCC,eAPD,EAQCC,eARD,EASCC,eATD,EAUCC,eAVD,EAWCC,eAXD,EAWkBC,gBAXlB,EAWoCC,gBAXpC,EAWsDC,gBAXtD,QAYO,kBAZP;;AAeA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AAAE;AACzB;AAEA;AACA;AAEA;AACA,SAAOjB,KAAK,CAACkB,IAAN,CAAW,QAAX,EAAqBD,IAArB,CAAP;AACA,C,CAED;AACA;AACA;AACA;AACA;;;AACA,SAAUlC,KAAV,CAAgBoC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACO;AACLC,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAFF,CAGE;;AAHF;AAIiB,iBAAM1B,IAAI,CAACqB,QAAD,EAAWG,MAAM,CAACF,IAAlB,CAAV;;AAJjB;AAIQK,UAAAA,MAJR;AAAA;AAKE,iBAAMxB,GAAG,CAAC;AACTyB,YAAAA,IAAI,EAAEjB,cADG;AAET;AACAW,YAAAA,IAAI,EAAEK,MAAM,CAACL,IAHJ,CAGS;;AAHT,WAAD,CAAT;;AALF;AAAA;AAAA;;AAAA;AAAA;AAAA;AAWEG,UAAAA,OAAO,CAACI,KAAR,CAAc,qBAAd;AAXF;AAYE,iBAAM1B,GAAG,CAAC;AAAE;AACXyB,YAAAA,IAAI,EAAEnB,cADG;AAEToB,YAAAA,KAAK,EAAE,YAAIC,QAAJ,CAAaR,IAFX,CAEgB;;AAFhB,WAAD,CAAT;;AAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmBA,SAASS,SAAT,GAAqB;AACpB;AACA,SAAO1B,KAAK,CAACkB,IAAN,CAAW,cAAX,CAAP;AACA;;AAED,SAAUlC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGE,iBAAMW,IAAI,CAAC+B,SAAD,CAAV;;AAHF;AAAA;AAIE,iBAAM5B,GAAG,CAAC;AACTyB,YAAAA,IAAI,EAAEd;AADG,WAAD,CAAT;;AAJF;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQEW,UAAAA,OAAO,CAACI,KAAR,CAAc,gCAAd;AARF;AASE,iBAAM1B,GAAG,CAAC;AAAE;AACXyB,YAAAA,IAAI,EAAEhB,eADG;AAETiB,YAAAA,KAAK,EAAE,aAAIC,QAAJ,CAAaR,IAFX,CAEgB;;AAFhB,WAAD,CAAT;;AATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,SAASU,SAAT,CAAmBV,IAAnB,EAAyB;AACxB,SAAOjB,KAAK,CAACkB,IAAN,CAAW,aAAX,EAA0BD,IAA1B,CAAP;AACA;;AAED,SAAUhC,MAAV,CAAiBkC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEE,iBAAMvB,KAAK,CAAC,IAAD,CAAX;;AAFF;AAAA;AAGE,iBAAME,GAAG,CAAC;AACTyB,YAAAA,IAAI,EAAEpB,cADG;AAETc,YAAAA,IAAI,EAAEE,MAAM,CAACF;AAFJ,WAAD,CAAT;;AAHF;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQEG,UAAAA,OAAO,CAACI,KAAR,CAAc,gCAAd;AARF;AASE,iBAAM1B,GAAG,CAAC;AACTyB,YAAAA,IAAI,EAAEtB,cADG;AAETgB,YAAAA,IAAI,EAAE,aAAIQ,QAAJ,CAAaR;AAFV,WAAD,CAAT;;AATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,SAASW,WAAT,CAAqBX,IAArB,EAA2B;AAC1B,SAAOjB,KAAK,CAACkB,IAAN,CAAW,eAAX,EAA4BD,IAA5B,CAAP;AACA;;AAED,SAAU/B,QAAV,CAAmBiC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEE,iBAAMvB,KAAK,CAAC,IAAD,CAAX;;AAFF;AAAA;AAGE,iBAAME,GAAG,CAAC;AACTyB,YAAAA,IAAI,EAAER,gBADG;AAETE,YAAAA,IAAI,EAAEE,MAAM,CAACF;AAFJ,WAAD,CAAT;;AAHF;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQEG,UAAAA,OAAO,CAACI,KAAR,CAAc,kCAAd;AARF;AASE,iBAAM1B,GAAG,CAAC;AACTyB,YAAAA,IAAI,EAAEV,gBADG;AAETI,YAAAA,IAAI,EAAE,aAAIQ,QAAJ,CAAaR;AAFV,WAAD,CAAT;;AATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,SAASY,SAAT,CAAmBZ,IAAnB,EAAyB;AACxB;AACA;AACA;AACA,SAAOjB,KAAK,CAACkB,IAAN,CAAW,OAAX,EAAoBD,IAApB,CAAP,CAJwB,CAIS;AACjC;;AAED,SAAU9B,MAAV,CAAiBgC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGiB,iBAAMxB,IAAI,CAACkC,SAAD,EAAYV,MAAM,CAACF,IAAnB,CAAV;;AAHjB;AAGQK,UAAAA,MAHR;AAIEF,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBC,MAAlC;AAJF;AAKE,iBAAMxB,GAAG,CAAC;AACTyB,YAAAA,IAAI,EAAEX,eADG,CAET;;AAFS,WAAD,CAAT;;AALF;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUEQ,UAAAA,OAAO,CAACI,KAAR,CAAc,gCAAd;AAVF;AAWE,iBAAM1B,GAAG,CAAC;AACTyB,YAAAA,IAAI,EAAEb,eADG;AAETc,YAAAA,KAAK,EAAE,aAAIC,QAAJ,CAAaR;AAFX,WAAD,CAAT;;AAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkBA,SAAU7B,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACC,iBAAMW,UAAU,CAACG,cAAD,EAAiBjB,MAAjB,CAAhB;;AADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUI,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACC,iBAAMU,UAAU,CAACe,gBAAD,EAAmB5B,QAAnB,CAAhB;;AADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUI,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACC,iBAAMS,UAAU,CAACM,cAAD,EAAiBtB,KAAjB,CAAhB;;AADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUQ,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACC,iBAAMQ,UAAU,CAACS,eAAD,EAAkBxB,MAAlB,CAAhB;;AADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUQ,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACC,iBAAMO,UAAU,CAACY,eAAD,EAAkBxB,MAAlB,CAAhB;;AADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUM,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACd,iBAAMC,GAAG,CAAC,CACTG,IAAI,CAACT,WAAD,CADK,EAETS,IAAI,CAACR,aAAD,CAFK,EAGTQ,IAAI,CAACP,UAAD,CAHK,EAITO,IAAI,CAACN,WAAD,CAJK,EAKTM,IAAI,CAACL,WAAD,CALK,CAAD,CAAT;;AADc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {all, call, delay, fork, put, takeLatest} from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport {\r\n\tFOLLOW_FAILURE,\r\n\tFOLLOW_REQUEST, FOLLOW_SUCCESS,\r\n\tLOG_IN_FAILURE,\r\n\tLOG_IN_REQUEST,\r\n\tLOG_IN_SUCCESS,\r\n\tLOG_OUT_FAILURE,\r\n\tLOG_OUT_REQUEST,\r\n\tLOG_OUT_SUCCESS,\r\n\tSIGN_UP_FAILURE,\r\n\tSIGN_UP_REQUEST,\r\n\tSIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS,\r\n} from \"../reducers/user\";\r\n\r\n\r\nfunction logInAPI(data) { // gererator 아님\r\n\t//return axios.post('/api/login', data) // 실제 서버에 로그인 요청을 보냄 // front\r\n\r\n\t// 실제 서버에 로그인 요청을 보냄 // back\r\n\t//return axios.post('http://localhost:3065/user/login', data)\r\n\r\n\t// localhost 중복 없애기\r\n\treturn axios.post('/login', data)\r\n}\r\n\r\n// 테스트 코드\r\n// const l = logIn({type: 'LOG_IN_REQUEST', data: {id: 'rlaalsdn8@naver.com'}})\r\n// \t\tl.next();\r\n// \t\tl.next();\r\n/////////////////\r\nfunction* logIn(action) { // login action request 가 action 에 전달\r\n\ttry { // 요청 실패 대비\r\n\t\tconsole.log('saga logIn')\r\n\t\t//yield delay(1000) // front\r\n\t\tconst result = yield call(logInAPI, action.data) // 서버에서 받은 결과 값을 받음\r\n\t\tyield put({\r\n\t\t\ttype: LOG_IN_SUCCESS,\r\n\t\t\t//data: action.data, // front\r\n\t\t\tdata: result.data // (성공 결과 담김) back\r\n\t\t})\r\n\t} catch (err) {\r\n\t\tconsole.error('logIn' + err)\r\n\t\tyield put({ // put 은 dispatch 라고 생각하자\r\n\t\t\ttype: LOG_IN_FAILURE,\r\n\t\t\terror: err.response.data // (실패 결과 담김)\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction logOutAPI() {\r\n\t// return axios.post('/api/logout') front\r\n\treturn axios.post('/user/logout')\r\n}\r\n\r\nfunction* logOut() {\r\n\ttry { // 요청 실패 대비\r\n\t\t//yield delay(1000) front\r\n\t\tyield call(logOutAPI) // 서버에서 받은 결과 값을 받음 back\r\n\t\tyield put({\r\n\t\t\ttype: LOG_OUT_SUCCESS,\r\n\t\t})\r\n\t} catch (err) {\r\n\t\tconsole.error('front logOut : ' + err)\r\n\t\tyield put({ // put 은 dispatch 라고 생각하자\r\n\t\t\ttype: LOG_OUT_FAILURE,\r\n\t\t\terror: err.response.data // (실패 결과 담김)\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction followAPI(data) {\r\n\treturn axios.post('/api/follow', data)\r\n}\r\n\r\nfunction* follow(action) {\r\n\ttry {\r\n\t\tyield delay(1000)\r\n\t\tyield put({\r\n\t\t\ttype: FOLLOW_SUCCESS,\r\n\t\t\tdata: action.data\r\n\t\t})\r\n\t} catch (err) {\r\n\t\tconsole.error('follow error : ' + err)\r\n\t\tyield put({\r\n\t\t\ttype: FOLLOW_FAILURE,\r\n\t\t\tdata: err.response.data,\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction unfollowAPI(data) {\r\n\treturn axios.post('/api/unfollow', data)\r\n}\r\n\r\nfunction* unfollow(action) {\r\n\ttry {\r\n\t\tyield delay(1000)\r\n\t\tyield put({\r\n\t\t\ttype: UNFOLLOW_SUCCESS,\r\n\t\t\tdata: action.data\r\n\t\t})\r\n\t} catch (err) {\r\n\t\tconsole.error('unfollow error : ' + err)\r\n\t\tyield put({\r\n\t\t\ttype: UNFOLLOW_FAILURE,\r\n\t\t\tdata: err.response.data,\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n\t// back end server addr\r\n\t// data 는 email, nickname, password object\r\n\t//return axios.post('/api/signup', data) // front\r\n\treturn axios.post('/user', data) // back\r\n}\r\n\r\nfunction* signUp(action) {\r\n\ttry {\r\n\t\t//yield delay(1000)\r\n\t\tconst result = yield call(signUpAPI, action.data)\r\n\t\tconsole.log('sign up result : ' + result)\r\n\t\tyield put({\r\n\t\t\ttype: SIGN_UP_SUCCESS,\r\n\t\t\t//data: result.data\r\n\t\t})\r\n\t} catch (err) {\r\n\t\tconsole.error('signUp error : ' + err)\r\n\t\tyield put({\r\n\t\t\ttype: SIGN_UP_FAILURE,\r\n\t\t\terror: err.response.data\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction* watchFollow() {\r\n\tyield takeLatest(FOLLOW_REQUEST, follow)\r\n}\r\n\r\nfunction* watchUnFollow() {\r\n\tyield takeLatest(UNFOLLOW_REQUEST, unfollow)\r\n}\r\n\r\nfunction* watchLogIn() {\t// 로그인 액션이 실행될때까지 기다리겠다는 뜻\r\n\tyield takeLatest(LOG_IN_REQUEST, logIn) //LOG_IN_REQUEST 액션이 실행되면 logIn 함수 실행\r\n}\r\n\r\nfunction* watchLogOut() {\t// 로그아웃 액션이 실행될때까지 기다리겠다는 뜻\r\n\tyield takeLatest(LOG_OUT_REQUEST, logOut) //LOG_OUT_REQUEST 액션이 실행되면 logIn 함수 실행\r\n}\r\n\r\nfunction* watchSignUp() {\t// 회원가입 액션이 실행될때까지 기다리겠다는 뜻\r\n\tyield takeLatest(SIGN_UP_REQUEST, signUp) // SIGN_UP_REQUEST 액션이 실행되면 logIn 함수 실행\r\n}\r\n\r\nexport default function* userSaga() {\r\n\tyield all([\r\n\t\tfork(watchFollow),\r\n\t\tfork(watchUnFollow),\r\n\t\tfork(watchLogIn),\r\n\t\tfork(watchLogOut),\r\n\t\tfork(watchSignUp),\r\n\t])\r\n}"]},"metadata":{},"sourceType":"module"}