{"ast":null,"code":"import produce from 'immer';\nexport const initialState = {\n  loadMyInfoLoading: false,\n  // 유저 정보 보기 시도중일땐 로딩중 띄울거임\n  loadMyInfoDone: false,\n  // 유저 정보 보기 됨\n  loadMyInfoError: null,\n  // 유저 정보 보기중일때 에러 없앰\n  removeFollowerLoading: false,\n  // 팔로워 유저 삭제 시도중일땐 로딩중 띄울거임\n  removeFollowerDone: false,\n  // 팔로워 유저 삭제 됨\n  removeFollowerError: null,\n  // 팔로워 유저 삭제 중일때 에러 없앰\n  followLoading: false,\n  // 팔로우 시도중일땐 로딩중 띄울거임\n  followDone: false,\n  // 팔로우 됨\n  followError: null,\n  // 팔로우중일때 에러 없앰\n  unfollowLoading: false,\n  // 언팔로우 시도중일땐 로딩중 띄울거임\n  unfollowDone: false,\n  // 언팔로우 됨\n  unfollowError: null,\n  // 언팔로우중일때 에러 없앰\n  loadFollowersLoading: false,\n  // 팔로워 시도중일땐 로딩중 띄울거임\n  loadFollowersDone: false,\n  // 팔로워 됨\n  loadFollowersError: null,\n  // 팔로워일때 에러 없앰\n  loadFollowingsLoading: false,\n  // 팔로윙 시도중일땐 로딩중 띄울거임\n  loadFollowingsDone: false,\n  // 팔로윙 됨\n  loadFollowingsError: null,\n  // 팔로윙 중일때 에러 없앰\n  logInLoading: false,\n  // 로그인 시도중일땐 로딩중 띄울거임\n  logInDone: false,\n  // 로그인 됨\n  logInError: null,\n  // 로딩중일때 에러 없앰\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  // 로그아웃 완료\n  logOutError: null,\n  signUpLoading: false,\n  // 회원가입 로딩중\n  signUpDone: false,\n  // 회원 가입 완료\n  signUpError: null,\n  changeNicknameLoading: false,\n  // 닉네임 변경 로딩중\n  changeNicknameDone: false,\n  // 닉네임 변경 완료\n  changeNicknameError: null,\n  me: null,\n  signUpData: {},\n  // 회원 가입 데이터\n  loginData: {},\n  userInfo: null\n}; // 로그인 액션 생성기 thunk\n// export const loginAction = (data) => { // 함수를 리턴하는 비동기 액션 크리에이터가 추가\n// \treturn (dispatch, getState) => {\n// \t\tconst state = getState()\n// \t\tdispatch(loginRequestAction())\n// \t\taxios.post('/api/login')\n// \t\t\t\t.then((res) => {\n// \t\t\t\t\tdispatch(loginSuccessAction(res.data))\n// \t\t\t\t})\n// \t\t\t\t.catch((error) => {\n// \t\t\t\t\tdispatch(loginFailureAction(error))\n// \t\t\t\t})\n// \t}\n// }\n// actions\n\nexport const LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST';\nexport const LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS';\nexport const LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE';\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE'; // 유저 리듀서의 상태를 바꿀수있는 액션 생성\n\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n/* front\r\nconst dummyUser = (data) => ({\r\n\t...data,\r\n\tnickname: '비타민',\r\n\tid: 1,\r\n\tPosts: [{id: 1}],\r\n\tFollowings: [{nickname: '외노'}, {nickname: '음메'}, {nickname: '썽'}, {nickname: '오댕'}, {nickname: '만뽀'}],\r\n\tFollowers: [{nickname: '까매'}, {nickname: '만두'}, {nickname: '보챙'}, {nickname: '뒷가'}, {nickname: '야덩'}],\r\n})*/\n\nexport const loginRequestAction = data => ({\n  type: LOG_IN_REQUEST,\n  data\n}); // 로그아웃 액션 생성기 thunk\n// export const logoutAction = (data) => {\n// \treturn (dispatch) => {\n// \t\taxios.post('/api/logout')\n// \t\t\t\t.then(() => {\n// \t\t\t\t\tdispatch(logoutSuccessAction())\n// \t\t\t\t})\n// \t\t\t\t.catch(() => {\n// \t\t\t\t\tdispatch(logoutFailureAction())\n// \t\t\t\t})\n// \t}\n// }\n\nexport const logoutRequestAction = () => ({\n  type: LOG_OUT_REQUEST\n});\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOAD_MY_INFO_REQUEST:\n      // store 에서 보낸 state 가 만들어짐, state 자체가 user.js 의 state 임\n      draft.loadMyInfoLoading = true;\n      draft.loadMyInfoDone = false;\n      draft.loadMyInfoError = null; // 로딩 중일때는 에러 없앰\n\n      console.log('reducer myInfo 요청');\n      break;\n\n    case LOAD_MY_INFO_SUCCESS:\n      draft.userInfo = action.data; // back 상대방 정보가 들어있음\n\n      draft.loadMyInfoLoading = false;\n      draft.loadMyInfoDone = true; //draft.me = dummyUser(action.data)\n\n      console.log('reducer myInfo 성공');\n      break;\n\n    case LOAD_MY_INFO_FAILURE:\n      console.error('loadMyInfoFail 실패:: ' + action.error);\n      draft.loadMyInfoLoading = false;\n      draft.loadMyInfoError = action.error;\n      break;\n\n    case REMOVE_FOLLOWER_REQUEST:\n      draft.removeFollowerLoading = true;\n      draft.removeFollowerDone = false;\n      draft.removeFollowerError = null;\n      console.log('reducer removeFollower 요청');\n      break;\n\n    case REMOVE_FOLLOWER_SUCCESS:\n      // 나의 팔로워 제거\n      draft.me.Followers = draft.me.Followers.filter(v => v.id !== action.data.UserId);\n      draft.removeFollowerLoading = false;\n      draft.removeFollowerDone = true;\n      console.log('reducer removeFollower 성공');\n      break;\n\n    case REMOVE_FOLLOWER_FAILURE:\n      console.error('removeFollowerFail 실패:: ' + action.error);\n      draft.removeFollowerLoading = false;\n      draft.removeFollowerError = action.error;\n\n    case FOLLOW_REQUEST:\n      // store 에서 보낸 state 가 만들어짐, state 자체가 user.js 의 state 임\n      draft.followLoading = true;\n      draft.followError = null; // 로딩 중일때는 에러 없앰\n\n      draft.followDone = false;\n      console.log('reducer FOLLOW_REQUEST 요청');\n      break;\n\n    case FOLLOW_SUCCESS:\n      draft.followLoading = false;\n      draft.followDone = true; //draft.me = dummyUser(action.data)\n\n      draft.me.Followings.push({\n        id: action.data.UserId\n      });\n      console.log('reducer FOLLOW_SUCCESS 성공');\n      break;\n\n    case FOLLOW_FAILURE:\n      draft.followLoading = false;\n      draft.followError = action.error;\n      console.error('reducer FOLLOW_FAILURE 실패::', action.error);\n      break;\n\n    case UNFOLLOW_REQUEST:\n      // store 에서 보낸 state 가 만들어짐, state 자체가 user.js 의 state 임\n      draft.unfollowLoading = true;\n      draft.unfollowError = null; // 로딩 중일때는 에러 없앰\n\n      draft.unfollowDone = false;\n      console.log('reducer unfollow 요청');\n      break;\n\n    case UNFOLLOW_SUCCESS:\n      draft.unfollowLoading = false;\n      draft.unfollowDone = true; //draft.me = dummyUser(action.data)\n      // 언팔로우 한 사람만 빠지게\n\n      draft.me.Followings = draft.me.Followings.filter(v => v.id !== action.data.UserId);\n      console.log('reducer unfollow 성공');\n      break;\n\n    case UNFOLLOW_FAILURE:\n      draft.unfollowLoading = false;\n      draft.unfollowError = action.error;\n      console.error('reducer unfollow 실패::', action.error);\n      break;\n\n    case LOG_IN_REQUEST:\n      draft.logInLoading = true;\n      draft.logInError = null;\n      draft.logInDone = false;\n      console.log('reducer login 요청');\n      break;\n\n    case LOG_IN_SUCCESS:\n      draft.logInLoading = false;\n      draft.logInDone = true; //draft.me = dummyUser(action.data) front\n\n      draft.me = action.data; // back\n\n      console.log('reducer login 성공');\n      break;\n\n    case LOG_IN_FAILURE:\n      draft.logInLoading = false;\n      draft.logInError = action.error;\n      console.error('reducer login 실패:: ', action.error);\n      break;\n\n    case LOG_OUT_REQUEST:\n      draft.logOutLoading = true;\n      draft.logOutDone = false;\n      draft.logOutError = null;\n      console.log('reducer logout 요청');\n      break;\n\n    case LOG_OUT_SUCCESS:\n      draft.logOutLoading = false;\n      draft.logOutDone = true;\n      draft.me = null;\n      console.log('reducer logout 성공');\n      break;\n\n    case LOG_OUT_FAILURE:\n      draft.logOutLoading = false;\n      draft.logOutError = action.error;\n      console.error('reducer logout 실패', action.error);\n      break;\n\n    case SIGN_UP_REQUEST:\n      draft.signUpLoading = true;\n      draft.signUpDone = false;\n      draft.signUpError = null;\n      console.log('reducer signup 요청');\n      break;\n\n    case SIGN_UP_SUCCESS:\n      draft.signUpLoading = false;\n      draft.signUpDone = true;\n      console.log('reducer signUp 성공');\n      break;\n\n    case SIGN_UP_FAILURE:\n      draft.signUpLoading = false;\n      draft.signUpError = action.error;\n      console.error('reducer signUp 실패', action.error);\n      break;\n\n    case CHANGE_NICKNAME_REQUEST:\n      draft.changeNicknameLoading = true;\n      draft.changeNicknameDone = false;\n      draft.changeNicknameError = null;\n      console.log('reducer CHANGE_NICKNAME_REQUEST 요청');\n      break;\n\n    case CHANGE_NICKNAME_SUCCESS:\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameDone = true;\n      console.log('reducer CHANGE_NICKNAME_SUCCESS 성공');\n      break;\n\n    case CHANGE_NICKNAME_FAILURE:\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameError = action.error;\n      console.error('reducer CHANGE_NICKNAME 실패', action.error);\n      break;\n\n    case LOAD_FOLLOWERS_REQUEST:\n      draft.loadFollowersLoading = true;\n      draft.loadFollowersDone = false;\n      draft.loadFollowersError = null;\n      console.log('reducer LOAD_FOLLOWERS_REQUEST 요청');\n      break;\n\n    case LOAD_FOLLOWERS_SUCCESS:\n      draft.loadFollowersLoading = false;\n      draft.loadFollowersDone = true;\n      draft.me.Followers = action.data;\n      console.log('reducer LOAD_FOLLOWERS_SUCCESS 성공');\n      break;\n\n    case LOAD_FOLLOWERS_FAILURE:\n      draft.loadFollowersLoading = false;\n      draft.loadFollowersError = action.error;\n      console.error('reducer LOAD_FOLLOWERS 실패', action.error);\n      break;\n\n    case LOAD_FOLLOWINGS_REQUEST:\n      draft.loadFollowingsLoading = true;\n      draft.loadFollowingsDone = false;\n      draft.loadFollowingsError = null;\n      console.log('reducer LOAD_FOLLOWINGS_REQUEST 요청');\n      break;\n\n    case LOAD_FOLLOWINGS_SUCCESS:\n      draft.loadFollowingsLoading = false;\n      draft.loadFollowingsDone = true;\n      draft.me.Followings = action.data;\n      console.log('reducer LOAD_FOLLOWINGS_SUCCESS 성공');\n      break;\n\n    case LOAD_FOLLOWINGS_FAILURE:\n      draft.loadFollowingsLoading = false;\n      draft.loadFollowingsError = action.error;\n      console.error('reducer LOAD_FOLLOWINGS 실패', action.error);\n      break;\n\n    case ADD_POST_TO_ME:\n      // 게시글을 쓰면 게시글 아이디가 여기로 들어와서 하나가 추가된다\n      draft.me.Posts.unshift({\n        id: action.data\n      });\n      console.log('ADD_POST_TO_ME 성공');\n      break;\n    // return {\n    // \t...state,\n    // \tme: {\n    // \t\t...state.me,\n    // \t\tPosts: [{id: action.data}, ...state.me.Posts],\n    // \t}\n    // }\n\n    case REMOVE_POST_OF_ME:\n      draft.me.Posts = draft.me.Posts.filter(v => v.id !== action.data);\n      console.log('REMOVE_POST_OF_ME');\n      break;\n    // return { // 불변성을 지키며 게시글을 지워야한다.\n    // \t...state,\n    // \tme: {\n    // \t\t...state.me,\n    // \t\tPosts: state.me.Posts.filter((v) => v.id !== action.data)\n    // \t}\n    // }\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["D:/intellijProjects/react-nodebird/prepare/front/reducers/user.js"],"names":["produce","initialState","loadMyInfoLoading","loadMyInfoDone","loadMyInfoError","removeFollowerLoading","removeFollowerDone","removeFollowerError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","loadFollowersLoading","loadFollowersDone","loadFollowersError","loadFollowingsLoading","loadFollowingsDone","loadFollowingsError","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","me","signUpData","loginData","userInfo","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loginRequestAction","data","type","logoutRequestAction","reducer","state","action","draft","console","log","error","Followers","filter","v","id","UserId","Followings","push","Posts","unshift"],"mappings":"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","sourcesContent":["import produce from 'immer'\r\n\r\nexport const initialState = {\r\n\tloadMyInfoLoading: false, // 유저 정보 보기 시도중일땐 로딩중 띄울거임\r\n\tloadMyInfoDone: false, // 유저 정보 보기 됨\r\n\tloadMyInfoError: null, // 유저 정보 보기중일때 에러 없앰\r\n\tremoveFollowerLoading: false, // 팔로워 유저 삭제 시도중일땐 로딩중 띄울거임\r\n\tremoveFollowerDone: false, // 팔로워 유저 삭제 됨\r\n\tremoveFollowerError: null, // 팔로워 유저 삭제 중일때 에러 없앰\r\n\tfollowLoading: false, // 팔로우 시도중일땐 로딩중 띄울거임\r\n\tfollowDone: false, // 팔로우 됨\r\n\tfollowError: null, // 팔로우중일때 에러 없앰\r\n\tunfollowLoading: false, // 언팔로우 시도중일땐 로딩중 띄울거임\r\n\tunfollowDone: false, // 언팔로우 됨\r\n\tunfollowError: null, // 언팔로우중일때 에러 없앰\r\n\tloadFollowersLoading: false, // 팔로워 시도중일땐 로딩중 띄울거임\r\n\tloadFollowersDone: false, // 팔로워 됨\r\n\tloadFollowersError: null, // 팔로워일때 에러 없앰\r\n\tloadFollowingsLoading: false, // 팔로윙 시도중일땐 로딩중 띄울거임\r\n\tloadFollowingsDone: false, // 팔로윙 됨\r\n\tloadFollowingsError: null, // 팔로윙 중일때 에러 없앰\r\n\tlogInLoading: false, // 로그인 시도중일땐 로딩중 띄울거임\r\n\tlogInDone: false, // 로그인 됨\r\n\tlogInError: null, // 로딩중일때 에러 없앰\r\n\tlogOutLoading: false, // 로그아웃 시도중\r\n\tlogOutDone: false, // 로그아웃 완료\r\n\tlogOutError: null,\r\n\tsignUpLoading: false, // 회원가입 로딩중\r\n\tsignUpDone: false, // 회원 가입 완료\r\n\tsignUpError: null,\r\n\tchangeNicknameLoading: false, // 닉네임 변경 로딩중\r\n\tchangeNicknameDone: false, // 닉네임 변경 완료\r\n\tchangeNicknameError: null,\r\n\tme: null,\r\n\tsignUpData: {}, // 회원 가입 데이터\r\n\tloginData: {},\r\n\tuserInfo: null,\r\n}\r\n\r\n// 로그인 액션 생성기 thunk\r\n// export const loginAction = (data) => { // 함수를 리턴하는 비동기 액션 크리에이터가 추가\r\n// \treturn (dispatch, getState) => {\r\n// \t\tconst state = getState()\r\n// \t\tdispatch(loginRequestAction())\r\n// \t\taxios.post('/api/login')\r\n// \t\t\t\t.then((res) => {\r\n// \t\t\t\t\tdispatch(loginSuccessAction(res.data))\r\n// \t\t\t\t})\r\n// \t\t\t\t.catch((error) => {\r\n// \t\t\t\t\tdispatch(loginFailureAction(error))\r\n// \t\t\t\t})\r\n// \t}\r\n// }\r\n\r\n// actions\r\nexport const LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST'\r\nexport const LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS'\r\nexport const LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE'\r\n\r\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST'\r\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS'\r\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE'\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST'\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS'\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE'\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST'\r\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS'\r\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE'\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST'\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS'\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE'\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST'\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS'\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE'\r\n\r\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST'\r\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS'\r\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE'\r\n\r\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST'\r\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS'\r\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE'\r\n\r\n// 유저 리듀서의 상태를 바꿀수있는 액션 생성\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME'\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME'\r\n\r\n/* front\r\nconst dummyUser = (data) => ({\r\n\t...data,\r\n\tnickname: '비타민',\r\n\tid: 1,\r\n\tPosts: [{id: 1}],\r\n\tFollowings: [{nickname: '외노'}, {nickname: '음메'}, {nickname: '썽'}, {nickname: '오댕'}, {nickname: '만뽀'}],\r\n\tFollowers: [{nickname: '까매'}, {nickname: '만두'}, {nickname: '보챙'}, {nickname: '뒷가'}, {nickname: '야덩'}],\r\n})*/\r\n\r\nexport const loginRequestAction = (data) => ({\r\n\ttype: LOG_IN_REQUEST,\r\n\tdata,\r\n});\r\n// 로그아웃 액션 생성기 thunk\r\n// export const logoutAction = (data) => {\r\n// \treturn (dispatch) => {\r\n// \t\taxios.post('/api/logout')\r\n// \t\t\t\t.then(() => {\r\n// \t\t\t\t\tdispatch(logoutSuccessAction())\r\n// \t\t\t\t})\r\n// \t\t\t\t.catch(() => {\r\n// \t\t\t\t\tdispatch(logoutFailureAction())\r\n// \t\t\t\t})\r\n// \t}\r\n// }\r\nexport const logoutRequestAction = () => ({\r\n\ttype: LOG_OUT_REQUEST,\r\n})\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n\tswitch (action.type) {\r\n\t\tcase LOAD_MY_INFO_REQUEST:\r\n\t\t\t// store 에서 보낸 state 가 만들어짐, state 자체가 user.js 의 state 임\r\n\t\t\tdraft.loadMyInfoLoading = true\r\n\t\t\tdraft.loadMyInfoDone = false\r\n\t\t\tdraft.loadMyInfoError = null // 로딩 중일때는 에러 없앰\r\n\t\t\tconsole.log('reducer myInfo 요청')\r\n\t\t\tbreak;\r\n\t\tcase LOAD_MY_INFO_SUCCESS:\r\n\t\t\tdraft.userInfo = action.data // back 상대방 정보가 들어있음\r\n\t\t\tdraft.loadMyInfoLoading = false\r\n\t\t\tdraft.loadMyInfoDone = true\r\n\t\t\t//draft.me = dummyUser(action.data)\r\n\t\t\tconsole.log('reducer myInfo 성공')\r\n\t\t\tbreak;\r\n\t\tcase LOAD_MY_INFO_FAILURE:\r\n\t\t\tconsole.error('loadMyInfoFail 실패:: ' + action.error)\r\n\t\t\tdraft.loadMyInfoLoading = false\r\n\t\t\tdraft.loadMyInfoError = action.error\r\n\t\t\tbreak;\r\n\t\tcase REMOVE_FOLLOWER_REQUEST:\r\n\t\t\tdraft.removeFollowerLoading =true\r\n\t\t\tdraft.removeFollowerDone=false\r\n\t\t\tdraft.removeFollowerError=null\r\n\t\t\tconsole.log('reducer removeFollower 요청')\r\n\t\t\tbreak;\r\n\t\tcase REMOVE_FOLLOWER_SUCCESS:\r\n\t\t\t// 나의 팔로워 제거\r\n\t\t\tdraft.me.Followers = draft.me.Followers.filter((v)=>v.id !== action.data.UserId)\r\n\t\t\tdraft.removeFollowerLoading=false\r\n\t\t\tdraft.removeFollowerDone=true\r\n\t\t\tconsole.log('reducer removeFollower 성공')\r\n\t\t\tbreak\r\n\t\tcase REMOVE_FOLLOWER_FAILURE:\r\n\t\t\tconsole.error('removeFollowerFail 실패:: ' + action.error)\r\n\t\t\tdraft.removeFollowerLoading=false\r\n\t\t\tdraft.removeFollowerError=action.error\r\n\t\tcase FOLLOW_REQUEST:\r\n\t\t\t// store 에서 보낸 state 가 만들어짐, state 자체가 user.js 의 state 임\r\n\t\t\tdraft.followLoading = true\r\n\t\t\tdraft.followError = null // 로딩 중일때는 에러 없앰\r\n\t\t\tdraft.followDone = false\r\n\t\t\tconsole.log('reducer FOLLOW_REQUEST 요청')\r\n\t\t\tbreak;\r\n\t\tcase FOLLOW_SUCCESS:\r\n\t\t\tdraft.followLoading = false\r\n\t\t\tdraft.followDone = true\r\n\t\t\t//draft.me = dummyUser(action.data)\r\n\t\t\tdraft.me.Followings.push({id: action.data.UserId})\r\n\t\t\tconsole.log('reducer FOLLOW_SUCCESS 성공')\r\n\t\t\tbreak;\r\n\t\tcase FOLLOW_FAILURE:\r\n\t\t\tdraft.followLoading = false\r\n\t\t\tdraft.followError = action.error\r\n\t\t\tconsole.error('reducer FOLLOW_FAILURE 실패::', action.error)\r\n\t\t\tbreak;\r\n\t\tcase UNFOLLOW_REQUEST:\r\n\t\t\t// store 에서 보낸 state 가 만들어짐, state 자체가 user.js 의 state 임\r\n\t\t\tdraft.unfollowLoading = true\r\n\t\t\tdraft.unfollowError = null // 로딩 중일때는 에러 없앰\r\n\t\t\tdraft.unfollowDone = false\r\n\t\t\tconsole.log('reducer unfollow 요청')\r\n\t\t\tbreak;\r\n\t\tcase UNFOLLOW_SUCCESS:\r\n\t\t\tdraft.unfollowLoading = false\r\n\t\t\tdraft.unfollowDone = true\r\n\t\t\t//draft.me = dummyUser(action.data)\r\n\t\t\t// 언팔로우 한 사람만 빠지게\r\n\t\t\tdraft.me.Followings = draft.me.Followings.filter((v) => v.id !== action.data.UserId)\r\n\t\t\tconsole.log('reducer unfollow 성공')\r\n\t\t\tbreak;\r\n\t\tcase UNFOLLOW_FAILURE:\r\n\t\t\tdraft.unfollowLoading = false\r\n\t\t\tdraft.unfollowError = action.error\r\n\t\t\tconsole.error('reducer unfollow 실패::', action.error)\r\n\t\t\tbreak;\r\n\t\tcase LOG_IN_REQUEST:\r\n\t\t\tdraft.logInLoading = true\r\n\t\t\tdraft.logInError = null\r\n\t\t\tdraft.logInDone = false\r\n\t\t\tconsole.log('reducer login 요청')\r\n\t\t\tbreak;\r\n\t\tcase LOG_IN_SUCCESS:\r\n\t\t\tdraft.logInLoading = false\r\n\t\t\tdraft.logInDone = true\r\n\t\t\t//draft.me = dummyUser(action.data) front\r\n\t\t\tdraft.me = action.data // back\r\n\t\t\tconsole.log('reducer login 성공')\r\n\t\t\tbreak;\r\n\t\tcase LOG_IN_FAILURE:\r\n\t\t\tdraft.logInLoading = false\r\n\t\t\tdraft.logInError = action.error\r\n\t\t\tconsole.error('reducer login 실패:: ', action.error)\r\n\t\t\tbreak;\r\n\t\tcase LOG_OUT_REQUEST:\r\n\t\t\tdraft.logOutLoading = true\r\n\t\t\tdraft.logOutDone = false\r\n\t\t\tdraft.logOutError = null\r\n\t\t\tconsole.log('reducer logout 요청')\r\n\t\t\tbreak;\r\n\t\tcase LOG_OUT_SUCCESS:\r\n\t\t\tdraft.logOutLoading = false\r\n\t\t\tdraft.logOutDone = true\r\n\t\t\tdraft.me = null\r\n\t\t\tconsole.log('reducer logout 성공')\r\n\t\t\tbreak;\r\n\t\tcase LOG_OUT_FAILURE:\r\n\t\t\tdraft.logOutLoading = false\r\n\t\t\tdraft.logOutError = action.error\r\n\t\t\tconsole.error('reducer logout 실패', action.error)\r\n\t\t\tbreak\r\n\t\tcase SIGN_UP_REQUEST:\r\n\t\t\tdraft.signUpLoading = true\r\n\t\t\tdraft.signUpDone = false\r\n\t\t\tdraft.signUpError = null\r\n\t\t\tconsole.log('reducer signup 요청')\r\n\t\t\tbreak;\r\n\t\tcase SIGN_UP_SUCCESS:\r\n\t\t\tdraft.signUpLoading = false\r\n\t\t\tdraft.signUpDone = true\r\n\t\t\tconsole.log('reducer signUp 성공')\r\n\t\t\tbreak\r\n\t\tcase SIGN_UP_FAILURE:\r\n\t\t\tdraft.signUpLoading = false\r\n\t\t\tdraft.signUpError = action.error\r\n\t\t\tconsole.error('reducer signUp 실패', action.error)\r\n\t\t\tbreak\r\n\t\tcase CHANGE_NICKNAME_REQUEST:\r\n\t\t\tdraft.changeNicknameLoading = true\r\n\t\t\tdraft.changeNicknameDone = false\r\n\t\t\tdraft.changeNicknameError = null\r\n\t\t\tconsole.log('reducer CHANGE_NICKNAME_REQUEST 요청')\r\n\t\t\tbreak\r\n\t\tcase CHANGE_NICKNAME_SUCCESS:\r\n\t\t\tdraft.changeNicknameLoading = false\r\n\t\t\tdraft.changeNicknameDone = true\r\n\t\t\tconsole.log('reducer CHANGE_NICKNAME_SUCCESS 성공')\r\n\t\t\tbreak;\r\n\t\tcase CHANGE_NICKNAME_FAILURE:\r\n\t\t\tdraft.changeNicknameLoading = false\r\n\t\t\tdraft.changeNicknameError = action.error\r\n\t\t\tconsole.error('reducer CHANGE_NICKNAME 실패', action.error)\r\n\t\t\tbreak;\r\n\t\tcase LOAD_FOLLOWERS_REQUEST:\r\n\t\t\tdraft.loadFollowersLoading = true\r\n\t\t\tdraft.loadFollowersDone = false\r\n\t\t\tdraft.loadFollowersError = null\r\n\t\t\tconsole.log('reducer LOAD_FOLLOWERS_REQUEST 요청')\r\n\t\t\tbreak\r\n\t\tcase LOAD_FOLLOWERS_SUCCESS:\r\n\t\t\tdraft.loadFollowersLoading = false\r\n\t\t\tdraft.loadFollowersDone = true\r\n\t\t\tdraft.me.Followers = action.data\r\n\t\t\tconsole.log('reducer LOAD_FOLLOWERS_SUCCESS 성공')\r\n\t\t\tbreak;\r\n\t\tcase LOAD_FOLLOWERS_FAILURE:\r\n\t\t\tdraft.loadFollowersLoading = false\r\n\t\t\tdraft.loadFollowersError = action.error\r\n\t\t\tconsole.error('reducer LOAD_FOLLOWERS 실패', action.error)\r\n\t\t\tbreak;\r\n\t\tcase LOAD_FOLLOWINGS_REQUEST:\r\n\t\t\tdraft.loadFollowingsLoading = true\r\n\t\t\tdraft.loadFollowingsDone = false\r\n\t\t\tdraft.loadFollowingsError = null\r\n\t\t\tconsole.log('reducer LOAD_FOLLOWINGS_REQUEST 요청')\r\n\t\t\tbreak\r\n\t\tcase LOAD_FOLLOWINGS_SUCCESS:\r\n\t\t\tdraft.loadFollowingsLoading = false\r\n\t\t\tdraft.loadFollowingsDone = true\r\n\t\t\tdraft.me.Followings = action.data\r\n\t\t\tconsole.log('reducer LOAD_FOLLOWINGS_SUCCESS 성공')\r\n\t\t\tbreak;\r\n\t\tcase LOAD_FOLLOWINGS_FAILURE:\r\n\t\t\tdraft.loadFollowingsLoading = false\r\n\t\t\tdraft.loadFollowingsError = action.error\r\n\t\t\tconsole.error('reducer LOAD_FOLLOWINGS 실패', action.error)\r\n\t\t\tbreak;\r\n\t\tcase ADD_POST_TO_ME: // 게시글을 쓰면 게시글 아이디가 여기로 들어와서 하나가 추가된다\r\n\t\t\tdraft.me.Posts.unshift({id: action.data})\r\n\t\t\tconsole.log('ADD_POST_TO_ME 성공')\r\n\t\t\tbreak\r\n\t\t\t// return {\r\n\t\t\t// \t...state,\r\n\t\t\t// \tme: {\r\n\t\t\t// \t\t...state.me,\r\n\t\t\t// \t\tPosts: [{id: action.data}, ...state.me.Posts],\r\n\t\t\t// \t}\r\n\t\t\t// }\r\n\t\tcase REMOVE_POST_OF_ME:\r\n\t\t\tdraft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data)\r\n\t\t\tconsole.log('REMOVE_POST_OF_ME')\r\n\t\t\tbreak;\r\n\t\t\t// return { // 불변성을 지키며 게시글을 지워야한다.\r\n\t\t\t// \t...state,\r\n\t\t\t// \tme: {\r\n\t\t\t// \t\t...state.me,\r\n\t\t\t// \t\tPosts: state.me.Posts.filter((v) => v.id !== action.data)\r\n\t\t\t// \t}\r\n\t\t\t// }\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n})\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}