{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(logIn),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(logOut),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(changeNickname),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(loadMyInfo),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(follow),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(unfollow),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(loadFollowers),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(loadFollowings),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(removeFollower),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(loadUser),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadUser),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(watchRemoveFollower),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadFollowers),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadFollowings),\n    _marked16 = /*#__PURE__*/_regeneratorRuntime.mark(watchChangeNickname),\n    _marked17 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadMyInfo),\n    _marked18 = /*#__PURE__*/_regeneratorRuntime.mark(watchFollow),\n    _marked19 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnFollow),\n    _marked20 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogIn),\n    _marked21 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogOut),\n    _marked22 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignUp),\n    _marked23 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, REMOVE_FOLLOWER_FAILURE, REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from \"../reducers/user\";\n\nfunction logInAPI(data) {\n  // generator 아님\n  //return axios.post('/api/login', data) // 실제 서버에 로그인 요청을 보냄 // front\n  // 실제 서버에 로그인 요청을 보냄 // back\n  //return axios.post('http://localhost:3065/user/login', data)\n  // localhost 중복 없애기\n  return axios.post('/user/login', data);\n} // 테스트 코드\n// const l = logIn({type: 'LOG_IN_REQUEST', data: {id: 'rlaalsdn8@naver.com'}})\n// \t\tl.next();\n// \t\tl.next();\n/////////////////\n\n\nfunction logIn(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function logIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(logInAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          // 서버에서 받은 결과 값을 받음\n          console.log('saga logIn 실행중::', action.data);\n          _context.next = 7;\n          return put({\n            type: LOG_IN_SUCCESS,\n            //data: action.data, // front\n            data: result.data // (성공 결과 담김) back\n\n          });\n\n        case 7:\n          console.log('saga logIn 완료 ::', result);\n          _context.next = 15;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          console.error('logIn', _context.t0);\n          _context.next = 15;\n          return put({\n            // put 은 dispatch 라고 생각하자\n            type: LOG_IN_FAILURE,\n            error: _context.t0.response.data // (실패 결과 담김)\n\n          });\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 10]]);\n}\n\nfunction logOutAPI() {\n  // return axios.post('/api/logout') front\n  return axios.post('/user/logout');\n}\n\nfunction logOut() {\n  return _regeneratorRuntime.wrap(function logOut$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(logOutAPI);\n\n        case 3:\n          // 서버에서 받은 결과 값을 받음 back\n          console.log('sagas:: logout 실행');\n          _context2.next = 6;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 6:\n          console.log('sagas:: logout 완료');\n          _context2.next = 14;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error('front logOut : ', _context2.t0);\n          _context2.next = 14;\n          return put({\n            // put 은 dispatch 라고 생각하자\n            type: LOG_OUT_FAILURE,\n            error: _context2.t0.response.data // (실패 결과 담김)\n\n          });\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 9]]);\n}\n\nfunction changeNicknameAPI(data) {\n  // generator 아님\n  // 실제 서버에 로그인 요청을 보냄 // back\n  //return axios.post('http://localhost:3065/user/login', data)\n  // localhost 중복 없애기\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\nfunction changeNickname(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function changeNickname$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(changeNicknameAPI, action.data);\n\n        case 3:\n          result = _context3.sent;\n          // 서버에서 받은 결과 값을 받음\n          console.log('saga changeNickname 실행중::', action.data);\n          _context3.next = 7;\n          return put({\n            type: CHANGE_NICKNAME_SUCCESS,\n            //data: action.data, // front\n            data: result.data // (성공 결과 담김) back\n\n          });\n\n        case 7:\n          console.log('saga changeNickname 완료 ::', result);\n          _context3.next = 15;\n          break;\n\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error('changeNickname', _context3.t0);\n          _context3.next = 15;\n          return put({\n            // put 은 dispatch 라고 생각하자\n            type: CHANGE_NICKNAME_FAILURE,\n            error: _context3.t0.response.data // (실패 결과 담김)\n\n          });\n\n        case 15:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 10]]);\n}\n\nfunction loadMyInfoAPI(userId) {\n  // 서버에 요청을 보내는 부분\n  return axios.get(userId ? \"/user/\".concat(userId) : '/user/', {\n    withCredentials: true // 클라이언트에서 요청 보낼 때는 브라우저가 쿠키를 같이 동봉해줘요\n\n  }); // 서버사이드렌더링일 때는, 브라우저가 없어요.\n}\n\nfunction loadMyInfo(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadMyInfo$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(loadMyInfoAPI, action.data);\n\n        case 3:\n          result = _context4.sent;\n          console.log('saga loadMyInfo 실행 :: ', action.data);\n          _context4.next = 7;\n          return put({\n            type: LOAD_MY_INFO_SUCCESS,\n            data: result.data,\n            me: !action.data\n          });\n\n        case 7:\n          console.log('saga loadMyInfo 성공:: ', result);\n          _context4.next = 15;\n          break;\n\n        case 10:\n          _context4.prev = 10;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.error('saga loadMyInfo error :: ', _context4.t0);\n          _context4.next = 15;\n          return put({\n            type: LOAD_MY_INFO_FAILURE,\n            error: _context4.t0.response.data\n          });\n\n        case 15:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 10]]);\n}\n\nfunction followAPI(data) {\n  // data 에 사용자 id 넣어주기\n  // return axios.post('/api/follow', data) front\n  return axios.patch(\"/user/\".concat(data, \"/follow\"));\n}\n\nfunction follow(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function follow$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(followAPI, action.data);\n\n        case 3:\n          result = _context5.sent;\n          console.log('saga follow 실행 : ', result);\n          _context5.next = 7;\n          return put({\n            type: FOLLOW_SUCCESS,\n            //data: action.data front\n            data: result.data\n          });\n\n        case 7:\n          console.log('saga follow 완료 :: ', result);\n          _context5.next = 15;\n          break;\n\n        case 10:\n          _context5.prev = 10;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error('saga follow error :: ', _context5.t0);\n          _context5.next = 15;\n          return put({\n            type: FOLLOW_FAILURE,\n            error: _context5.t0.response.data\n          });\n\n        case 15:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 10]]);\n}\n\nfunction unfollowAPI(data) {\n  // data 에 사용자 id 넣어주기\n  //return axios.post('/api/unfollow', data) front\n  return axios[\"delete\"](\"/user/\".concat(data, \"/follow\"));\n}\n\nfunction unfollow(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function unfollow$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(unfollowAPI, action.data);\n\n        case 3:\n          result = _context6.sent;\n          //yield delay(1000) front\n          console.log('saga unfollow 요청 :: ', action.data);\n          _context6.next = 7;\n          return put({\n            type: UNFOLLOW_SUCCESS,\n            //data: action.data front\n            data: result.data\n          });\n\n        case 7:\n          console.log('saga unfollow 성공:: ', result);\n          _context6.next = 15;\n          break;\n\n        case 10:\n          _context6.prev = 10;\n          _context6.t0 = _context6[\"catch\"](0);\n          console.error('saga unfollow error:: ', _context6.t0);\n          _context6.next = 15;\n          return put({\n            type: UNFOLLOW_FAILURE,\n            error: _context6.t0.response.data\n          });\n\n        case 15:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 10]]);\n}\n\nfunction signUpAPI(data) {\n  // back end server addr\n  // data 는 email, nickname, password object\n  //return axios.post('/api/signup', data) // front\n  return axios.post('/user', data); // back\n}\n\nfunction signUp(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function signUp$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(signUpAPI, action.data);\n\n        case 3:\n          result = _context7.sent;\n          console.log('saga sign up result 실행중 :: ', action.data);\n          _context7.next = 7;\n          return put({\n            type: SIGN_UP_SUCCESS //data: result.data\n\n          });\n\n        case 7:\n          console.log('saga sign up 완료 :: ', result);\n          _context7.next = 15;\n          break;\n\n        case 10:\n          _context7.prev = 10;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.error('saga signUp error : ', _context7.t0);\n          _context7.next = 15;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context7.t0.response.data\n          });\n\n        case 15:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 10]]);\n}\n\nfunction loadFollowersAPI(data) {\n  return axios.get('/user/followers', data);\n}\n\nfunction loadFollowers(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadFollowers$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _context8.next = 3;\n          return call(loadFollowersAPI, action.data);\n\n        case 3:\n          result = _context8.sent;\n          console.log('saga followers:: 요청', action.data);\n          _context8.next = 7;\n          return put({\n            type: LOAD_FOLLOWERS_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          console.log('saga followers:: 성공', result);\n          _context8.next = 15;\n          break;\n\n        case 10:\n          _context8.prev = 10;\n          _context8.t0 = _context8[\"catch\"](0);\n          console.error('saga followers::', _context8.t0);\n          _context8.next = 15;\n          return put({\n            type: LOAD_FOLLOWERS_FAILURE,\n            error: _context8.t0.response.data\n          });\n\n        case 15:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[0, 10]]);\n}\n\nfunction loadFollowingsAPI(data) {\n  return axios.get('/user/followings', data);\n}\n\nfunction loadFollowings(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadFollowings$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(loadFollowingsAPI, action.data);\n\n        case 3:\n          result = _context9.sent;\n          console.log('saga followings 요청::', action.data);\n          _context9.next = 7;\n          return put({\n            type: LOAD_FOLLOWINGS_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          console.log('saga followings 성공::', result);\n          _context9.next = 15;\n          break;\n\n        case 10:\n          _context9.prev = 10;\n          _context9.t0 = _context9[\"catch\"](0);\n          console.error('saga followings 실패::', _context9.t0);\n          _context9.next = 15;\n          return put({\n            type: LOAD_FOLLOWINGS_FAILURE,\n            error: _context9.t0.response.data\n          });\n\n        case 15:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 10]]);\n}\n\nfunction removeFollowerAPI(data) {\n  return axios[\"delete\"](\"/user/follower/\".concat(data)); // 몇번째의 팔로워를 제거한다\n}\n\nfunction removeFollower(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function removeFollower$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.prev = 0;\n          _context10.next = 3;\n          return call(removeFollowerAPI, action.data);\n\n        case 3:\n          result = _context10.sent;\n          console.log('saga removeFollower 요청:: ', action.data);\n          _context10.next = 7;\n          return put({\n            type: REMOVE_FOLLOWER_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          console.log('saga removeFollower 성공:: ', result);\n          _context10.next = 15;\n          break;\n\n        case 10:\n          _context10.prev = 10;\n          _context10.t0 = _context10[\"catch\"](0);\n          console.error('saga removeFollower 실패:: ', _context10.t0);\n          _context10.next = 15;\n          return put({\n            type: REMOVE_FOLLOWER_FAILURE,\n            error: _context10.t0.response.data\n          });\n\n        case 15:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10, null, [[0, 10]]);\n}\n\nfunction loadUserAPI(data) {\n  return axios.get(\"/user/\".concat(data));\n}\n\nfunction loadUser(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadUser$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          _context11.next = 3;\n          return call(loadUserAPI, action.data);\n\n        case 3:\n          result = _context11.sent;\n          console.log('saga loadUser 실행 :: ', action.data);\n          _context11.next = 7;\n          return put({\n            type: LOAD_USER_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          console.log('saga loadUser 성공 :: ', result);\n          _context11.next = 15;\n          break;\n\n        case 10:\n          _context11.prev = 10;\n          _context11.t0 = _context11[\"catch\"](0);\n          console.error('saga loadUser Failure 실패 :: ', _context11.t0);\n          _context11.next = 15;\n          return put({\n            type: LOAD_USER_FAILURE,\n            error: _context11.t0.response.data\n          });\n\n        case 15:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[0, 10]]);\n}\n\nfunction watchLoadUser() {\n  return _regeneratorRuntime.wrap(function watchLoadUser$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(LOAD_USER_REQUEST, loadUser);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nfunction watchRemoveFollower() {\n  return _regeneratorRuntime.wrap(function watchRemoveFollower$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}\n\nfunction watchLoadFollowers() {\n  return _regeneratorRuntime.wrap(function watchLoadFollowers$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\n\nfunction watchLoadFollowings() {\n  return _regeneratorRuntime.wrap(function watchLoadFollowings$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n\n        case 2:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15);\n}\n\nfunction watchChangeNickname() {\n  return _regeneratorRuntime.wrap(function watchChangeNickname$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n\n        case 2:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16);\n}\n\nfunction watchLoadMyInfo() {\n  return _regeneratorRuntime.wrap(function watchLoadMyInfo$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.next = 2;\n          return takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n\n        case 2:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17);\n}\n\nfunction watchFollow() {\n  return _regeneratorRuntime.wrap(function watchFollow$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.next = 2;\n          return takeLatest(FOLLOW_REQUEST, follow);\n\n        case 2:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, _marked18);\n}\n\nfunction watchUnFollow() {\n  return _regeneratorRuntime.wrap(function watchUnFollow$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.next = 2;\n          return takeLatest(UNFOLLOW_REQUEST, unfollow);\n\n        case 2:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, _marked19);\n}\n\nfunction watchLogIn() {\n  return _regeneratorRuntime.wrap(function watchLogIn$(_context20) {\n    while (1) {\n      switch (_context20.prev = _context20.next) {\n        case 0:\n          _context20.next = 2;\n          return takeLatest(LOG_IN_REQUEST, logIn);\n\n        case 2:\n        case \"end\":\n          return _context20.stop();\n      }\n    }\n  }, _marked20);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context21) {\n    while (1) {\n      switch (_context21.prev = _context21.next) {\n        case 0:\n          _context21.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context21.stop();\n      }\n    }\n  }, _marked21);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context22) {\n    while (1) {\n      switch (_context22.prev = _context22.next) {\n        case 0:\n          _context22.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context22.stop();\n      }\n    }\n  }, _marked22);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context23) {\n    while (1) {\n      switch (_context23.prev = _context23.next) {\n        case 0:\n          _context23.next = 2;\n          return all([fork(watchLoadUser), fork(watchRemoveFollower), fork(watchLoadFollowers), fork(watchLoadFollowings), fork(watchChangeNickname), fork(watchLoadMyInfo), fork(watchFollow), fork(watchUnFollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n\n        case 2:\n        case \"end\":\n          return _context23.stop();\n      }\n    }\n  }, _marked23);\n}","map":null,"metadata":{},"sourceType":"module"}