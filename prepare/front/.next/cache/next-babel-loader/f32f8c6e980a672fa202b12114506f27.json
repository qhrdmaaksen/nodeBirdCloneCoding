{"ast":null,"code":"var _jsxFileName = \"D:\\\\intellijProjects\\\\react-nodebird\\\\prepare\\\\front\\\\component\\\\FollowList.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { List, Button, Card } from 'antd';\nimport { StopOutlined } from '@ant-design/icons';\nimport { useDispatch } from \"react-redux\";\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST, REMOVE_FOLLOWER_REQUEST } from \"../reducers/user\"; // eslint-disable-next-line react/prop-types\n\nconst FollowList = ({\n  header,\n  data,\n  onClickMore,\n  loading\n}) => {\n  const dispatch = useDispatch();\n  /*반복문 안에서 onClick 이있다면 반복문에 대한 데이터는 온클릭으로 넘김\n  고차 함수를 사용해서 아이템에 대한 데이터를 보내고 싶을때 사용*/\n\n  const onCancel = id => () => {\n    // follow 취소\n    if (header === '팔로잉') {\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: id\n      });\n    }\n\n    dispatch({\n      type: REMOVE_FOLLOWER_REQUEST,\n      data: id\n    });\n  };\n\n  return __jsx(List, {\n    style: {\n      marginBottom: 20\n    },\n    grind: {\n      gutter: 4,\n      xs: 2,\n      sm: 2,\n      md: 3,\n      lg: 3,\n      xl: 3,\n      xxl: 4\n    },\n    size: \"small\",\n    header: __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 14\n      }\n    }, header),\n    loadMore: __jsx(\"div\", {\n      style: {\n        textAlign: 'center',\n        margin: '10px 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, __jsx(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 8\n      }\n    }, \"\\uB354 \\uBCF4\\uAE30\")),\n    bordered: true,\n    dataSource: data,\n    renderItem: item => __jsx(List.Item, {\n      style: {\n        marginTop: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 8\n      }\n    }, __jsx(Card, {\n      actions: [__jsx(StopOutlined, {\n        key: \"stop\",\n        onClick: onCancel(item.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }\n      })],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, __jsx(Card.Meta, {\n      description: item.nickname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 10\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }\n  });\n};\n\nFollowList.propTypes = {\n  header: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired,\n  onClickMore: PropTypes.a\n};\nexport default FollowList;","map":{"version":3,"sources":["D:/intellijProjects/react-nodebird/prepare/front/component/FollowList.js"],"names":["React","PropTypes","List","Button","Card","StopOutlined","useDispatch","FOLLOW_REQUEST","UNFOLLOW_REQUEST","REMOVE_FOLLOWER_REQUEST","FollowList","header","data","onClickMore","loading","dispatch","onCancel","id","type","marginBottom","gutter","xs","sm","md","lg","xl","xxl","textAlign","margin","item","marginTop","nickname","propTypes","string","isRequired","array","a"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport {List, Button, Card} from 'antd'\nimport {StopOutlined} from '@ant-design/icons'\nimport {useDispatch} from \"react-redux\";\nimport {FOLLOW_REQUEST, UNFOLLOW_REQUEST, REMOVE_FOLLOWER_REQUEST} from \"../reducers/user\";\n\n\n// eslint-disable-next-line react/prop-types\nconst FollowList = ({header, data, onClickMore, loading}) => {\n\tconst dispatch = useDispatch()\n\n\t/*반복문 안에서 onClick 이있다면 반복문에 대한 데이터는 온클릭으로 넘김\n\t고차 함수를 사용해서 아이템에 대한 데이터를 보내고 싶을때 사용*/\n\tconst onCancel = (id) => () => { // follow 취소\n\t\tif (header === '팔로잉') {\n\t\t\tdispatch({\n\t\t\t\ttype: UNFOLLOW_REQUEST,\n\t\t\t\tdata: id,\n\t\t\t})\n\t\t}\n\t\tdispatch({\n\t\t\ttype: REMOVE_FOLLOWER_REQUEST,\n\t\t\tdata: id,\n\t\t})\n\t}\n\treturn (\n\t\t\t<List\n\t\t\t\t\tstyle={{marginBottom: 20}}\n\t\t\t\t\tgrind={{gutter: 4, xs: 2, sm: 2, md: 3, lg: 3, xl: 3, xxl: 4}}\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\theader={<div>{header}</div>}\n\t\t\t\t\tloadMore={\n\t\t\t\t\t\t<div style={{textAlign: 'center', margin: '10px 0'}}>\n\t\t\t\t\t\t\t<Button>더 보기</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\tbordered\n\t\t\t\t\tdataSource={data}\n\t\t\t\t\trenderItem={(item) => (\n\t\t\t\t\t\t\t<List.Item style={{marginTop: 20}}>\n\t\t\t\t\t\t\t\t<Card actions={[<StopOutlined key=\"stop\" onClick={onCancel(item.id)}/>]}>\n\t\t\t\t\t\t\t\t\t<Card.Meta description={item.nickname}/>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t)}\n\t\t\t/>\n\t)\n}\nFollowList.propTypes = {\n\theader: PropTypes.string.isRequired,\n\tdata: PropTypes.array.isRequired,\n\tonClickMore: PropTypes.a\n}\n\nexport default FollowList\n"]},"metadata":{},"sourceType":"module"}