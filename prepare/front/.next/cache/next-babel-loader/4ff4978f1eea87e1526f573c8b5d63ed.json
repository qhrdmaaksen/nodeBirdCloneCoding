{"ast":null,"code":"var _jsxFileName = \"D:\\\\intellijProjects\\\\react-nodebird\\\\prepare\\\\front\\\\component\\\\PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport { Avatar, Button, Card, Popover } from \"antd\";\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined, HeartTwoTone } from \"@ant-design/icons\";\nimport { useSelector } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport PostImages from \"./PostImages\";\n\nconst PostCard = ({\n  post\n}) => {\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  }); //state.user.me && state.user.me.id\n\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const onToggleLike = useCallback(() => {}, []);\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 32\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 8\n      }\n    }), // 리트윗 버튼\n    liked ? __jsx(HeartOutlined, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 12\n      }\n    }) // 하트 버튼\n    : __jsx(MessageOutlined, {\n      key: \"comment\",\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    }), // 댓글 버튼\n    __jsx(Popover, {\n      key: \"more\",\n      content: // 더 보기 버튼\n      __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 10\n        }\n      }, id && post.User.id === id ?\n      /*내가 쓴 글이면 수정 삭제 가능*/\n      __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 14\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 14\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }\n      }, \"\\uC2E0\\uACE0\"), \" \"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 8\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 8\n    }\n  })));\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    // 날짜 객체\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["D:/intellijProjects/react-nodebird/prepare/front/component/PostCard.js"],"names":["React","useCallback","useState","Avatar","Button","Card","Popover","EllipsisOutlined","HeartOutlined","MessageOutlined","RetweetOutlined","HeartTwoTone","useSelector","PropTypes","PostImages","PostCard","post","id","state","user","me","liked","setLiked","commentFormOpened","setCommentFormOpened","onToggleLike","marginBottom","Images","User","nickname","content","propTypes","shape","number","object","string","createdAt","Comments","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React, {useCallback, useState} from 'react'\r\nimport {Avatar, Button, Card, Popover} from \"antd\";\r\nimport {EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined, HeartTwoTone} from \"@ant-design/icons\";\r\nimport {useSelector} from \"react-redux\";\r\nimport PropTypes from 'prop-types'\r\nimport PostImages from \"./PostImages\";\r\n\r\nconst PostCard = ({post}) => {\r\n\tconst id = useSelector((state) => state.user.me?.id) //state.user.me && state.user.me.id\r\n\tconst [liked, setLiked] = useState(false)\r\n\tconst [commentFormOpened, setCommentFormOpened] = useState(false)\r\n\r\n\tconst onToggleLike = useCallback(() => {\r\n\t\t\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t\t<div style={{marginBottom: 20}}>\r\n\t\t\t\t<Card\r\n\t\t\t\t\t\tcover={post.Images[0] && <PostImages images={post.Images}/>}\r\n\t\t\t\t\t\tactions={[\r\n\t\t\t\t\t\t\t<RetweetOutlined key=\"retweet\"/>, // 리트윗 버튼\r\n\t\t\t\t\t\t\tliked\r\n\t\t\t\t\t\t\t\t\t? <HeartOutlined twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} /> // 하트 버튼\r\n\t\t\t\t\t\t\t\t\t: <MessageOutlined key=\"comment\" onClick={onToggleLike}/>, // 댓글 버튼\r\n\t\t\t\t\t\t\t<Popover key=\"more\" content={( // 더 보기 버튼\r\n\t\t\t\t\t\t\t\t\t<Button.Group>\r\n\t\t\t\t\t\t\t\t\t\t{id && post.User.id === id ? ( /*내가 쓴 글이면 수정 삭제 가능*/\r\n\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button>수정</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button type=\"danger\">삭제</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t) : <Button>신고</Button>} {/* 남이 쓴 글이면 삭제 가능*/}\r\n\t\t\t\t\t\t\t\t\t</Button.Group>\r\n\t\t\t\t\t\t\t)}>\r\n\t\t\t\t\t\t\t\t<EllipsisOutlined/>\r\n\t\t\t\t\t\t\t</Popover>,\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Card.Meta\r\n\t\t\t\t\t\t\tavatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n\t\t\t\t\t\t\ttitle={post.User.nickname}\r\n\t\t\t\t\t\t\tdescription={post.content}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t{/*<CommentForm />\r\n\t\t\t\t<Comments />*/}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tPostCard.propTypes={\r\n\t\t\t\t\t\t\tpost: PropTypes.shape({\r\n\t\t\t\t\t\t\tid: PropTypes.number,\r\n\t\t\t\t\t\t\tUser: PropTypes.object,\r\n\t\t\t\t\t\t\tcontent: PropTypes.string,\r\n\t\t\t\t\t\t\tcreatedAt: PropTypes.object, // 날짜 객체\r\n\t\t\t\t\t\t\tComments: PropTypes.arrayOf(PropTypes.object),\r\n\t\t\t\t\t\t\tImages: PropTypes.arrayOf(PropTypes.object),\r\n\t\t\t\t\t\t}).isRequired,\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\texport default PostCard"]},"metadata":{},"sourceType":"module"}