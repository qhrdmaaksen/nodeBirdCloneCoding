{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport Head from 'next/head';\nimport { Form, Input, Checkbox, Button } from 'antd';\nimport useInput from '../hooks/useInput';\nimport styled from 'styled-components';\nimport { SIGN_UP_REQUEST } from \"../reducers/user\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Router from \"next/router\";\nvar ErrorMessage = styled.div.withConfig({\n  displayName: \"signup__ErrorMessage\",\n  componentId: \"sc-1oeks01-0\"\n})([\"color:red;\"]);\n\nvar Signup = function Signup() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      signUpLoading = _useSelector.signUpLoading,\n      signUpDone = _useSelector.signUpDone,\n      signUpError = _useSelector.signUpError,\n      me = _useSelector.me;\n\n  useEffect(function () {\n    if (me && me.id) {\n      // 회원가입 페이지에서 로그인했을 경우 main 화면으로\n      Router.replace('/');\n    }\n  }, [me && me.id]);\n  useEffect(function () {\n    if (signUpDone) {\n      // 회원 가입이 완료되면\n      Router.replace('/'); // 메인 페이지로 이동\n    }\n  }, [signUpDone]);\n  useEffect(function () {\n    if (signUpError) {\n      alert('회원가입 에러 : ' + signUpError);\n    }\n  }, [signUpError]);\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      email = _useInput2[0],\n      onChangeEmail = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      nickname = _useInput4[0],\n      onChangeNickname = _useInput4[1];\n\n  var _useInput5 = useInput(''),\n      _useInput6 = _slicedToArray(_useInput5, 2),\n      password = _useInput6[0],\n      onChangePassword = _useInput6[1];\n\n  var _useState = useState(''),\n      passwordCheck = _useState[0],\n      setPasswordCheck = _useState[1];\n\n  var _useState2 = useState(false),\n      passwordError = _useState2[0],\n      setPasswordError = _useState2[1];\n\n  var onChangePasswordCheck = useCallback(function (e) {\n    setPasswordCheck(e.target.value);\n    setPasswordError(e.target.value !== password);\n  }, [password]);\n\n  var _useState3 = useState(''),\n      term = _useState3[0],\n      setTerm = _useState3[1];\n\n  var _useState4 = useState(false),\n      termError = _useState4[0],\n      setTermError = _useState4[1];\n\n  var onChangeTerm = useCallback(function (e) {\n    setTerm(e.target.checked);\n    setTermError(false);\n  }, []);\n  var onSubmit = useCallback(function () {\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    console.log('front onSubmit : ' + email, nickname, password);\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        email: email,\n        password: password,\n        nickname: nickname\n      }\n    });\n  }, [password, passwordCheck, term]);\n  return __jsx(AppLayout, null, __jsx(Head, null, __jsx(\"title\", null, \"\\uD68C\\uC6D0 \\uAC00\\uC785 | NodeBird\")), __jsx(Form, {\n    onFinish: onSubmit\n  }, __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-email\"\n  }, \" \\uC774\\uBA54\\uC77C \"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-email\",\n    type: \"email\",\n    value: email,\n    required: true,\n    onChange: onChangeEmail\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-nick\"\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-nick\",\n    value: nickname,\n    required: true,\n    onChange: onChangeNickname\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-password\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    required: true,\n    onChange: onChangePassword\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-password-check\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCCB4\\uD06C\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-password-check\",\n    type: \"password\",\n    value: passwordCheck,\n    required: true,\n    onChange: onChangePasswordCheck\n  }), passwordError && __jsx(ErrorMessage, null, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4!\")), __jsx(\"div\", null, __jsx(Checkbox, {\n    name: \"user-term\",\n    checked: term,\n    onChange: onChangeTerm\n  }, \"\\uC5F4\\uC2EC\\uD788\\uACF5\\uBD80\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"), termError && __jsx(ErrorMessage, null, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C\\uD569\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: signUpLoading\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\"))));\n}; // login 여부에 따라 화면이 바뀌기 때문에 SSR 적용\n\n\nexport var __N_SSP = true;\nexport default Signup;","map":{"version":3,"sources":["D:/intellijProjects/react-nodebird/prepare/front/pages/signup.js"],"names":["React","useCallback","useEffect","useState","AppLayout","Head","Form","Input","Checkbox","Button","useInput","styled","SIGN_UP_REQUEST","useDispatch","useSelector","Router","ErrorMessage","div","Signup","dispatch","state","user","signUpLoading","signUpDone","signUpError","me","id","replace","alert","email","onChangeEmail","nickname","onChangeNickname","password","onChangePassword","passwordCheck","setPasswordCheck","passwordError","setPasswordError","onChangePasswordCheck","e","target","value","term","setTerm","termError","setTermError","onChangeTerm","checked","onSubmit","console","log","type","data","marginTop"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAsD,OAAtD;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,QAArB,EAA+BC,MAA/B,QAA4C,MAA5C;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAGA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAA8BC,eAA9B,QAAoD,kBAApD;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAGA,IAAMC,YAAY,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,kBAAlB;;AAIA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACpB,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AACA,qBAAqDC,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAhE;AAAA,MAAOC,aAAP,gBAAOA,aAAP;AAAA,MAAsBC,UAAtB,gBAAsBA,UAAtB;AAAA,MAAkCC,WAAlC,gBAAkCA,WAAlC;AAAA,MAA+CC,EAA/C,gBAA+CA,EAA/C;;AAEAvB,EAAAA,SAAS,CAAC,YAAM;AACf,QAAIuB,EAAE,IAAIA,EAAE,CAACC,EAAb,EAAiB;AAAE;AAClBX,MAAAA,MAAM,CAACY,OAAP,CAAe,GAAf;AACA;AACD,GAJQ,EAIN,CAACF,EAAE,IAAIA,EAAE,CAACC,EAAV,CAJM,CAAT;AAMAxB,EAAAA,SAAS,CAAC,YAAM;AACf,QAAIqB,UAAJ,EAAgB;AAAE;AACjBR,MAAAA,MAAM,CAACY,OAAP,CAAe,GAAf,EADe,CACK;AACpB;AACD,GAJQ,EAIN,CAACJ,UAAD,CAJM,CAAT;AAMArB,EAAAA,SAAS,CAAC,YAAM;AACf,QAAIsB,WAAJ,EAAiB;AAChBI,MAAAA,KAAK,CAAC,eAAeJ,WAAhB,CAAL;AACA;AACD,GAJQ,EAIN,CAACA,WAAD,CAJM,CAAT;;AAMA,kBAA+Bd,QAAQ,CAAC,EAAD,CAAvC;AAAA;AAAA,MAAOmB,KAAP;AAAA,MAAcC,aAAd;;AACA,mBAAqCpB,QAAQ,CAAC,EAAD,CAA7C;AAAA;AAAA,MAAOqB,QAAP;AAAA,MAAiBC,gBAAjB;;AACA,mBAAqCtB,QAAQ,CAAC,EAAD,CAA7C;AAAA;AAAA,MAAOuB,QAAP;AAAA,MAAiBC,gBAAjB;;AAEA,kBAA0C/B,QAAQ,CAAC,EAAD,CAAlD;AAAA,MAAOgC,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,mBAA0CjC,QAAQ,CAAC,KAAD,CAAlD;AAAA,MAAOkC,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,MAAMC,qBAAqB,GAAGtC,WAAW,CACvC,UAACuC,CAAD,EAAO;AACNJ,IAAAA,gBAAgB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;AACAJ,IAAAA,gBAAgB,CAACE,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmBT,QAApB,CAAhB;AACA,GAJsC,EAKvC,CAACA,QAAD,CALuC,CAAzC;;AAQA,mBAAwB9B,QAAQ,CAAC,EAAD,CAAhC;AAAA,MAAOwC,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAkCzC,QAAQ,CAAC,KAAD,CAA1C;AAAA,MAAO0C,SAAP;AAAA,MAAkBC,YAAlB;;AACA,MAAMC,YAAY,GAAG9C,WAAW,CAAC,UAACuC,CAAD,EAAO;AACvCI,IAAAA,OAAO,CAACJ,CAAC,CAACC,MAAF,CAASO,OAAV,CAAP;AACAF,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,GAH+B,EAG7B,EAH6B,CAAhC;AAKA,MAAMG,QAAQ,GAAGhD,WAAW,CAAC,YAAM;AAClC,QAAIgC,QAAQ,KAAKE,aAAjB,EAAgC;AAC/B,aAAOG,gBAAgB,CAAC,IAAD,CAAvB;AACA;;AACD,QAAI,CAACK,IAAL,EAAW;AACV,aAAOG,YAAY,CAAC,IAAD,CAAnB;AACA;;AACDI,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBtB,KAAlC,EAAyCE,QAAzC,EAAmDE,QAAnD;AACAd,IAAAA,QAAQ,CAAC;AACRiC,MAAAA,IAAI,EAAExC,eADE;AAERyC,MAAAA,IAAI,EAAE;AAACxB,QAAAA,KAAK,EAALA,KAAD;AAAQI,QAAAA,QAAQ,EAARA,QAAR;AAAkBF,QAAAA,QAAQ,EAARA;AAAlB;AAFE,KAAD,CAAR;AAIA,GAZ2B,EAYzB,CAACE,QAAD,EAAWE,aAAX,EAA0BQ,IAA1B,CAZyB,CAA5B;AAcA,SACE,MAAC,SAAD,QACC,MAAC,IAAD,QACC,4DADD,CADD,EAIC,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEM;AAAhB,KACC,mBACC;AAAO,IAAA,OAAO,EAAC;AAAf,4BADD,EAEC,iBAFD,EAGC,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,YAAZ;AAAyB,IAAA,IAAI,EAAC,OAA9B;AAAsC,IAAA,KAAK,EAAEpB,KAA7C;AAAoD,IAAA,QAAQ,MAA5D;AAA6D,IAAA,QAAQ,EAAEC;AAAvE,IAHD,CADD,EAMC,mBACC;AAAO,IAAA,OAAO,EAAC;AAAf,0BADD,EAEC,iBAFD,EAGC,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,KAAK,EAAEC,QAA/B;AAAyC,IAAA,QAAQ,MAAjD;AAAkD,IAAA,QAAQ,EAAEC;AAA5D,IAHD,CAND,EAWC,mBACC;AAAO,IAAA,OAAO,EAAC;AAAf,gCADD,EAEC,iBAFD,EAGC,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,eAAZ;AAA4B,IAAA,IAAI,EAAC,UAAjC;AAA4C,IAAA,KAAK,EAAEC,QAAnD;AAA6D,IAAA,QAAQ,MAArE;AAAsE,IAAA,QAAQ,EAAEC;AAAhF,IAHD,CAXD,EAgBC,mBACC;AAAO,IAAA,OAAO,EAAC;AAAf,6CADD,EAEC,iBAFD,EAGC,MAAC,KAAD;AACE,IAAA,IAAI,EAAC,qBADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAEC,aAHT;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,QAAQ,EAAEI;AALZ,IAHD,EAUEF,aAAa,IAAI,MAAC,YAAD,4FAVnB,CAhBD,EA4BC,mBACC,MAAC,QAAD;AAAU,IAAA,IAAI,EAAC,WAAf;AAA2B,IAAA,OAAO,EAAEM,IAApC;AAA0C,IAAA,QAAQ,EAAEI;AAApD,2EADD,EAIEF,SAAS,IAAI,MAAC,YAAD,+EAJf,CA5BD,EAkCC;AAAK,IAAA,KAAK,EAAE;AAACS,MAAAA,SAAS,EAAE;AAAZ;AAAZ,KACC,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAyC,IAAA,OAAO,EAAEhC;AAAlD,gCADD,CAlCD,CAJD,CADF;AA6CA,CAtGD,C,CAwGA;;;;AAiBA,eAAeJ,MAAf","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react'\nimport AppLayout from '../components/AppLayout'\nimport Head from 'next/head'\nimport {Form, Input, Checkbox, Button} from 'antd'\nimport useInput from '../hooks/useInput'\nimport axios from 'axios'\nimport {END} from 'redux-saga'\nimport styled from 'styled-components'\nimport {LOAD_MY_INFO_REQUEST, SIGN_UP_REQUEST} from \"../reducers/user\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Router from \"next/router\";\nimport wrapper from \"../store/configureStore\";\n\nconst ErrorMessage = styled.div`\n\tcolor: red;\n`\n\nconst Signup = () => {\n\tconst dispatch = useDispatch()\n\tconst {signUpLoading, signUpDone, signUpError, me} = useSelector((state) => state.user)\n\n\tuseEffect(() => {\n\t\tif (me && me.id) { // 회원가입 페이지에서 로그인했을 경우 main 화면으로\n\t\t\tRouter.replace('/')\n\t\t}\n\t}, [me && me.id])\n\n\tuseEffect(() => {\n\t\tif (signUpDone) { // 회원 가입이 완료되면\n\t\t\tRouter.replace('/') // 메인 페이지로 이동\n\t\t}\n\t}, [signUpDone])\n\n\tuseEffect(() => {\n\t\tif (signUpError) {\n\t\t\talert('회원가입 에러 : ' + signUpError)\n\t\t}\n\t}, [signUpError])\n\n\tconst [email, onChangeEmail] = useInput('')\n\tconst [nickname, onChangeNickname] = useInput('')\n\tconst [password, onChangePassword] = useInput('')\n\n\tconst [passwordCheck, setPasswordCheck] = useState('')\n\tconst [passwordError, setPasswordError] = useState(false)\n\tconst onChangePasswordCheck = useCallback(\n\t\t\t(e) => {\n\t\t\t\tsetPasswordCheck(e.target.value)\n\t\t\t\tsetPasswordError(e.target.value !== password)\n\t\t\t},\n\t\t\t[password],\n\t)\n\n\tconst [term, setTerm] = useState('')\n\tconst [termError, setTermError] = useState(false)\n\tconst onChangeTerm = useCallback((e) => {\n\t\tsetTerm(e.target.checked)\n\t\tsetTermError(false)\n\t}, [])\n\n\tconst onSubmit = useCallback(() => {\n\t\tif (password !== passwordCheck) {\n\t\t\treturn setPasswordError(true)\n\t\t}\n\t\tif (!term) {\n\t\t\treturn setTermError(true)\n\t\t}\n\t\tconsole.log('front onSubmit : ' + email, nickname, password)\n\t\tdispatch({\n\t\t\ttype: SIGN_UP_REQUEST,\n\t\t\tdata: {email, password, nickname}\n\t\t})\n\t}, [password, passwordCheck, term])\n\n\treturn (\n\t\t\t<AppLayout>\n\t\t\t\t<Head>\n\t\t\t\t\t<title>회원 가입 | NodeBird</title>\n\t\t\t\t</Head>\n\t\t\t\t<Form onFinish={onSubmit}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label htmlFor=\"user-email\"> 이메일 </label>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<Input name=\"user-email\" type=\"email\" value={email} required onChange={onChangeEmail}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label htmlFor=\"user-nick\">닉네임</label>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<Input name=\"user-nick\" value={nickname} required onChange={onChangeNickname}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label htmlFor=\"user-password\">비밀번호</label>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<Input name=\"user-password\" type=\"password\" value={password} required onChange={onChangePassword}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label htmlFor=\"user-password-check\">비밀번호 체크</label>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tname=\"user-password-check\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tvalue={passwordCheck}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tonChange={onChangePasswordCheck}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{passwordError && <ErrorMessage>비밀번호가 일치하지 않습니다!</ErrorMessage>}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>\n\t\t\t\t\t\t\t열심히공부하시겠습니까?\n\t\t\t\t\t\t</Checkbox>\n\t\t\t\t\t\t{termError && <ErrorMessage>약관에 동의하셔야합니다.</ErrorMessage>}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{marginTop: 10}}>\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" loading={signUpLoading}>가입하기</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</Form>\n\t\t\t</AppLayout>\n\t)\n}\n\n// login 여부에 따라 화면이 바뀌기 때문에 SSR 적용\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n\tconsole.log('signup getServerSideProps start ::')\n\tconsole.log(context.req.headers)\n\tconst cookie = context.req ? context.req.headers.cookie : '';\n\taxios.defaults.headers.Cookie = '';\n\tif (context.req && cookie) {\n\t\taxios.defaults.headers.Cookie = cookie;\n\t}\n\tcontext.store.dispatch({\n\t\ttype: LOAD_MY_INFO_REQUEST,\n\t})\n\tcontext.store.dispatch(END)\n\tconsole.log('signup getServerSideProps END::')\n\tawait context.store.sagaTask.toPromise()\n})\n\nexport default Signup\n"]},"metadata":{},"sourceType":"module"}