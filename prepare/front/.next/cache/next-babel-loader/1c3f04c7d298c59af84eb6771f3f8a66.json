{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport { Card, Avatar, Button } from 'antd';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logoutRequestAction } from '../reducers/user';\nimport Link from 'next/link'; // eslint-disable-next-line react/prop-types\n\nvar UserProfile = function UserProfile() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me,\n      logOutLoading = _useSelector.logOutLoading;\n\n  var onLogOut = useCallback(function () {\n    //setIsLoggedIn(false)\n    dispatch(logoutRequestAction());\n  }, []);\n  return __jsx(Card, {\n    actions: [\n    /*리액트에서 배열로 jsx 사용할땐 key 붙여줘야함*/\n    __jsx(\"div\", {\n      key: \"twit\"\n    }, __jsx(Link, {\n      href: \"/user/\".concat(me.id)\n    }, __jsx(\"a\", null, \"\\uC9F9\\uC9F9\", __jsx(\"br\", null), me.Posts.length))), __jsx(\"div\", {\n      key: \"following\"\n    }, __jsx(Link, {\n      href: \"/profile\"\n    }, __jsx(\"a\", null, \"\\uD314\\uB85C\\uC719\", __jsx(\"br\", null), me.Followings.length))), __jsx(\"div\", {\n      key: \"follower\"\n    }, __jsx(Link, {\n      href: \"/profile\"\n    }, __jsx(\"a\", null, \"\\uD314\\uB85C\\uC6CC\", __jsx(\"br\", null), me.Followers.length)))]\n  }, __jsx(Card.Meta, {\n    avatar: // 내 아바타 클릭 시\n    __jsx(Link, {\n      href: \"/user/\".concat(me.id)\n    }, __jsx(\"a\", null, __jsx(Avatar, null, me.nickname[0]))),\n    title: me.nickname\n  }), __jsx(Button, {\n    onClick: onLogOut,\n    loading: logOutLoading\n  }, \"\\uB85C\\uADF8\\uC544\\uC6C3\"));\n};\n\nexport default UserProfile;","map":{"version":3,"sources":["D:/intellijProjects/react-nodebird/prepare/front/components/UserProfile.js"],"names":["React","useCallback","Card","Avatar","Button","useDispatch","useSelector","logoutRequestAction","Link","UserProfile","dispatch","state","user","me","logOutLoading","onLogOut","id","Posts","length","Followings","Followers","nickname"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,MAAtB,QAAmC,MAAnC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,mBAAR,QAAkC,kBAAlC;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACzB,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;;AACA,qBAA4BC,WAAW,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAvC;AAAA,MAAOC,EAAP,gBAAOA,EAAP;AAAA,MAAWC,aAAX,gBAAWA,aAAX;;AACA,MAAMC,QAAQ,GAAGd,WAAW,CAAC,YAAM;AAClC;AACAS,IAAAA,QAAQ,CAACH,mBAAmB,EAApB,CAAR;AACA,GAH2B,EAGzB,EAHyB,CAA5B;AAKA,SACE,MAAC,IAAD;AACE,IAAA,OAAO,EAAE;AAAE;AACV;AAAK,MAAA,GAAG,EAAC;AAAT,OACC,MAAC,IAAD;AAAM,MAAA,IAAI,kBAAWM,EAAE,CAACG,EAAd;AAAV,OACC,iCACG,iBADH,EAEEH,EAAE,CAACI,KAAH,CAASC,MAFX,CADD,CADD,CADQ,EASR;AAAK,MAAA,GAAG,EAAC;AAAT,OACC,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX,OACC,uCACI,iBADJ,EAEEL,EAAE,CAACM,UAAH,CAAcD,MAFhB,CADD,CADD,CATQ,EAiBR;AAAK,MAAA,GAAG,EAAC;AAAT,OACC,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX,OACC,uCACI,iBADJ,EAEEL,EAAE,CAACO,SAAH,CAAaF,MAFf,CADD,CADD,CAjBQ;AADX,KA4BC,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,MAAM,EAAI;AACR,UAAC,IAAD;AAAM,MAAA,IAAI,kBAAWL,EAAE,CAACG,EAAd;AAAV,OACC,iBACC,MAAC,MAAD,QACEH,EAAE,CAACQ,QAAH,CAAY,CAAZ,CADF,CADD,CADD,CAFJ;AAUE,IAAA,KAAK,EAAER,EAAE,CAACQ;AAVZ,IA5BD,EAwCC,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEN,QAAjB;AAA2B,IAAA,OAAO,EAAED;AAApC,gCAxCD,CADF;AA4CA,CApDD;;AAqDA,eAAeL,WAAf","sourcesContent":["import React, {useCallback} from 'react'\r\nimport {Card, Avatar, Button} from 'antd'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {logoutRequestAction} from '../reducers/user'\r\nimport Link from 'next/link'\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst UserProfile = () => {\r\n\tconst dispatch = useDispatch()\r\n\tconst {me, logOutLoading} = useSelector((state) => state.user)\r\n\tconst onLogOut = useCallback(() => {\r\n\t\t//setIsLoggedIn(false)\r\n\t\tdispatch(logoutRequestAction())\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t\t<Card\r\n\t\t\t\t\tactions={[ /*리액트에서 배열로 jsx 사용할땐 key 붙여줘야함*/\r\n\t\t\t\t\t\t<div key=\"twit\">\r\n\t\t\t\t\t\t\t<Link href={`/user/${me.id}`}>\r\n\t\t\t\t\t\t\t\t<a>\r\n\t\t\t\t\t\t\t\t\t짹짹<br/>\r\n\t\t\t\t\t\t\t\t\t{me.Posts.length}\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>,\r\n\t\t\t\t\t\t<div key=\"following\">\r\n\t\t\t\t\t\t\t<Link href=\"/profile\">\r\n\t\t\t\t\t\t\t\t<a>\r\n\t\t\t\t\t\t\t\t\t팔로윙<br/>\r\n\t\t\t\t\t\t\t\t\t{me.Followings.length}\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>,\r\n\t\t\t\t\t\t<div key=\"follower\">\r\n\t\t\t\t\t\t\t<Link href=\"/profile\">\r\n\t\t\t\t\t\t\t\t<a>\r\n\t\t\t\t\t\t\t\t\t팔로워<br/>\r\n\t\t\t\t\t\t\t\t\t{me.Followers.length}\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>,\r\n\t\t\t\t\t]}\r\n\t\t\t>\r\n\t\t\t\t<Card.Meta\r\n\t\t\t\t\t\tavatar={( // 내 아바타 클릭 시\r\n\t\t\t\t\t\t\t\t<Link href={`/user/${me.id}`}>\r\n\t\t\t\t\t\t\t\t\t<a>\r\n\t\t\t\t\t\t\t\t\t\t<Avatar>\r\n\t\t\t\t\t\t\t\t\t\t\t{me.nickname[0]}\r\n\t\t\t\t\t\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\ttitle={me.nickname}/>\r\n\t\t\t\t{/*isLoggingOut 이 true 면 버튼이 로딩 버튼으로 바뀜*/}\r\n\t\t\t\t<Button onClick={onLogOut} loading={logOutLoading}>로그아웃</Button>\r\n\t\t\t</Card>\r\n\t)\r\n}\r\nexport default UserProfile\r\n"]},"metadata":{},"sourceType":"module"}