{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n// 동적 라우팅용 페이지\n// post/[id].js\nimport { useRouter } from \"next/router\";\nimport wrapper from \"../../store/configureStore\";\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport { LOAD_MY_INFO_REQUEST } from \"../../reducers/user\";\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nimport { getStaticProps } from \"../about\";\nimport AppLayout from '../../component/AppLayout';\nimport PostCard from \"../../component/PostCard\";\nimport { useSelector } from \"react-redux\";\nimport Head from \"next/head\";\n\nconst Post = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n  return __jsx(AppLayout, null, __jsx(Head, null, __jsx(\"title\", null, singlePost.User.nickname, \" \\uB2D8\\uC758 \\uAE00\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: singlePost.content\n  }), \" \", __jsx(\"meta\", {\n    property: \"og:title\",\n    content: `${singlePost.User.nickname} 님의 게시글`\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: singlePost.content\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebirds.com/favicon.ico'\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: `https://nodebird.com/post/${id}`\n  })), __jsx(PostCard, {\n    post: singlePost\n  }));\n};\n/*getServerSideProps&getStaticProps 안의 context 에서는 context.params.id&context.query.id 하면\r\nuseRouter 에 똑같이 접근 할 수 있다*/\n\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  console.log('dynamic routing Post getServerSideProps Start ::');\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    // 내 정보 요청\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    // 단일 게시글 요청\n    type: LOAD_POST_REQUEST,\n    data: context.params.id //\n\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Post;","map":null,"metadata":{},"sourceType":"module"}