{"ast":null,"code":"var _jsxFileName = \"D:\\\\intellijProjects\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\profile.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Head from 'next/head';\nimport AppLayout from '../component/AppLayout';\nimport NicknameEditForm from '../component/NicknameEditForm';\nimport FollowList from '../component/FollowList';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport useSWR from 'swr';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Router from \"next/router\";\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport wrapper from \"../store/configureStore\"; //import FollowerList from '../component/FollowerList'\n// fetcher 를 다른걸로 바꾸면 graphql 도 쓸수있다\n\nconst fetcher = url => axios.get(url, {\n  withCredentials: true\n}).then(result => result.data);\n\nconst Profile = () => {\n  /* front\n  const dispatch = useDispatch();\n  const followingList = [{nickname: '비타민'}, {nickname: '엠알민'}, {nickname: '올마스터'}] front early\n  const followerList = [{nickname: '비타민'}, {nickname: '엠알민'}, {nickname: '올마스터'}]*/\n  const {\n    me\n  } = useSelector(state => state.user);\n  /*useEffect(() => {\n  \tdispatch({\n  \t\ttype: LOAD_FOLLOWERS_REQUEST,\n  \t});\n  \tdispatch({\n  \t\ttype: LOAD_FOLLOWINGS_REQUEST,\n  \t});\n  }, []);*/\n  //followers 불러오기\n  // data, error 가 둘다 있다면 성공했거나, 실패했거나, 둘다 없다면 로딩중\n\n  const {\n    data: followersData,\n    error: followerError\n  } = useSWR(`http://localhost:3065/user/followers?limit=${followersLimit}`, fetcher); //fetcher 가 url 를 어떻게 가져올지에 대한걸적어줌\n  //followings 불러오기\n\n  const {\n    data: followingsData,\n    error: followingError\n  } = useSWR(`http://localhost:3065/user/followings?limit=${followingsLimit}`, fetcher); //fetcher 가 url 를 어떻게 가져올지에 대한걸적어줌\n\n  useEffect(() => {\n    if (!(me && me.id)) {\n      // 프로필 페이지에서 로그아웃했을 경우 main 화면으로\n      Router.push('/');\n    }\n  }, [me && me.id]);\n\n  if (!me) {\n    // 내가 없으면 못들어가게\n    return '내 정보 로딩중...';\n  }\n\n  if (followerError || followingError) {\n    console.error(followerError || followingError);\n    return '팔로잉/팔로워 로딩 중 에러가 발생했습니다.';\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }\n  }, \"\\uB0B4 \\uD504\\uB85C\\uD544 | NodeBird\")), __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, __jsx(NicknameEditForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 6\n    }\n  }), __jsx(FollowList, {\n    header: \"\\uD314\\uB85C\\uC719 \\uBAA9\\uB85D\",\n    data: followingsData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 6\n    }\n  }), __jsx(FollowList, {\n    header: \"\\uD314\\uB85C\\uC6CC \\uBAA9\\uB85D\",\n    data: followersData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 6\n    }\n  })));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  console.log('Profile getServerSideProps Start');\n  console.log(context.req.headers);\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  console.log('Profile getServerSideProps END');\n  await context.store.sagaTask.toPromise();\n});\nexport default Profile;","map":{"version":3,"sources":["D:/intellijProjects/react-nodebird/prepare/front/pages/profile.js"],"names":["React","useEffect","Head","AppLayout","NicknameEditForm","FollowList","axios","END","useSWR","useDispatch","useSelector","Router","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWINGS_REQUEST","LOAD_MY_INFO_REQUEST","wrapper","fetcher","url","get","withCredentials","then","result","data","Profile","me","state","user","followersData","error","followerError","followersLimit","followingsData","followingError","followingsLimit","id","push","console","getServerSideProps","context","log","req","headers","cookie","defaults","Cookie","store","dispatch","type","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\nimport Head from 'next/head'\nimport AppLayout from '../component/AppLayout'\nimport NicknameEditForm from '../component/NicknameEditForm'\nimport FollowList from '../component/FollowList'\nimport axios from 'axios'\nimport {END} from 'redux-saga'\nimport useSWR from 'swr'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Router from \"next/router\";\nimport {LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, LOAD_MY_INFO_REQUEST} from '../reducers/user'\nimport wrapper from \"../store/configureStore\";\n//import FollowerList from '../component/FollowerList'\n\n// fetcher 를 다른걸로 바꾸면 graphql 도 쓸수있다\nconst fetcher = (url) => axios.get(url, {withCredentials: true}).then((result) => result.data)\n\nconst Profile = () => {\n\t/* front\n\tconst dispatch = useDispatch();\n\tconst followingList = [{nickname: '비타민'}, {nickname: '엠알민'}, {nickname: '올마스터'}] front early\n\tconst followerList = [{nickname: '비타민'}, {nickname: '엠알민'}, {nickname: '올마스터'}]*/\n\tconst {me} = useSelector((state) => state.user)\n\n\t/*useEffect(() => {\n\t\tdispatch({\n\t\t\ttype: LOAD_FOLLOWERS_REQUEST,\n\t\t});\n\t\tdispatch({\n\t\t\ttype: LOAD_FOLLOWINGS_REQUEST,\n\t\t});\n\t}, []);*/\n\t//followers 불러오기\n\n\t// data, error 가 둘다 있다면 성공했거나, 실패했거나, 둘다 없다면 로딩중\n\tconst {data: followersData, error: followerError} = useSWR(`http://localhost:3065/user/followers?limit=${followersLimit}`, fetcher) //fetcher 가 url 를 어떻게 가져올지에 대한걸적어줌\n\t//followings 불러오기\n\tconst {data: followingsData, error: followingError} = useSWR(`http://localhost:3065/user/followings?limit=${followingsLimit}`, fetcher) //fetcher 가 url 를 어떻게 가져올지에 대한걸적어줌\n\n\tuseEffect(() => {\n\t\tif (!(me && me.id)) { // 프로필 페이지에서 로그아웃했을 경우 main 화면으로\n\t\t\tRouter.push('/')\n\t\t}\n\t}, [me && me.id])\n\n\tif (!me) { // 내가 없으면 못들어가게\n\t\treturn '내 정보 로딩중...';\n\t}\n\n\tif (followerError || followingError) {\n\t\tconsole.error(followerError || followingError)\n\t\treturn '팔로잉/팔로워 로딩 중 에러가 발생했습니다.'\n\t}\n\n\treturn (\n\t\t\t<>\n\t\t\t\t<Head>\n\t\t\t\t\t<title>내 프로필 | NodeBird</title>\n\t\t\t\t</Head>\n\t\t\t\t<AppLayout>\n\t\t\t\t\t<NicknameEditForm/>\n\t\t\t\t\t<FollowList header=\"팔로윙 목록\" data={followingsData}/>\n\t\t\t\t\t<FollowList header=\"팔로워 목록\" data={followersData}/>\n\t\t\t\t</AppLayout>\n\t\t\t</>\n\t)\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n\tconsole.log('Profile getServerSideProps Start')\n\tconsole.log(context.req.headers)\n\tconst cookie = context.req ? context.req.headers.cookie : '';\n\taxios.defaults.headers.Cookie = '';\n\tif (context.req && cookie) {\n\t\taxios.defaults.headers.Cookie = cookie;\n\t}\n\tcontext.store.dispatch({\n\t\ttype: LOAD_MY_INFO_REQUEST,\n\t})\n\tcontext.store.dispatch(END)\n\tconsole.log('Profile getServerSideProps END')\n\tawait context.store.sagaTask.toPromise()\n})\n\nexport default Profile\n\n"]},"metadata":{},"sourceType":"module"}