{"ast":null,"code":"import produce from 'immer';\nexport var initialState = {\n  loadMyInfoLoading: false,\n  // 유저 정보 보기 시도중일땐 로딩중 띄울거임\n  loadMyInfoDone: false,\n  // 유저 정보 보기 됨\n  loadMyInfoError: null,\n  // 유저 정보 보기중일때 에러 없앰\n  removeFollowerLoading: false,\n  // 팔로워 유저 삭제 시도중일땐 로딩중 띄울거임\n  removeFollowerDone: false,\n  // 팔로워 유저 삭제 됨\n  removeFollowerError: null,\n  // 팔로워 유저 삭제 중일때 에러 없앰\n  followLoading: false,\n  // 팔로우 시도중일땐 로딩중 띄울거임\n  followDone: false,\n  // 팔로우 됨\n  followError: null,\n  // 팔로우중일때 에러 없앰\n  unfollowLoading: false,\n  // 언팔로우 시도중일땐 로딩중 띄울거임\n  unfollowDone: false,\n  // 언팔로우 됨\n  unfollowError: null,\n  // 언팔로우중일때 에러 없앰\n  loadFollowersLoading: false,\n  // 팔로워 시도중일땐 로딩중 띄울거임\n  loadFollowersDone: false,\n  // 팔로워 됨\n  loadFollowersError: null,\n  // 팔로워일때 에러 없앰\n  loadFollowingsLoading: false,\n  // 팔로윙 시도중일땐 로딩중 띄울거임\n  loadFollowingsDone: false,\n  // 팔로윙 됨\n  loadFollowingsError: null,\n  // 팔로윙 중일때 에러 없앰\n  logInLoading: false,\n  // 로그인 시도중일땐 로딩중 띄울거임\n  logInDone: false,\n  // 로그인 됨\n  logInError: null,\n  // 로딩중일때 에러 없앰\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  // 로그아웃 완료\n  logOutError: null,\n  signUpLoading: false,\n  // 회원가입 로딩중\n  signUpDone: false,\n  // 회원 가입 완료\n  signUpError: null,\n  changeNicknameLoading: false,\n  // 닉네임 변경 로딩중\n  changeNicknameDone: false,\n  // 닉네임 변경 완료\n  changeNicknameError: null,\n  me: null,\n  signUpData: {},\n  // 회원 가입 데이터\n  loginData: {}\n}; // 로그인 액션 생성기 thunk\n// export const loginAction = (data) => { // 함수를 리턴하는 비동기 액션 크리에이터가 추가\n// \treturn (dispatch, getState) => {\n// \t\tconst state = getState()\n// \t\tdispatch(loginRequestAction())\n// \t\taxios.post('/api/login')\n// \t\t\t\t.then((res) => {\n// \t\t\t\t\tdispatch(loginSuccessAction(res.data))\n// \t\t\t\t})\n// \t\t\t\t.catch((error) => {\n// \t\t\t\t\tdispatch(loginFailureAction(error))\n// \t\t\t\t})\n// \t}\n// }\n// actions\n\nexport var LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST';\nexport var LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS';\nexport var LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE';\nexport var REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\nexport var REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\nexport var REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport var SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport var SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport var SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport var CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport var CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport var CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\nexport var FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport var FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport var FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport var UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport var UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport var UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport var LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\nexport var LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\nexport var LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\nexport var LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\nexport var LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\nexport var LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE'; // 유저 리듀서의 상태를 바꿀수있는 액션 생성\n\nexport var ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport var REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n/* front\r\nconst dummyUser = (data) => ({\r\n\t...data,\r\n\tnickname: '비타민',\r\n\tid: 1,\r\n\tPosts: [{id: 1}],\r\n\tFollowings: [{nickname: '외노'}, {nickname: '음메'}, {nickname: '썽'}, {nickname: '오댕'}, {nickname: '만뽀'}],\r\n\tFollowers: [{nickname: '까매'}, {nickname: '만두'}, {nickname: '보챙'}, {nickname: '뒷가'}, {nickname: '야덩'}],\r\n})*/\n\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: LOG_IN_REQUEST,\n    data: data\n  };\n}; // 로그아웃 액션 생성기 thunk\n// export const logoutAction = (data) => {\n// \treturn (dispatch) => {\n// \t\taxios.post('/api/logout')\n// \t\t\t\t.then(() => {\n// \t\t\t\t\tdispatch(logoutSuccessAction())\n// \t\t\t\t})\n// \t\t\t\t.catch(() => {\n// \t\t\t\t\tdispatch(logoutFailureAction())\n// \t\t\t\t})\n// \t}\n// }\n\nexport var logoutRequestAction = function logoutRequestAction() {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOAD_MY_INFO_REQUEST:\n        // store 에서 보낸 state 가 만들어짐, state 자체가 user.js 의 state 임\n        draft.loadMyInfoLoading = true;\n        draft.loadMyInfoDone = false;\n        draft.loadMyInfoError = null; // 로딩 중일때는 에러 없앰\n\n        console.log('reducer myInfo 요청');\n        break;\n\n      case LOAD_MY_INFO_SUCCESS:\n        draft.me = action.data; // back 사용자 정보가 들어있음\n\n        draft.loadMyInfoLoading = false;\n        draft.loadMyInfoDone = true; //draft.me = dummyUser(action.data)\n\n        console.log('reducer myInfo 성공');\n        break;\n\n      case LOAD_MY_INFO_FAILURE:\n        console.error('loadMyInfoFail 실패:: ' + action.error);\n        draft.loadMyInfoLoading = false;\n        draft.loadMyInfoError = action.error;\n        break;\n\n      case REMOVE_FOLLOWER_REQUEST:\n        draft.removeFollowerLoading = true;\n        draft.removeFollowerDone = false;\n        draft.removeFollowerError = null;\n        console.log('reducer removeFollower 요청');\n        break;\n\n      case REMOVE_FOLLOWER_SUCCESS:\n        draft.me = action.data;\n        draft.removeFollowerLoading = false;\n        draft.removeFollowerDone = true;\n        console.log('reducer removeFollower 성공');\n        break;\n\n      case REMOVE_FOLLOWER_FAILURE:\n        console.error('removeFollowerFail 실패:: ' + action.error);\n        draft.removeFollowerLoading = false;\n        draft.removeFollowerError = action.error;\n\n      case FOLLOW_REQUEST:\n        // store 에서 보낸 state 가 만들어짐, state 자체가 user.js 의 state 임\n        draft.followLoading = true;\n        draft.followError = null; // 로딩 중일때는 에러 없앰\n\n        draft.followDone = false;\n        console.log('reducer FOLLOW_REQUEST 요청');\n        break;\n\n      case FOLLOW_SUCCESS:\n        draft.followLoading = false;\n        draft.followDone = true; //draft.me = dummyUser(action.data)\n\n        draft.me.Followings.push({\n          id: action.data.UserId\n        });\n        console.log('reducer FOLLOW_SUCCESS 성공');\n        break;\n\n      case FOLLOW_FAILURE:\n        draft.followLoading = false;\n        draft.followError = action.error;\n        console.error('reducer FOLLOW_FAILURE 실패::', action.error);\n        break;\n\n      case UNFOLLOW_REQUEST:\n        // store 에서 보낸 state 가 만들어짐, state 자체가 user.js 의 state 임\n        draft.unfollowLoading = true;\n        draft.unfollowError = null; // 로딩 중일때는 에러 없앰\n\n        draft.unfollowDone = false;\n        console.log('reducer unfollow 요청');\n        break;\n\n      case UNFOLLOW_SUCCESS:\n        draft.unfollowLoading = false;\n        draft.unfollowDone = true; //draft.me = dummyUser(action.data)\n        // 언팔로우 한 사람만 빠지게\n\n        draft.me.Followings = draft.me.Followings.filter(function (v) {\n          return v.id !== action.data.UserId;\n        });\n        console.log('reducer unfollow 성공');\n        break;\n\n      case UNFOLLOW_FAILURE:\n        draft.unfollowLoading = false;\n        draft.unfollowError = action.error;\n        console.error('reducer unfollow 실패::', action.error);\n        break;\n\n      case LOG_IN_REQUEST:\n        draft.logInLoading = true;\n        draft.logInError = null;\n        draft.logInDone = false;\n        console.log('reducer login 요청');\n        break;\n\n      case LOG_IN_SUCCESS:\n        draft.logInLoading = false;\n        draft.logInDone = true; //draft.me = dummyUser(action.data) front\n\n        draft.me = action.data; // back\n\n        console.log('reducer login 성공');\n        break;\n\n      case LOG_IN_FAILURE:\n        draft.logInLoading = false;\n        draft.logInError = action.error;\n        console.error('reducer login 실패:: ', action.error);\n        break;\n\n      case LOG_OUT_REQUEST:\n        draft.logOutLoading = true;\n        draft.logOutDone = false;\n        draft.logOutError = null;\n        console.log('reducer logout 요청');\n        break;\n\n      case LOG_OUT_SUCCESS:\n        draft.logOutLoading = false;\n        draft.logOutDone = true;\n        draft.me = null;\n        console.log('reducer logout 성공');\n        break;\n\n      case LOG_OUT_FAILURE:\n        draft.logOutLoading = false;\n        draft.logOutError = action.error;\n        console.error('reducer logout 실패', action.error);\n        break;\n\n      case SIGN_UP_REQUEST:\n        draft.signUpLoading = true;\n        draft.signUpDone = false;\n        draft.signUpError = null;\n        console.log('reducer signup 요청');\n        break;\n\n      case SIGN_UP_SUCCESS:\n        draft.signUpLoading = false;\n        draft.signUpDone = true;\n        console.log('reducer signUp 성공');\n        break;\n\n      case SIGN_UP_FAILURE:\n        draft.signUpLoading = false;\n        draft.signUpError = action.error;\n        console.error('reducer signUp 실패', action.error);\n        break;\n\n      case CHANGE_NICKNAME_REQUEST:\n        draft.changeNicknameLoading = true;\n        draft.changeNicknameDone = false;\n        draft.changeNicknameError = null;\n        console.log('reducer CHANGE_NICKNAME_REQUEST 요청');\n        break;\n\n      case CHANGE_NICKNAME_SUCCESS:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameDone = true;\n        console.log('reducer CHANGE_NICKNAME_SUCCESS 성공');\n        break;\n\n      case CHANGE_NICKNAME_FAILURE:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameError = action.error;\n        console.error('reducer CHANGE_NICKNAME 실패', action.error);\n        break;\n\n      case LOAD_FOLLOWERS_REQUEST:\n        draft.loadFollowersLoading = true;\n        draft.loadFollowersDone = false;\n        draft.loadFollowersError = null;\n        console.log('reducer LOAD_FOLLOWERS_REQUEST 요청');\n        break;\n\n      case LOAD_FOLLOWERS_SUCCESS:\n        draft.loadFollowersLoading = false;\n        draft.loadFollowersDone = true;\n        draft.me.Followers = action.data;\n        console.log('reducer LOAD_FOLLOWERS_SUCCESS 성공');\n        break;\n\n      case LOAD_FOLLOWERS_FAILURE:\n        draft.loadFollowersLoading = false;\n        draft.loadFollowersError = action.error;\n        console.error('reducer LOAD_FOLLOWERS 실패', action.error);\n        break;\n\n      case LOAD_FOLLOWINGS_REQUEST:\n        draft.loadFollowingsLoading = true;\n        draft.loadFollowingsDone = false;\n        draft.loadFollowingsError = null;\n        console.log('reducer LOAD_FOLLOWINGS_REQUEST 요청');\n        break;\n\n      case LOAD_FOLLOWINGS_SUCCESS:\n        draft.loadFollowingsLoading = false;\n        draft.loadFollowingsDone = true;\n        draft.me.Followings = action.data;\n        console.log('reducer LOAD_FOLLOWINGS_SUCCESS 성공');\n        break;\n\n      case LOAD_FOLLOWINGS_FAILURE:\n        draft.loadFollowingsLoading = false;\n        draft.loadFollowingsError = action.error;\n        console.error('reducer LOAD_FOLLOWINGS 실패', action.error);\n        break;\n\n      case ADD_POST_TO_ME:\n        // 게시글을 쓰면 게시글 아이디가 여기로 들어와서 하나가 추가된다\n        draft.me.Posts.unshift({\n          id: action.data\n        });\n        console.log('ADD_POST_TO_ME 성공');\n        break;\n      // return {\n      // \t...state,\n      // \tme: {\n      // \t\t...state.me,\n      // \t\tPosts: [{id: action.data}, ...state.me.Posts],\n      // \t}\n      // }\n\n      case REMOVE_POST_OF_ME:\n        draft.me.Posts = draft.me.Posts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        console.log('REMOVE_POST_OF_ME');\n        break;\n      // return { // 불변성을 지키며 게시글을 지워야한다.\n      // \t...state,\n      // \tme: {\n      // \t\t...state.me,\n      // \t\tPosts: state.me.Posts.filter((v) => v.id !== action.data)\n      // \t}\n      // }\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/intellijProjects/react-nodebird/prepare/front/reducers/user.js"],"names":["produce","initialState","loadMyInfoLoading","loadMyInfoDone","loadMyInfoError","removeFollowerLoading","removeFollowerDone","removeFollowerError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","loadFollowersLoading","loadFollowersDone","loadFollowersError","loadFollowingsLoading","loadFollowingsDone","loadFollowingsError","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","me","signUpData","loginData","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loginRequestAction","data","type","logoutRequestAction","reducer","state","action","draft","console","log","error","Followings","push","id","UserId","filter","v","Followers","Posts","unshift"],"mappings":"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","sourcesContent":["import produce from 'immer'\r\n\r\nexport const initialState = {\r\n\tloadMyInfoLoading: false, // 유저 정보 보기 시도중일땐 로딩중 띄울거임\r\n\tloadMyInfoDone: false, // 유저 정보 보기 됨\r\n\tloadMyInfoError: null, // 유저 정보 보기중일때 에러 없앰\r\n\tremoveFollowerLoading: false, // 팔로워 유저 삭제 시도중일땐 로딩중 띄울거임\r\n\tremoveFollowerDone: false, // 팔로워 유저 삭제 됨\r\n\tremoveFollowerError: null, // 팔로워 유저 삭제 중일때 에러 없앰\r\n\tfollowLoading: false, // 팔로우 시도중일땐 로딩중 띄울거임\r\n\tfollowDone: false, // 팔로우 됨\r\n\tfollowError: null, // 팔로우중일때 에러 없앰\r\n\tunfollowLoading: false, // 언팔로우 시도중일땐 로딩중 띄울거임\r\n\tunfollowDone: false, // 언팔로우 됨\r\n\tunfollowError: null, // 언팔로우중일때 에러 없앰\r\n\tloadFollowersLoading: false, // 팔로워 시도중일땐 로딩중 띄울거임\r\n\tloadFollowersDone: false, // 팔로워 됨\r\n\tloadFollowersError: null, // 팔로워일때 에러 없앰\r\n\tloadFollowingsLoading: false, // 팔로윙 시도중일땐 로딩중 띄울거임\r\n\tloadFollowingsDone: false, // 팔로윙 됨\r\n\tloadFollowingsError: null, // 팔로윙 중일때 에러 없앰\r\n\tlogInLoading: false, // 로그인 시도중일땐 로딩중 띄울거임\r\n\tlogInDone: false, // 로그인 됨\r\n\tlogInError: null, // 로딩중일때 에러 없앰\r\n\tlogOutLoading: false, // 로그아웃 시도중\r\n\tlogOutDone: false, // 로그아웃 완료\r\n\tlogOutError: null,\r\n\tsignUpLoading: false, // 회원가입 로딩중\r\n\tsignUpDone: false, // 회원 가입 완료\r\n\tsignUpError: null,\r\n\tchangeNicknameLoading: false, // 닉네임 변경 로딩중\r\n\tchangeNicknameDone: false, // 닉네임 변경 완료\r\n\tchangeNicknameError: null,\r\n\tme: null,\r\n\tsignUpData: {}, // 회원 가입 데이터\r\n\tloginData: {},\r\n}\r\n\r\n// 로그인 액션 생성기 thunk\r\n// export const loginAction = (data) => { // 함수를 리턴하는 비동기 액션 크리에이터가 추가\r\n// \treturn (dispatch, getState) => {\r\n// \t\tconst state = getState()\r\n// \t\tdispatch(loginRequestAction())\r\n// \t\taxios.post('/api/login')\r\n// \t\t\t\t.then((res) => {\r\n// \t\t\t\t\tdispatch(loginSuccessAction(res.data))\r\n// \t\t\t\t})\r\n// \t\t\t\t.catch((error) => {\r\n// \t\t\t\t\tdispatch(loginFailureAction(error))\r\n// \t\t\t\t})\r\n// \t}\r\n// }\r\n\r\n// actions\r\nexport const LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST'\r\nexport const LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS'\r\nexport const LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE'\r\n\r\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST'\r\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS'\r\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE'\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST'\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS'\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE'\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST'\r\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS'\r\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE'\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST'\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS'\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE'\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST'\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS'\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE'\r\n\r\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST'\r\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS'\r\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE'\r\n\r\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST'\r\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS'\r\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE'\r\n\r\n// 유저 리듀서의 상태를 바꿀수있는 액션 생성\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME'\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME'\r\n\r\n/* front\r\nconst dummyUser = (data) => ({\r\n\t...data,\r\n\tnickname: '비타민',\r\n\tid: 1,\r\n\tPosts: [{id: 1}],\r\n\tFollowings: [{nickname: '외노'}, {nickname: '음메'}, {nickname: '썽'}, {nickname: '오댕'}, {nickname: '만뽀'}],\r\n\tFollowers: [{nickname: '까매'}, {nickname: '만두'}, {nickname: '보챙'}, {nickname: '뒷가'}, {nickname: '야덩'}],\r\n})*/\r\n\r\nexport const loginRequestAction = (data) => {\r\n\treturn {\r\n\t\ttype: LOG_IN_REQUEST,\r\n\t\tdata,\r\n\t}\r\n}\r\n// 로그아웃 액션 생성기 thunk\r\n// export const logoutAction = (data) => {\r\n// \treturn (dispatch) => {\r\n// \t\taxios.post('/api/logout')\r\n// \t\t\t\t.then(() => {\r\n// \t\t\t\t\tdispatch(logoutSuccessAction())\r\n// \t\t\t\t})\r\n// \t\t\t\t.catch(() => {\r\n// \t\t\t\t\tdispatch(logoutFailureAction())\r\n// \t\t\t\t})\r\n// \t}\r\n// }\r\nexport const logoutRequestAction = () => ({\r\n\ttype: LOG_OUT_REQUEST,\r\n})\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n\tswitch (action.type) {\r\n\t\tcase LOAD_MY_INFO_REQUEST:\r\n\t\t\t// store 에서 보낸 state 가 만들어짐, state 자체가 user.js 의 state 임\r\n\t\t\tdraft.loadMyInfoLoading = true\r\n\t\t\tdraft.loadMyInfoDone = false\r\n\t\t\tdraft.loadMyInfoError = null // 로딩 중일때는 에러 없앰\r\n\t\t\tconsole.log('reducer myInfo 요청')\r\n\t\t\tbreak;\r\n\t\tcase LOAD_MY_INFO_SUCCESS:\r\n\t\t\tdraft.me = action.data // back 사용자 정보가 들어있음\r\n\t\t\tdraft.loadMyInfoLoading = false\r\n\t\t\tdraft.loadMyInfoDone = true\r\n\t\t\t//draft.me = dummyUser(action.data)\r\n\t\t\tconsole.log('reducer myInfo 성공')\r\n\t\t\tbreak;\r\n\t\tcase LOAD_MY_INFO_FAILURE:\r\n\t\t\tconsole.error('loadMyInfoFail 실패:: ' + action.error)\r\n\t\t\tdraft.loadMyInfoLoading = false\r\n\t\t\tdraft.loadMyInfoError = action.error\r\n\t\t\tbreak;\r\n\t\tcase REMOVE_FOLLOWER_REQUEST:\r\n\t\t\tdraft.removeFollowerLoading =true\r\n\t\t\tdraft.removeFollowerDone=false\r\n\t\t\tdraft.removeFollowerError=null\r\n\t\t\tconsole.log('reducer removeFollower 요청')\r\n\t\t\tbreak;\r\n\t\tcase REMOVE_FOLLOWER_SUCCESS:\r\n\t\t\tdraft.me = action.data\r\n\t\t\tdraft.removeFollowerLoading=false\r\n\t\t\tdraft.removeFollowerDone=true\r\n\t\t\tconsole.log('reducer removeFollower 성공')\r\n\t\t\tbreak\r\n\t\tcase REMOVE_FOLLOWER_FAILURE:\r\n\t\t\tconsole.error('removeFollowerFail 실패:: ' + action.error)\r\n\t\t\tdraft.removeFollowerLoading=false\r\n\t\t\tdraft.removeFollowerError=action.error\r\n\t\tcase FOLLOW_REQUEST:\r\n\t\t\t// store 에서 보낸 state 가 만들어짐, state 자체가 user.js 의 state 임\r\n\t\t\tdraft.followLoading = true\r\n\t\t\tdraft.followError = null // 로딩 중일때는 에러 없앰\r\n\t\t\tdraft.followDone = false\r\n\t\t\tconsole.log('reducer FOLLOW_REQUEST 요청')\r\n\t\t\tbreak;\r\n\t\tcase FOLLOW_SUCCESS:\r\n\t\t\tdraft.followLoading = false\r\n\t\t\tdraft.followDone = true\r\n\t\t\t//draft.me = dummyUser(action.data)\r\n\t\t\tdraft.me.Followings.push({id: action.data.UserId})\r\n\t\t\tconsole.log('reducer FOLLOW_SUCCESS 성공')\r\n\t\t\tbreak;\r\n\t\tcase FOLLOW_FAILURE:\r\n\t\t\tdraft.followLoading = false\r\n\t\t\tdraft.followError = action.error\r\n\t\t\tconsole.error('reducer FOLLOW_FAILURE 실패::', action.error)\r\n\t\t\tbreak;\r\n\t\tcase UNFOLLOW_REQUEST:\r\n\t\t\t// store 에서 보낸 state 가 만들어짐, state 자체가 user.js 의 state 임\r\n\t\t\tdraft.unfollowLoading = true\r\n\t\t\tdraft.unfollowError = null // 로딩 중일때는 에러 없앰\r\n\t\t\tdraft.unfollowDone = false\r\n\t\t\tconsole.log('reducer unfollow 요청')\r\n\t\t\tbreak;\r\n\t\tcase UNFOLLOW_SUCCESS:\r\n\t\t\tdraft.unfollowLoading = false\r\n\t\t\tdraft.unfollowDone = true\r\n\t\t\t//draft.me = dummyUser(action.data)\r\n\t\t\t// 언팔로우 한 사람만 빠지게\r\n\t\t\tdraft.me.Followings = draft.me.Followings.filter((v) => v.id !== action.data.UserId)\r\n\t\t\tconsole.log('reducer unfollow 성공')\r\n\t\t\tbreak;\r\n\t\tcase UNFOLLOW_FAILURE:\r\n\t\t\tdraft.unfollowLoading = false\r\n\t\t\tdraft.unfollowError = action.error\r\n\t\t\tconsole.error('reducer unfollow 실패::', action.error)\r\n\t\t\tbreak;\r\n\t\tcase LOG_IN_REQUEST:\r\n\t\t\tdraft.logInLoading = true\r\n\t\t\tdraft.logInError = null\r\n\t\t\tdraft.logInDone = false\r\n\t\t\tconsole.log('reducer login 요청')\r\n\t\t\tbreak;\r\n\t\tcase LOG_IN_SUCCESS:\r\n\t\t\tdraft.logInLoading = false\r\n\t\t\tdraft.logInDone = true\r\n\t\t\t//draft.me = dummyUser(action.data) front\r\n\t\t\tdraft.me = action.data // back\r\n\t\t\tconsole.log('reducer login 성공')\r\n\t\t\tbreak;\r\n\t\tcase LOG_IN_FAILURE:\r\n\t\t\tdraft.logInLoading = false\r\n\t\t\tdraft.logInError = action.error\r\n\t\t\tconsole.error('reducer login 실패:: ', action.error)\r\n\t\t\tbreak;\r\n\t\tcase LOG_OUT_REQUEST:\r\n\t\t\tdraft.logOutLoading = true\r\n\t\t\tdraft.logOutDone = false\r\n\t\t\tdraft.logOutError = null\r\n\t\t\tconsole.log('reducer logout 요청')\r\n\t\t\tbreak;\r\n\t\tcase LOG_OUT_SUCCESS:\r\n\t\t\tdraft.logOutLoading = false\r\n\t\t\tdraft.logOutDone = true\r\n\t\t\tdraft.me = null\r\n\t\t\tconsole.log('reducer logout 성공')\r\n\t\t\tbreak;\r\n\t\tcase LOG_OUT_FAILURE:\r\n\t\t\tdraft.logOutLoading = false\r\n\t\t\tdraft.logOutError = action.error\r\n\t\t\tconsole.error('reducer logout 실패', action.error)\r\n\t\t\tbreak\r\n\t\tcase SIGN_UP_REQUEST:\r\n\t\t\tdraft.signUpLoading = true\r\n\t\t\tdraft.signUpDone = false\r\n\t\t\tdraft.signUpError = null\r\n\t\t\tconsole.log('reducer signup 요청')\r\n\t\t\tbreak;\r\n\t\tcase SIGN_UP_SUCCESS:\r\n\t\t\tdraft.signUpLoading = false\r\n\t\t\tdraft.signUpDone = true\r\n\t\t\tconsole.log('reducer signUp 성공')\r\n\t\t\tbreak\r\n\t\tcase SIGN_UP_FAILURE:\r\n\t\t\tdraft.signUpLoading = false\r\n\t\t\tdraft.signUpError = action.error\r\n\t\t\tconsole.error('reducer signUp 실패', action.error)\r\n\t\t\tbreak\r\n\t\tcase CHANGE_NICKNAME_REQUEST:\r\n\t\t\tdraft.changeNicknameLoading = true\r\n\t\t\tdraft.changeNicknameDone = false\r\n\t\t\tdraft.changeNicknameError = null\r\n\t\t\tconsole.log('reducer CHANGE_NICKNAME_REQUEST 요청')\r\n\t\t\tbreak\r\n\t\tcase CHANGE_NICKNAME_SUCCESS:\r\n\t\t\tdraft.changeNicknameLoading = false\r\n\t\t\tdraft.changeNicknameDone = true\r\n\t\t\tconsole.log('reducer CHANGE_NICKNAME_SUCCESS 성공')\r\n\t\t\tbreak;\r\n\t\tcase CHANGE_NICKNAME_FAILURE:\r\n\t\t\tdraft.changeNicknameLoading = false\r\n\t\t\tdraft.changeNicknameError = action.error\r\n\t\t\tconsole.error('reducer CHANGE_NICKNAME 실패', action.error)\r\n\t\t\tbreak;\r\n\t\tcase LOAD_FOLLOWERS_REQUEST:\r\n\t\t\tdraft.loadFollowersLoading = true\r\n\t\t\tdraft.loadFollowersDone = false\r\n\t\t\tdraft.loadFollowersError = null\r\n\t\t\tconsole.log('reducer LOAD_FOLLOWERS_REQUEST 요청')\r\n\t\t\tbreak\r\n\t\tcase LOAD_FOLLOWERS_SUCCESS:\r\n\t\t\tdraft.loadFollowersLoading = false\r\n\t\t\tdraft.loadFollowersDone = true\r\n\t\t\tdraft.me.Followers = action.data\r\n\t\t\tconsole.log('reducer LOAD_FOLLOWERS_SUCCESS 성공')\r\n\t\t\tbreak;\r\n\t\tcase LOAD_FOLLOWERS_FAILURE:\r\n\t\t\tdraft.loadFollowersLoading = false\r\n\t\t\tdraft.loadFollowersError = action.error\r\n\t\t\tconsole.error('reducer LOAD_FOLLOWERS 실패', action.error)\r\n\t\t\tbreak;\r\n\t\tcase LOAD_FOLLOWINGS_REQUEST:\r\n\t\t\tdraft.loadFollowingsLoading = true\r\n\t\t\tdraft.loadFollowingsDone = false\r\n\t\t\tdraft.loadFollowingsError = null\r\n\t\t\tconsole.log('reducer LOAD_FOLLOWINGS_REQUEST 요청')\r\n\t\t\tbreak\r\n\t\tcase LOAD_FOLLOWINGS_SUCCESS:\r\n\t\t\tdraft.loadFollowingsLoading = false\r\n\t\t\tdraft.loadFollowingsDone = true\r\n\t\t\tdraft.me.Followings = action.data\r\n\t\t\tconsole.log('reducer LOAD_FOLLOWINGS_SUCCESS 성공')\r\n\t\t\tbreak;\r\n\t\tcase LOAD_FOLLOWINGS_FAILURE:\r\n\t\t\tdraft.loadFollowingsLoading = false\r\n\t\t\tdraft.loadFollowingsError = action.error\r\n\t\t\tconsole.error('reducer LOAD_FOLLOWINGS 실패', action.error)\r\n\t\t\tbreak;\r\n\t\tcase ADD_POST_TO_ME: // 게시글을 쓰면 게시글 아이디가 여기로 들어와서 하나가 추가된다\r\n\t\t\tdraft.me.Posts.unshift({id: action.data})\r\n\t\t\tconsole.log('ADD_POST_TO_ME 성공')\r\n\t\t\tbreak\r\n\t\t\t// return {\r\n\t\t\t// \t...state,\r\n\t\t\t// \tme: {\r\n\t\t\t// \t\t...state.me,\r\n\t\t\t// \t\tPosts: [{id: action.data}, ...state.me.Posts],\r\n\t\t\t// \t}\r\n\t\t\t// }\r\n\t\tcase REMOVE_POST_OF_ME:\r\n\t\t\tdraft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data)\r\n\t\t\tconsole.log('REMOVE_POST_OF_ME')\r\n\t\t\tbreak;\r\n\t\t\t// return { // 불변성을 지키며 게시글을 지워야한다.\r\n\t\t\t// \t...state,\r\n\t\t\t// \tme: {\r\n\t\t\t// \t\t...state.me,\r\n\t\t\t// \t\tPosts: state.me.Posts.filter((v) => v.id !== action.data)\r\n\t\t\t// \t}\r\n\t\t\t// }\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n})\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}