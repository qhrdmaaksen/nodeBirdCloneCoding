{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\intellijProjects\\\\react-nodebird\\\\prepare\\\\front\\\\component\\\\PostForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect, useRef } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_POST_REQUEST } from '../reducers/post';\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addPostLoading = _useSelector.addPostLoading,\n      addPostDone = _useSelector.addPostDone;\n\n  var imageInput = useRef();\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  useEffect(function () {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  var onSubmitForm = useCallback(function () {\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        text: text\n      }\n    });\n  }, []);\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  }, []);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmitForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }, __jsx(Input.TextArea, {\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    value: text,\n    onChange: onChangeText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 6\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 6\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": 'right'\n    },\n    htmlType: \"submit\",\n    loading: addPostLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 6\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, imagePaths.map(function (v) {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 8\n      }\n    }, __jsx(\"img\", {\n      src: \"http://localhost:3065/\".concat(v),\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, __jsx(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 10\n      }\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n\n_s(PostForm, \"GrDTdObk5cirZJ82rYnhd8++vTc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["D:/intellijProjects/react-nodebird/prepare/front/component/PostForm.js"],"names":["React","useCallback","useState","useEffect","useRef","Form","Input","Button","useSelector","useDispatch","ADD_POST_REQUEST","PostForm","dispatch","text","setText","state","post","imagePaths","addPostLoading","addPostDone","imageInput","onClickImageUpload","current","click","onSubmitForm","type","data","onChangeText","e","target","value","margin","map","v","display","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect, useRef } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { ADD_POST_REQUEST } from '../reducers/post';\r\n\r\nconst PostForm = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst [text, setText] = useState('');\r\n\tconst { imagePaths, addPostLoading, addPostDone } = useSelector((state) => state.post);\r\n\r\n\tconst imageInput = useRef();\r\n\tconst onClickImageUpload = useCallback(() => {\r\n\t\timageInput.current.click();\r\n\t}, [imageInput.current]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (addPostDone) {\r\n\t\t\tsetText('');\r\n\t\t}\r\n\t}, [addPostDone]);\r\n\r\n\tconst onSubmitForm = useCallback(() => {\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_POST_REQUEST,\r\n\t\t\tdata: {\r\n\t\t\t\ttext,\r\n\t\t\t},\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconst onChangeText = useCallback((e) => {\r\n\t\tsetText(e.target.value);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t\t<Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmitForm}>\r\n\t\t\t\t<Input.TextArea maxLength={140} placeholder=\"어떤 신기한 일이 있었나요?\" value={text} onChange={onChangeText} />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input type=\"file\" multiple hidden ref={imageInput} />\r\n\t\t\t\t\t<Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n\t\t\t\t\t<Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\" loading={addPostLoading}>짹짹</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{imagePaths.map((v) => (\r\n\t\t\t\t\t\t\t<div key={v} style={{ display: 'inline-block' }}>\r\n\t\t\t\t\t\t\t\t<img src={`http://localhost:3065/${v}`} style={{ width: '200px' }} alt={v} />\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<Button>제거</Button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}