{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n// 동적 라우팅용 페이지\n// post/[id].js\nimport { useRouter } from \"next/router\";\nimport { getStaticProps } from \"../about\";\nimport AppLayout from '../../components/AppLayout';\nimport PostCard from \"../../components/PostCard\";\nimport { useSelector } from \"react-redux\";\nimport Head from \"next/head\";\n\nvar Post = function Post() {\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      singlePost = _useSelector.singlePost;\n\n  return __jsx(AppLayout, null, __jsx(Head, null, __jsx(\"title\", null, singlePost.User.nickname, \" \\uB2D8\\uC758 \\uAE00\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: singlePost.content\n  }), \" \", __jsx(\"meta\", {\n    property: \"og:title\",\n    content: \"\".concat(singlePost.User.nickname, \" \\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: singlePost.content\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebirds.com/favicon.ico'\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: \"https://nodebird.com/post/\".concat(id)\n  })), __jsx(PostCard, {\n    post: singlePost\n  }));\n};\n/*getServerSideProps&getStaticProps 안의 context 에서는 context.params.id&context.query.id 하면\r\nuseRouter 에 똑같이 접근 할 수 있다*/\n\n\nexport var __N_SSP = true;\nexport default Post;","map":{"version":3,"sources":["D:/intellijProjects/react-nodebird/prepare/front/pages/post/[id].js"],"names":["useRouter","getStaticProps","AppLayout","PostCard","useSelector","Head","Post","router","id","query","state","post","singlePost","User","nickname","content","Images","src"],"mappings":";;AAAA;AACA;AAEA,SAAQA,SAAR,QAAwB,aAAxB;AAMA,SAAQC,cAAR,QAA6B,UAA7B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAClB,MAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,MAAOQ,EAAP,GAAaD,MAAM,CAACE,KAApB,CAAOD,EAAP;;AACA,qBAAqBJ,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAhC;AAAA,MAAOC,UAAP,gBAAOA,UAAP;;AAEA,SACE,MAAC,SAAD,QACC,MAAC,IAAD,QACC,qBACEA,UAAU,CAACC,IAAX,CAAgBC,QADlB,yBADD,EAIC;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAEF,UAAU,CAACG;AAA7C,IAJD,OAMC;AAAM,IAAA,QAAQ,EAAC,UAAf;AAA0B,IAAA,OAAO,YAAKH,UAAU,CAACC,IAAX,CAAgBC,QAArB;AAAjC,IAND,EAOC;AAAM,IAAA,QAAQ,EAAC,gBAAf;AAAgC,IAAA,OAAO,EAAEF,UAAU,CAACG;AAApD,IAPD,EASC;AAAM,IAAA,QAAQ,EAAC,UAAf;AAA0B,IAAA,OAAO,EAAEH,UAAU,CAACI,MAAX,CAAkB,CAAlB,IAAuBJ,UAAU,CAACI,MAAX,CAAkB,CAAlB,EAAqBC,GAA5C,GAAkD;AAArF,IATD,EAUC;AAAM,IAAA,QAAQ,EAAC,QAAf;AAAwB,IAAA,OAAO,sCAA+BT,EAA/B;AAA/B,IAVD,CADD,EAaC,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEI;AAAhB,IAbD,CADF;AAiBA,CAtBD;AAwBA;AACA;;;;AAmBA,eAAeN,IAAf","sourcesContent":["// 동적 라우팅용 페이지\r\n// post/[id].js\r\n\r\nimport {useRouter} from \"next/router\";\r\nimport wrapper from \"../../store/configureStore\";\r\nimport axios from 'axios'\r\nimport {END} from 'redux-saga'\r\nimport {LOAD_MY_INFO_REQUEST} from \"../../reducers/user\";\r\nimport {LOAD_POST_REQUEST} from '../../reducers/post'\r\nimport {getStaticProps} from \"../about\";\r\nimport AppLayout from '../../components/AppLayout'\r\nimport PostCard from \"../../components/PostCard\";\r\nimport {useSelector} from \"react-redux\";\r\nimport Head from \"next/head\";\r\n\r\n\r\nconst Post = () => {\r\n\tconst router = useRouter()\r\n\tconst {id} = router.query\r\n\tconst {singlePost} = useSelector((state) => state.post)\r\n\r\n\treturn (\r\n\t\t\t<AppLayout>\r\n\t\t\t\t<Head>\r\n\t\t\t\t\t<title>\r\n\t\t\t\t\t\t{singlePost.User.nickname} 님의 글\r\n\t\t\t\t\t</title>\r\n\t\t\t\t\t<meta name=\"description\" content={singlePost.content} /> {/*게시글 설명*/}\r\n\t\t\t\t\t{/*og: 는 카톡 공유하기 같은거에 미리보기로 이미지,게시물 제목등 표기*/}\r\n\t\t\t\t\t<meta property=\"og:title\" content={`${singlePost.User.nickname} 님의 게시글`} />\r\n\t\t\t\t\t<meta property=\"og:description\" content={singlePost.content} />\r\n\t\t\t\t\t{/*이미지가 없는 게시물을 공유하면 favicon 이 화면에 뜸, 이미지가 만약 있다면 첫번째 이미지를 공유화면에 띄우기*/}\r\n\t\t\t\t\t<meta property=\"og:image\" content={singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebirds.com/favicon.ico'} />\r\n\t\t\t\t\t<meta property=\"og:url\" content={`https://nodebird.com/post/${id}`} />\r\n\t\t\t\t</Head>\r\n\t\t\t\t<PostCard post={singlePost}/>\r\n\t\t\t</AppLayout>\r\n\t)\r\n}\r\n\r\n/*getServerSideProps&getStaticProps 안의 context 에서는 context.params.id&context.query.id 하면\r\nuseRouter 에 똑같이 접근 할 수 있다*/\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n\tconst cookie = context.req ? context.req.headers.cookie : '';\r\n\tconsole.log('dynamic routing Post getServerSideProps Start ::')\r\n\taxios.defaults.headers.Cookie = ''\r\n\tif (context.req && cookie) {\r\n\t\taxios.defaults.headers.Cookie = cookie\r\n\t}\r\n\tcontext.store.dispatch({ // 내 정보 요청\r\n\t\ttype: LOAD_MY_INFO_REQUEST,\r\n\t})\r\n\tcontext.store.dispatch({ // 단일 게시글 요청\r\n\t\ttype: LOAD_POST_REQUEST,\r\n\t\tdata: context.params.id, //\r\n\t})\r\n\tcontext.store.dispatch(END)\r\n\tawait context.store.sagaTask.toPromise()\r\n})\r\n\r\nexport default Post"]},"metadata":{},"sourceType":"module"}