{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\intellijProjects\\\\react-nodebird\\\\prepare\\\\front\\\\component\\\\PostForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Form, Input, Button } from 'antd';\nimport React, { useCallback, useRef, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addPost } from '../reducers/post';\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths;\n\n  var _useState = useState(''),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var imageInput = useRef();\n  var dispatch = useDispatch();\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  }, []);\n  var onSubmit = useCallback(function () {\n    dispatch(addPost);\n    setText('');\n  }, []);\n  return (// post Form\n    __jsx(Form, {\n      style: {\n        margin: '10px 0 20px'\n      },\n      encType: \"multipart/form-data\",\n      onFinish: onSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 4\n      }\n    }, __jsx(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }\n    }), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }\n    }, __jsx(\"input\", {\n      type: \"file\",\n      multiple: true,\n      hidden: true,\n      ref: imageInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 6\n      }\n    }), __jsx(Button, {\n      onClick: onClickImageUpload,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 6\n      }\n    }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n      type: \"primary\",\n      style: {\n        \"float\": 'right'\n      },\n      htmlType: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 6\n      }\n    }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }\n    }, imagePaths.map(function (v) {\n      return (// 이미지 등록을 했을 시, 이미지 경로가 저장되며, 반복문으로 표시해줌\n        __jsx(\"div\", {\n          key: v,\n          style: {\n            display: 'inline-block'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 9\n          }\n        }, __jsx(\"img\", {\n          src: 'http://localhost:3065/' + v,\n          style: {\n            width: '200px'\n          },\n          alt: v,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 10\n          }\n        }), __jsx(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 10\n          }\n        }, __jsx(Button, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }\n        }, \"\\uC81C\\uAC70\")))\n      );\n    })))\n  );\n};\n\n_s(PostForm, \"7It+5vQzbLI1XFVWFgUJH8pELxs=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["D:/intellijProjects/react-nodebird/prepare/front/component/PostForm.js"],"names":["Form","Input","Button","React","useCallback","useRef","useState","useSelector","useDispatch","addPost","PostForm","state","post","imagePaths","text","setText","imageInput","dispatch","onClickImageUpload","current","click","onChangeText","e","target","value","onSubmit","margin","map","v","display","width"],"mappings":"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","sourcesContent":["import {Form, Input, Button} from 'antd'\r\nimport React, {useCallback, useRef, useState} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {addPost} from '../reducers/post'\r\n\r\nconst PostForm = () => {\r\n\tconst {imagePaths} = useSelector((state) => state.post)\r\n\tconst [text, setText] = useState('')\r\n\tconst imageInput = useRef()\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst onClickImageUpload = useCallback(() => {\r\n\t\timageInput.current.click()\r\n\t}, [imageInput.current])\r\n\r\n\tconst onChangeText = useCallback((e) => {\r\n\t\tsetText(e.target.value)\r\n\t}, [])\r\n\r\n\tconst onSubmit = useCallback(() => {\r\n\t\tdispatch(addPost)\r\n\t\tsetText('')\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t\t// post Form\r\n\t\t\t<Form style={{margin: '10px 0 20px'}} encType=\"multipart/form-data\" onFinish={onSubmit}>\r\n\t\t\t\t<Input.TextArea value={text} onChange={onChangeText} maxLength={140} placeholder=\"어떤 신기한 일이 있었나요?\"/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input type=\"file\" multiple hidden ref={imageInput}/>\r\n\t\t\t\t\t<Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n\t\t\t\t\t<Button type=\"primary\" style={{float: 'right'}} htmlType=\"submit\">\r\n\t\t\t\t\t\t짹짹\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{imagePaths.map((v) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t// 이미지 등록을 했을 시, 이미지 경로가 저장되며, 반복문으로 표시해줌\r\n\t\t\t\t\t\t\t\t<div key={v} style={{display: 'inline-block'}}>\r\n\t\t\t\t\t\t\t\t\t<img src={'http://localhost:3065/' + v} style={{width: '200px'}} alt={v}/>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<Button>제거</Button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</Form>\r\n\t)\r\n}\r\n\r\nexport default PostForm\r\n"]},"metadata":{},"sourceType":"module"}