{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\intellijProjects\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\user\\\\[id].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Avatar, Card } from 'antd';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\nimport PostCard from '../../component/PostCard';\nimport AppLayout from '../../component/AppLayout';\n\nvar User = function User() {\n  _s();\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var id = router.query.id; // 특정 사용자 아이디 받기\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      hasMorePosts = _useSelector.hasMorePosts,\n      loadPostsLoading = _useSelector.loadPostsLoading;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      userInfo = _useSelector2.userInfo; // 특정 사용자에대한 게시글만 가져오기\n\n\n  useEffect(function () {\n    var onScroll = function onScroll() {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\n            data: id\n          });\n        }\n      }\n    };\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length, hasMorePosts, id]);\n  return __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }, userInfo && __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 8\n    }\n  }, userInfo.nickname, \"\\uB2D8\\uC758 \\uAE00\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"\".concat(userInfo.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 8\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: \"\".concat(userInfo.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 8\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: \"\".concat(userInfo.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 8\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: \"https://nodebird.com/favicon.ico\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 8\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: \"https://nodebird.com/user/\".concat(id),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 8\n    }\n  })), userInfo ? __jsx(Card, {\n    actions: [__jsx(\"div\", {\n      key: \"twit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 12\n      }\n    }, \"\\uC9F9\\uC9F9\", __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }), userInfo.Posts), __jsx(\"div\", {\n      key: \"following\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 12\n      }\n    }, \"\\uD314\\uB85C\\uC789\", __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }), userInfo.Followings), __jsx(\"div\", {\n      key: \"follower\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 12\n      }\n    }, \"\\uD314\\uB85C\\uC6CC\", __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }), userInfo.Followers)],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 20\n      }\n    }, userInfo.nickname[0]),\n    title: userInfo.nickname,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 10\n    }\n  })) : null, mainPosts.map(function (post) {\n    return __jsx(PostCard, {\n      key: post.id,\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 30\n      }\n    });\n  }));\n};\n\n_s(User, \"FXTbcjoVaSS4w2oveElPGfnTqkc=\", false, function () {\n  return [useDispatch, useRouter, useSelector, useSelector];\n});\n\n_c = User;\nexport var __N_SSP = true;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["D:/intellijProjects/react-nodebird/prepare/front/pages/user/[id].js"],"names":["React","useEffect","useDispatch","useSelector","Avatar","Card","Head","useRouter","LOAD_USER_POSTS_REQUEST","PostCard","AppLayout","User","dispatch","router","id","query","state","post","mainPosts","hasMorePosts","loadPostsLoading","user","userInfo","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","type","lastId","length","data","addEventListener","removeEventListener","nickname","Posts","Followings","Followers","map"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Avatar, Card } from 'antd';\r\nimport { END } from 'redux-saga';\r\nimport Head from 'next/head';\r\nimport { useRouter } from 'next/router';\r\n\r\nimport axios from 'axios';\r\nimport { LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from '../../reducers/user';\r\nimport PostCard from '../../component/PostCard';\r\nimport wrapper from '../../store/configureStore';\r\nimport AppLayout from '../../component/AppLayout';\r\n\r\nconst User = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst router = useRouter();\r\n\tconst { id } = router.query; // 특정 사용자 아이디 받기\r\n\tconst { mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\r\n\tconst { userInfo } = useSelector((state) => state.user);\r\n\r\n\t// 특정 사용자에대한 게시글만 가져오기\r\n\tuseEffect(() => {\r\n\t\tconst onScroll = () => {\r\n\t\t\tif (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n\t\t\t\tif (hasMorePosts && !loadPostsLoading) {\r\n\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\ttype: LOAD_USER_POSTS_REQUEST,\r\n\t\t\t\t\t\tlastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\r\n\t\t\t\t\t\tdata: id,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\twindow.addEventListener('scroll', onScroll);\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener('scroll', onScroll);\r\n\t\t};\r\n\t}, [mainPosts.length, hasMorePosts, id]);\r\n\r\n\treturn (\r\n\t\t\t<AppLayout>\r\n\t\t\t\t{userInfo && (\r\n\t\t\t\t\t\t<Head>\r\n\t\t\t\t\t\t\t<title>\r\n\t\t\t\t\t\t\t\t{userInfo.nickname}\r\n\t\t\t\t\t\t\t\t님의 글\r\n\t\t\t\t\t\t\t</title>\r\n\t\t\t\t\t\t\t<meta name=\"description\" content={`${userInfo.nickname}님의 게시글`} />\r\n\t\t\t\t\t\t\t<meta property=\"og:title\" content={`${userInfo.nickname}님의 게시글`} />\r\n\t\t\t\t\t\t\t<meta property=\"og:description\" content={`${userInfo.nickname}님의 게시글`} />\r\n\t\t\t\t\t\t\t<meta property=\"og:image\" content=\"https://nodebird.com/favicon.ico\" />\r\n\t\t\t\t\t\t\t<meta property=\"og:url\" content={`https://nodebird.com/user/${id}`} />\r\n\t\t\t\t\t\t</Head>\r\n\t\t\t\t)}\r\n\t\t\t\t{userInfo\r\n\t\t\t\t\t\t? (\r\n\t\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\t\t\tactions={[\r\n\t\t\t\t\t\t\t\t\t\t\t<div key=\"twit\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t짹짹\r\n\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{userInfo.Posts}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>,\r\n\t\t\t\t\t\t\t\t\t\t\t<div key=\"following\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t팔로잉\r\n\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{userInfo.Followings}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>,\r\n\t\t\t\t\t\t\t\t\t\t\t<div key=\"follower\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t팔로워\r\n\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{userInfo.Followers}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>,\r\n\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Card.Meta\r\n\t\t\t\t\t\t\t\t\t\t\tavatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={userInfo.nickname}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t: null}\r\n\t\t\t\t{mainPosts.map((post) => <PostCard key={post.id} post={post} />)}\r\n\t\t\t</AppLayout>\r\n\t);\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n\tconst cookie = context.req ? context.req.headers.cookie : '';\r\n\taxios.defaults.headers.Cookie = '';\r\n\tif (context.req && cookie) {\r\n\t\taxios.defaults.headers.Cookie = cookie;\r\n\t}\r\n\tcontext.store.dispatch({\r\n\t\ttype: LOAD_USER_POSTS_REQUEST,\r\n\t\tdata: context.params.id,\r\n\t});\r\n\tcontext.store.dispatch({\r\n\t\ttype: LOAD_MY_INFO_REQUEST,\r\n\t});\r\n\tcontext.store.dispatch({\r\n\t\ttype: LOAD_USER_REQUEST,\r\n\t\tdata: context.params.id,\r\n\t});\r\n\tcontext.store.dispatch(END);\r\n\tawait context.store.sagaTask.toPromise();\r\n\tconsole.log('getState', context.store.getState().post.mainPosts);\r\n\treturn { props: {} };\r\n});\r\n\r\nexport default User;"]},"metadata":{},"sourceType":"module"}