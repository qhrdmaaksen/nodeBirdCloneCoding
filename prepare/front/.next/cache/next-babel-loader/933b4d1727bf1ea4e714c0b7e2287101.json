{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\intellijProjects\\\\react-nodebird\\\\prepare\\\\front\\\\component\\\\PostCard.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Avatar, Button, Card, Popover } from \"antd\";\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined } from \"@ant-design/icons\";\nimport { useSelector } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport PostImages from \"./PostImages\";\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  }); //state.user.me && state.user.me.id\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setCommentFormOpened = _useState2[1];\n\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 32\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 8\n      }\n    }), // 리트윗 버튼\n    __jsx(HeartOutlined, {\n      key: \"heart\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 8\n      }\n    }), // 하트 버튼\n    __jsx(MessageOutlined, {\n      key: \"comment\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 8\n      }\n    }), // 댓글 버튼\n    __jsx(Popover, {\n      key: \"more\",\n      content: // 더 보기 버튼\n      __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 10\n        }\n      }, id && post.User.id === id ?\n      /*내가 쓴 글이면 수정 삭제 가능*/\n      __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 14\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 14\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }\n      }, \"\\uC2E0\\uACE0\"), \" \"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 8\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }))],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 6\n    }\n  })));\n};\n\n_s(PostCard, \"UJTMhLIj71iGmUx6kccUc939lXM=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    // 날짜 객체\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["D:/intellijProjects/react-nodebird/prepare/front/component/PostCard.js"],"names":["React","useState","Avatar","Button","Card","Popover","EllipsisOutlined","HeartOutlined","MessageOutlined","RetweetOutlined","useSelector","PropTypes","PostImages","PostCard","post","id","state","user","me","liked","setLiked","commentFormOpened","setCommentFormOpened","marginBottom","Images","User","nickname","content","propTypes","shape","number","object","string","createdAt","Comments","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport {Avatar, Button, Card, Popover} from \"antd\";\r\nimport {EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined} from \"@ant-design/icons\";\r\nimport {useSelector} from \"react-redux\";\r\nimport PropTypes from 'prop-types'\r\nimport PostImages from \"./PostImages\";\r\n\r\nconst PostCard = ({post}) => {\r\n\tconst id = useSelector((state) => state.user.me?.id) //state.user.me && state.user.me.id\r\n\tconst [liked, setLiked] = useState(false)\r\n\tconst [commentFormOpened, setCommentFormOpened] = useState(false)\r\n\r\n\treturn (\r\n\t\t\t<div style={{marginBottom: 20}}>\r\n\t\t\t\t<Card\r\n\t\t\t\t\t\tcover={post.Images[0] && <PostImages images={post.Images}/>}\r\n\t\t\t\t\t\tactions={[\r\n\t\t\t\t\t\t\t<RetweetOutlined key=\"retweet\"/>, // 리트윗 버튼\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<HeartOutlined key=\"heart\"/>, // 하트 버튼\r\n\t\t\t\t\t\t\t<MessageOutlined key=\"comment\"/>, // 댓글 버튼\r\n\t\t\t\t\t\t\t<Popover key=\"more\" content={( // 더 보기 버튼\r\n\t\t\t\t\t\t\t\t\t<Button.Group>\r\n\t\t\t\t\t\t\t\t\t\t{id && post.User.id === id ? ( /*내가 쓴 글이면 수정 삭제 가능*/\r\n\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button>수정</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button type=\"danger\">삭제</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t) : <Button>신고</Button>} {/* 남이 쓴 글이면 삭제 가능*/}\r\n\t\t\t\t\t\t\t\t\t</Button.Group>\r\n\t\t\t\t\t\t\t)}>\r\n\t\t\t\t\t\t\t\t<EllipsisOutlined/>\r\n\t\t\t\t\t\t\t</Popover>,\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Card.Meta\r\n\t\t\t\t\t\t\tavatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n\t\t\t\t\t\t\ttitle={post.User.nickname}\r\n\t\t\t\t\t\t\tdescription={post.content}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Card>\r\n\t\t\t\t{/*<CommentForm />\r\n\t\t\t\t<Comments />*/}\r\n\t\t\t</div>\r\n\t)\r\n}\r\nPostCard.propTypes = {\r\n\tpost: PropTypes.shape({\r\n\t\tid: PropTypes.number,\r\n\t\tUser: PropTypes.object,\r\n\t\tcontent: PropTypes.string,\r\n\t\tcreatedAt: PropTypes.object, // 날짜 객체\r\n\t\tComments: PropTypes.arrayOf(PropTypes.object),\r\n\t\tImages: PropTypes.arrayOf(PropTypes.object),\r\n\t}).isRequired,\r\n}\r\n\r\nexport default PostCard"]},"metadata":{},"sourceType":"module"}