{"ast":null,"code":"var _jsxFileName = \"D:\\\\intellijProjects\\\\react-nodebird\\\\prepare\\\\front\\\\component\\\\CommentForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect } from 'react';\nimport { Button, Form, Input } from \"antd\";\nimport useInput from \"../hooks/useInput\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\n\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommentDone,\n    addCommentLoading\n  } = useSelector(state => state.post);\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n    dispatch({\n      // 변수를 사용해서 create, 재사용 될거라면 나중에 함수로 빼는게 좋으며, 컴포넌트에서만 쓰일거면 액션 객체하나로 넣는다\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: \"relative\",\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    rows: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 6\n    }\n  }), __jsx(Button, {\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -40,\n      zIndex: 1\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: addCommentLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 6\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n\nCommentForm.prototype = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["D:/intellijProjects/react-nodebird/prepare/front/component/CommentForm.js"],"names":["React","useCallback","useEffect","Button","Form","Input","useInput","PropTypes","useDispatch","useSelector","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","id","state","user","me","addCommentDone","addCommentLoading","commentText","onChangeCommentText","setCommentText","onSubmitComment","console","log","type","data","content","postId","userId","position","margin","right","bottom","zIndex","prototype","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,QAA4C,OAA5C;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,QAAkC,MAAlC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,mBAAR,QAAkC,kBAAlC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAC/B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,EAAE,GAAGL,WAAW,CAAEM,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;AACA,QAAM;AAACI,IAAAA,cAAD;AAAiBC,IAAAA;AAAjB,MAAsCV,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACH,IAAlB,CAAvD;AACA,QAAM,CAACQ,WAAD,EAAcC,mBAAd,EAAmCC,cAAnC,IAAqDhB,QAAQ,CAAC,EAAD,CAAnE;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIgB,cAAJ,EAAoB;AACnBI,MAAAA,cAAc,CAAC,EAAD,CAAd;AACA;AACD,GAJQ,EAIN,CAACJ,cAAD,CAJM,CAAT;AAMA,QAAMK,eAAe,GAAGtB,WAAW,CAAC,MAAM;AACzCuB,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAI,CAACE,EAAjB,EAAqBM,WAArB;AACAP,IAAAA,QAAQ,CAAC;AAAE;AACVa,MAAAA,IAAI,EAAEhB,mBADE;AAERiB,MAAAA,IAAI,EAAE;AAACC,QAAAA,OAAO,EAAER,WAAV;AAAuBS,QAAAA,MAAM,EAAEjB,IAAI,CAACE,EAApC;AAAwCgB,QAAAA,MAAM,EAAEhB;AAAhD;AAFE,KAAD,CAAR;AAIA,GANkC,EAMhC,CAACM,WAAD,EAAcN,EAAd,CANgC,CAAnC;AAQA,SACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAES,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAACQ,MAAAA,QAAQ,EAAE,UAAX;AAAuBC,MAAAA,MAAM,EAAE;AAA/B,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEZ,WAAvB;AAAoC,IAAA,QAAQ,EAAEC,mBAA9C;AAAmE,IAAA,IAAI,EAAE,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAACU,MAAAA,QAAQ,EAAE,UAAX;AAAuBE,MAAAA,KAAK,EAAE,CAA9B;AAAiCC,MAAAA,MAAM,EAAE,CAAC,EAA1C;AAA8CC,MAAAA,MAAM,EAAE;AAAtD,KAAf;AACI,IAAA,IAAI,EAAC,SADT;AACmB,IAAA,QAAQ,EAAC,QAD5B;AACqC,IAAA,OAAO,EAAEhB,iBAD9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFD,CADD,CADF;AAWA,CA/BD;;AAgCAR,WAAW,CAACyB,SAAZ,GAAwB;AACvBxB,EAAAA,IAAI,EAAEL,SAAS,CAAC8B,MAAV,CAAiBC;AADA,CAAxB;AAGA,eAAe3B,WAAf","sourcesContent":["import React, {useCallback, useEffect} from 'react'\r\nimport {Button, Form, Input} from \"antd\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport PropTypes from \"prop-types\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ADD_COMMENT_REQUEST} from \"../reducers/post\";\r\n\r\nconst CommentForm = ({post}) => {\r\n\tconst dispatch = useDispatch()\r\n\tconst id = useSelector((state) => state.user.me?.id)\r\n\tconst {addCommentDone, addCommentLoading} = useSelector((state) => state.post)\r\n\tconst [commentText, onChangeCommentText, setCommentText] = useInput('')\r\n\r\n\tuseEffect(() => {\r\n\t\tif (addCommentDone) {\r\n\t\t\tsetCommentText('')\r\n\t\t}\r\n\t}, [addCommentDone])\r\n\r\n\tconst onSubmitComment = useCallback(() => {\r\n\t\tconsole.log(post.id, commentText)\r\n\t\tdispatch({ // 변수를 사용해서 create, 재사용 될거라면 나중에 함수로 빼는게 좋으며, 컴포넌트에서만 쓰일거면 액션 객체하나로 넣는다\r\n\t\t\ttype: ADD_COMMENT_REQUEST,\r\n\t\t\tdata: {content: commentText, postId: post.id, userId: id},\r\n\t\t})\r\n\t}, [commentText, id])\r\n\r\n\treturn (\r\n\t\t\t<Form onFinish={onSubmitComment}>\r\n\t\t\t\t<Form.Item style={{position: \"relative\", margin: 0}}>\r\n\t\t\t\t\t<Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4}/>\r\n\t\t\t\t\t<Button style={{position: 'absolute', right: 0, bottom: -40, zIndex: 1}}\r\n\t\t\t\t\t\t\t\t\ttype=\"primary\" htmlType=\"submit\" loading={addCommentLoading}\r\n\t\t\t\t\t>삐약\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t)\r\n}\r\nCommentForm.prototype = {\r\n\tpost: PropTypes.object.isRequired,\r\n}\r\nexport default CommentForm;\r\n"]},"metadata":{},"sourceType":"module"}