{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\intellijProjects\\\\react-nodebird\\\\prepare\\\\front\\\\component\\\\UserProfile.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport { Card, Avatar, Button } from 'antd';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logoutRequestAction } from '../reducers/user'; // eslint-disable-next-line react/prop-types\n\nvar UserProfile = function UserProfile() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me,\n      logOutLoading = _useSelector.logOutLoading;\n\n  var onLogOut = useCallback(function () {\n    //setIsLoggedIn(false)\n    dispatch(logoutRequestAction());\n  }, []);\n  return __jsx(Card, {\n    actions: [\n    /*리액트에서 배열로 jsx 사용할땐 key 붙여줘야함*/\n    __jsx(\"div\", {\n      key: \"twit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, \"\\uC9F9\\uC9F9\", __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }\n    }), me.Posts.length), __jsx(\"div\", {\n      key: \"following\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, \"\\uD314\\uB85C\\uC719\", __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 31\n      }\n    }), me.Followings.length), __jsx(\"div\", {\n      key: \"follower\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, \"\\uD314\\uB85C\\uC6CC\", __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 30\n      }\n    }), me.Followers.length)],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Link, {\n      href: \"/user/\".concat(item.User.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 10\n      }\n    }, __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, me.nickname[0]))),\n    title: me.nickname,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }), __jsx(Button, {\n    onClick: onLogOut,\n    loading: logOutLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, \"\\uB85C\\uADF8\\uC544\\uC6C3\"));\n};\n\n_s(UserProfile, \"VDN+ojTbR7foDEA0yatv62j4oFM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UserProfile;\nexport default UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"sources":["D:/intellijProjects/react-nodebird/prepare/front/component/UserProfile.js"],"names":["React","useCallback","Card","Avatar","Button","useDispatch","useSelector","logoutRequestAction","UserProfile","dispatch","state","user","me","logOutLoading","onLogOut","Posts","length","Followings","Followers","item","User","id","nickname"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,MAAtB,QAAmC,MAAnC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,mBAAR,QAAkC,kBAAlC,C,CAEA;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AACzB,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AACA,qBAA4BC,WAAW,CAAC,UAACI,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAvC;AAAA,MAAOC,EAAP,gBAAOA,EAAP;AAAA,MAAWC,aAAX,gBAAWA,aAAX;;AACA,MAAMC,QAAQ,GAAGb,WAAW,CAAC,YAAM;AAClC;AACAQ,IAAAA,QAAQ,CAACF,mBAAmB,EAApB,CAAR;AACA,GAH2B,EAGzB,EAHyB,CAA5B;AAKA,SACE,MAAC,IAAD;AACE,IAAA,OAAO,EAAE;AAAE;AACV;AAAK,MAAA,GAAG,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlB,EAAwBK,EAAE,CAACG,KAAH,CAASC,MAAjC,CADQ,EAER;AAAK,MAAA,GAAG,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,EAA8BJ,EAAE,CAACK,UAAH,CAAcD,MAA5C,CAFQ,EAGR;AAAK,MAAA,GAAG,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvB,EAA6BJ,EAAE,CAACM,SAAH,CAAaF,MAA1C,CAHQ,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOC,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,MAAM,EACJ,MAAC,IAAD;AAAM,MAAA,IAAI,kBAAWG,IAAI,CAACC,IAAL,CAAUC,EAArB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACET,EAAE,CAACU,QAAH,CAAY,CAAZ,CADF,CADD,CADD,CAFJ;AAUE,IAAA,KAAK,EAAEV,EAAE,CAACU,QAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPD,EAmBC,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAER,QAAjB;AAA2B,IAAA,OAAO,EAAED,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAnBD,CADF;AAuBA,CA/BD;;GAAML,W;UACYH,W,EACWC,W;;;KAFvBE,W;AAgCN,eAAeA,WAAf","sourcesContent":["import React, {useCallback} from 'react'\r\nimport {Card, Avatar, Button} from 'antd'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {logoutRequestAction} from '../reducers/user'\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst UserProfile = () => {\r\n\tconst dispatch = useDispatch()\r\n\tconst {me, logOutLoading} = useSelector((state) => state.user)\r\n\tconst onLogOut = useCallback(() => {\r\n\t\t//setIsLoggedIn(false)\r\n\t\tdispatch(logoutRequestAction())\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t\t<Card\r\n\t\t\t\t\tactions={[ /*리액트에서 배열로 jsx 사용할땐 key 붙여줘야함*/\r\n\t\t\t\t\t\t<div key=\"twit\">짹짹<br/>{me.Posts.length}</div>,\r\n\t\t\t\t\t\t<div key=\"following\">팔로윙<br/>{me.Followings.length}</div>,\r\n\t\t\t\t\t\t<div key=\"follower\">팔로워<br/>{me.Followers.length}</div>,\r\n\t\t\t\t\t]}\r\n\t\t\t>\r\n\t\t\t\t<Card.Meta\r\n\t\t\t\t\t\tavatar={(\r\n\t\t\t\t\t\t\t\t<Link href={`/user/${item.User.id}`}>\r\n\t\t\t\t\t\t\t\t\t<a>\r\n\t\t\t\t\t\t\t\t\t\t<Avatar>\r\n\t\t\t\t\t\t\t\t\t\t\t{me.nickname[0]}\r\n\t\t\t\t\t\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\ttitle={me.nickname}/>\r\n\t\t\t\t{/*isLoggingOut 이 true 면 버튼이 로딩 버튼으로 바뀜*/}\r\n\t\t\t\t<Button onClick={onLogOut} loading={logOutLoading}>로그아웃</Button>\r\n\t\t\t</Card>\r\n\t)\r\n}\r\nexport default UserProfile\r\n"]},"metadata":{},"sourceType":"module"}