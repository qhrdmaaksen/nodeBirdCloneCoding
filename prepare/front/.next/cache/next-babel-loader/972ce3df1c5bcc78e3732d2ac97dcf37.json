{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\intellijProjects\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react'; // Next 에서는 이 구문이 필요가 없다.\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppLayout from '../component/AppLayout';\nimport PostForm from '../component/PostForm';\nimport PostCard from \"../component/PostCard\";\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\n\nvar Home = function Home() {\n  _s();\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    // 컴포넌트 디드마운트와 같은 효과 가능 , 뒤에 빈배열만 넣는다면\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []); // 스크롤이 끝까지 내려갔을때 경계 점점\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts;\n\n  return __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }\n  }, me && __jsx(PostForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }\n  }), \" \", mainPosts.map(function (post) {\n    return __jsx(PostCard, {\n      key: post.id,\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    });\n  }));\n};\n\n_s(Home, \"lSj3zPiDBkX9kG8p/QZ2Bmh3iP8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/intellijProjects/react-nodebird/prepare/front/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","AppLayout","PostForm","PostCard","LOAD_POSTS_REQUEST","Home","dispatch","type","state","user","me","post","mainPosts","map","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CAAuC;;AACvC,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAAQC,kBAAR,QAAiC,kBAAjC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AAClB,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACAD,EAAAA,SAAS,CAAC,YAAM;AAAE;AACjBQ,IAAAA,QAAQ,CAAC;AACRC,MAAAA,IAAI,EAAEH;AADE,KAAD,CAAR;AAGA,GAJQ,EAIN,EAJM,CAAT,CAFkB,CAQlB;;AACA,qBAAaJ,WAAW,CAAC,UAACQ,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAxB;AAAA,MAAOC,EAAP,gBAAOA,EAAP;;AACA,sBAAoBV,WAAW,CAAC,UAACQ,KAAD;AAAA,WAAWA,KAAK,CAACG,IAAjB;AAAA,GAAD,CAA/B;AAAA,MAAOC,SAAP,iBAAOA,SAAP;;AACA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGEF,EAAE,IAAI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHR,OAIEE,SAAS,CAACC,GAAV,CAAc,UAACF,IAAD;AAAA,WACb,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACG,EAApB;AAAwB,MAAA,IAAI,EAAEH,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa;AAAA,GAAd,CAJF,CADF;AAWA,CAtBD;;GAAMN,I;UACYN,W,EAQJC,W,EACOA,W;;;KAVfK,I;AAwBN,eAAeA,IAAf","sourcesContent":["import React, {useEffect} from 'react' // Next 에서는 이 구문이 필요가 없다.\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport AppLayout from '../component/AppLayout'\r\nimport PostForm from '../component/PostForm'\r\nimport PostCard from \"../component/PostCard\";\r\nimport {LOAD_POSTS_REQUEST} from '../reducers/post'\r\n\r\nconst Home = () => {\r\n\tconst dispatch = useDispatch()\r\n\tuseEffect(() => { // 컴포넌트 디드마운트와 같은 효과 가능 , 뒤에 빈배열만 넣는다면\r\n\t\tdispatch({\r\n\t\t\ttype: LOAD_POSTS_REQUEST,\r\n\t\t})\r\n\t}, []);\r\n\r\n\t// 스크롤이 끝까지 내려갔을때 경계 점점\r\n\tconst {me} = useSelector((state) => state.user)\r\n\tconst {mainPosts} = useSelector((state) => state.post)\r\n\treturn (\r\n\t\t\t<AppLayout>\r\n\t\t\t\t{/*AppLayout 을 사용한다, 만약 다른 레이아웃을 사용하고싶다면 따로 component에 만들어서 이와같이 감싸면된다.*/}\r\n\t\t\t\t{/*뭔가 묶일 수 있는 단위가있을 것 같으면 먼저 컴포넌트 이름을 정해주자*/}\r\n\t\t\t\t{me && <PostForm/>} {/*모두 참 인경우 마지막 피 연산자를 반환*/}\r\n\t\t\t\t{mainPosts.map((post) => (\r\n\t\t\t\t\t\t<PostCard key={post.id} post={post}/>\r\n\t\t\t\t))}\r\n\t\t\t\t{/*이와같이 AppLayout 으로 감싼 이부분은 AppLayout 의 children 이된다.*/}\r\n\t\t\t</AppLayout>\r\n\t)\r\n}\r\n\r\nexport default Home\r\n"]},"metadata":{},"sourceType":"module"}