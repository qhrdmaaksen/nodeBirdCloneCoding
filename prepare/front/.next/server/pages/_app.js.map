{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./pages/_app.js","webpack:///external \"redux-saga\"","webpack:///./reducers/index.js","webpack:///./sagas/post.js","webpack:///./sagas/user.js","webpack:///./sagas/index.js","webpack:///./store/configureStore.js","webpack:///external \"next-redux-wrapper\"","webpack:///./reducers/user.js","webpack:///external \"redux-saga/effects\"","webpack:///external \"immer\"","webpack:///external \"react\"","webpack:///./util/produce.js","webpack:///./reducers/post.js","webpack:///external \"redux\"","webpack:///external \"redux-devtools-extension\"","webpack:///external \"next/head\"","webpack:///external \"axios\""],"names":["NodeBird","Component","wrapper","withRedux","rootReducer","state","action","type","HYDRATE","console","log","payload","combinedReducer","combineReducers","user","post","retweetAPI","data","axios","retweet","result","call","put","RETWEET_SUCCESS","err","error","RETWEET_FAILURE","response","uploadImagesAPI","uploadImages","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","likePostAPI","patch","likePost","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","unlikePostAPI","delete","unlikePost","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","loadPostsAPI","lastId","get","loadPosts","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","loadPostAPI","loadPost","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","addPostAPI","addPost","ADD_POST_SUCCESS","ADD_POST_TO_ME","id","ADD_POST_FAILURE","removePostAPI","removePost","REMOVE_POST_SUCCESS","REMOVE_POST_OF_ME","REMOVE_POST_FAILURE","addCommentAPI","postId","addComment","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","loadUserPostsAPI","loadUserPosts","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","loadHashtagPostsAPI","encodeURIComponent","loadHashtagPosts","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","watchLoadUserPosts","throttle","LOAD_USER_POSTS_REQUEST","watchLoadHashtagPosts","LOAD_HASHTAG_POSTS_REQUEST","watchLoadPost","takeLatest","LOAD_POST_REQUEST","watchRetweet","RETWEET_REQUEST","watchUploadImages","UPLOAD_IMAGES_REQUEST","watchLikePost","LIKE_POST_REQUEST","watchUnlikePost","UNLIKE_POST_REQUEST","watchLoadPosts","LOAD_POSTS_REQUEST","watchAddPost","ADD_POST_REQUEST","watchRemovePost","REMOVE_POST_REQUEST","watchAddComment","ADD_COMMENT_REQUEST","postSaga","all","fork","logInAPI","logIn","LOG_IN_SUCCESS","LOG_IN_FAILURE","logOutAPI","logOut","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","changeNicknameAPI","nickname","changeNickname","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","loadMyInfoAPI","userId","withCredentials","loadMyInfo","LOAD_MY_INFO_SUCCESS","me","LOAD_MY_INFO_FAILURE","followAPI","follow","FOLLOW_SUCCESS","FOLLOW_FAILURE","unfollowAPI","unfollow","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","signUpAPI","signUp","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","loadFollowersAPI","loadFollowers","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","loadFollowingsAPI","loadFollowings","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","removeFollowerAPI","removeFollower","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","loadUserAPI","loadUser","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","watchLoadUser","LOAD_USER_REQUEST","watchRemoveFollower","REMOVE_FOLLOWER_REQUEST","watchLoadFollowers","LOAD_FOLLOWERS_REQUEST","watchLoadFollowings","LOAD_FOLLOWINGS_REQUEST","watchChangeNickname","CHANGE_NICKNAME_REQUEST","watchLoadMyInfo","LOAD_MY_INFO_REQUEST","watchFollow","FOLLOW_REQUEST","watchUnFollow","UNFOLLOW_REQUEST","watchLogIn","LOG_IN_REQUEST","watchLogOut","LOG_OUT_REQUEST","watchSignUp","SIGN_UP_REQUEST","userSaga","defaults","baseURL","rootSaga","configureStore","context","sagaMiddleware","createSagaMiddleware","middlewares","enhancer","compose","applyMiddleware","composeWithDevTools","store","createStore","reducer","sagaTask","run","createWrapper","debug","initialState","loadUserLoading","loadUserDone","loadUserError","loadMyInfoLoading","loadMyInfoDone","loadMyInfoError","removeFollowerLoading","removeFollowerDone","removeFollowerError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","loadFollowersLoading","loadFollowersDone","loadFollowersError","loadFollowingsLoading","loadFollowingsDone","loadFollowingsError","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","signUpData","loginData","userInfo","loginRequestAction","logoutRequestAction","produce","draft","Followers","filter","v","UserId","Followings","push","Posts","unshift","args","enableES5","mainPosts","singlePost","imagePaths","hasMorePosts","likePostLoading","likePostDone","likePostError","retweetLoading","retweetDone","retweetError","unlikePostLoading","unlikePostDone","unlikePostError","uploadImagesLoading","uploadImagesDone","uploadImagesError","loadPostsLoading","loadPostsDone","loadPostsError","loadPostLoading","loadPostDone","loadPostError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","REMOVE_IMAGE","find","PostId","Comments","Likers","concat","length","i","PostLoading","PostDone"],"mappings":"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","file":"pages/_app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Head from 'next/head';\nimport 'antd/dist/antd.css';\n\nimport wrapper from '../store/configureStore';\n\nconst NodeBird = ({ Component }) => (\n\t\t<>\n\t\t\t<Head>\n\t\t\t\t<meta charSet=\"utf-8\" />\n\t\t\t\t<title>NodeBird</title>\n\t\t\t</Head>\n\t\t\t<Component />\n\t\t</>\n);\n\nNodeBird.propTypes = {\n\tComponent: PropTypes.elementType.isRequired,\n};\n\nexport default wrapper.withRedux(NodeBird);","module.exports = require(\"redux-saga\");","//import { store } from 'next/dist/build/output/store'\r\nimport {HYDRATE} from 'next-redux-wrapper'\r\nimport {combineReducers} from 'redux'\r\nimport user from './user'\r\nimport post from './post'\r\n\r\n// const initialState = {\r\n// \tuser: {},\r\n// \tpost: {},\r\n// }\r\n\r\n// 비동기 액션 생성기\r\n\r\n// 액션 생성기\r\n/*const changeNickname = (data) => {\r\n\treturn {\r\n\t\ttype: 'CHANGE_NICKNAME',\r\n\t\tdata,\r\n\t}\r\n}\r\nchangeNickname('vitamin777')*/\r\n/*{\r\n\t\ttype: 'CHANGE_NICKNAME',\r\n\t\tdata: 'vitamin777',\r\n}*/\r\n\r\n/*store.dispatch(changeNickname('vitamin7777777'))*/\r\n\r\n// 리듀서 : 이전상태와 액션을 통해 다음 상태를 만들어내는 함수\r\n/* CSR REDUCER\r\nconst rootReducer = combineReducers({\r\n\t// user 이니셜스테이트, post 이니셜스테이트 컴바인 리듀서가 알아서 한방에 묶어줌\r\n\tindex: (state = {}, action) => {\r\n\t\tswitch (action.type) {\r\n\t\t\tcase HYDRATE:\r\n\t\t\t\tconsole.log('HYDRATE', action)\r\n\t\t\t\treturn {...state, ...action.payload}\r\n\t\t\tdefault:\r\n\t\t\t\treturn state\r\n\t\t}\r\n\t},\r\n\tuser,\r\n\tpost,\r\n})*/\r\n\r\n// SSR\r\nconst rootReducer = (state, action) => { // (이전상태 state, 액션) => 다음상태\r\n\tswitch (action.type) {\r\n\t\tcase HYDRATE:\r\n\t\t\tconsole.log('reducer rootReducer HYDRATE :: ', action)\r\n\t\t\treturn action.payload\r\n\t\tdefault: {\r\n\t\t\tconst combinedReducer = combineReducers({\r\n\t\t\t\tuser,\r\n\t\t\t\tpost,\r\n\t\t\t})\r\n\t\t\treturn combinedReducer(state, action)\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/*reducers/index.js 보시면 user랑 post를 불러와서 합치고 있습니다.\r\nrootReducer가 state고, user와 post는 각각 state.user, state.post가 됩니다.\r\nuser.js의 me는 state.user.me가 됩니다.*/\r\nexport default rootReducer\r\n","import {all, call, delay, fork, put, takeLatest, throttle} from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport {\r\n\tADD_COMMENT_FAILURE,\r\n\tADD_COMMENT_REQUEST,\r\n\tADD_COMMENT_SUCCESS,\r\n\tADD_POST_FAILURE,\r\n\tADD_POST_REQUEST,\r\n\tADD_POST_SUCCESS,\r\n\tLIKE_POST_FAILURE,\r\n\tLIKE_POST_REQUEST,\r\n\tLIKE_POST_SUCCESS,\r\n\tLOAD_HASHTAG_POSTS_FAILURE,\r\n\tLOAD_HASHTAG_POSTS_REQUEST, LOAD_HASHTAG_POSTS_SUCCESS,\r\n\tLOAD_POST_FAILURE,\r\n\tLOAD_POST_REQUEST,\r\n\tLOAD_POST_SUCCESS,\r\n\t//generateDummyPost, front\r\n\tLOAD_POSTS_FAILURE,\r\n\tLOAD_POSTS_REQUEST,\r\n\tLOAD_POSTS_SUCCESS, LOAD_USER_POSTS_FAILURE,\r\n\tLOAD_USER_POSTS_REQUEST, LOAD_USER_POSTS_SUCCESS,\r\n\tREMOVE_POST_FAILURE,\r\n\tREMOVE_POST_REQUEST,\r\n\tREMOVE_POST_SUCCESS,\r\n\tRETWEET_FAILURE,\r\n\tRETWEET_REQUEST,\r\n\tRETWEET_SUCCESS,\r\n\tUNLIKE_POST_FAILURE,\r\n\tUNLIKE_POST_REQUEST,\r\n\tUNLIKE_POST_SUCCESS,\r\n\tUPLOAD_IMAGES_FAILURE,\r\n\tUPLOAD_IMAGES_REQUEST,\r\n\tUPLOAD_IMAGES_SUCCESS,\r\n} from \"../reducers/post\";\r\nimport {\r\n\tADD_POST_TO_ME,\r\n\tREMOVE_POST_OF_ME,\r\n} from \"../reducers/user\";\r\n\r\n//import shortId from \"shortid\"; front\r\n\r\n// restAPI\r\nfunction retweetAPI(data) {\r\n\treturn axios.post(`/post/${data}/retweet`)\r\n}\r\n\r\nfunction* retweet(action) {\r\n\ttry {\r\n\t\tconst result = yield call(retweetAPI, action.data)\r\n\t\tconsole.log('saga retweet 실행:::', action.data)\r\n\t\tyield put({\r\n\t\t\ttype: RETWEET_SUCCESS,\r\n\t\t\tdata: result.data,\r\n\t\t})\r\n\t\tconsole.log('saga retweet 성공:::', result)\r\n\t} catch (err) {\r\n\t\tconsole.error('saga retweet 실패 ::: ', err)\r\n\t\tyield put({\r\n\t\t\ttype: RETWEET_FAILURE,\r\n\t\t\terror: err.response.data\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction uploadImagesAPI(data) {\r\n\treturn axios.post('/post/images', data) // form data 를 {name:data} 형식으로 감싸면 json 되기때문에 사용하면 안됨\r\n}\r\n\r\nfunction* uploadImages(action) {\r\n\ttry {\r\n\t\tconst result = yield call(uploadImagesAPI, action.data)\r\n\t\tconsole.log('saga uploadImages 실행::: ', action.data)\r\n\t\tyield put({\r\n\t\t\ttype: UPLOAD_IMAGES_SUCCESS,\r\n\t\t\tdata: result.data\r\n\t\t})\r\n\t\tconsole.log('saga uploadImages 성공::: ', result)\r\n\t} catch (err) {\r\n\t\tconsole.error('saga uploadImages error::: ', err)\r\n\t\tyield put({\r\n\t\t\ttype: UPLOAD_IMAGES_FAILURE,\r\n\t\t\terror: err.response.data\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction likePostAPI(data) { // 3 전달되면\r\n\treturn axios.patch(`/post/${data}/like`) // 4 데이터가 간다, like & unlike 는 patch ( 게시글에 일부분 수정이기때문 )\r\n}\r\n\r\nfunction* likePost(action) { // 1 액션에서\r\n\ttry {\r\n\t\tconst result = yield call(likePostAPI, action.data) // 2 데이터를 꺼내서\r\n\t\tconsole.log('likePost 실행중:::', result)\r\n\t\tyield put({\r\n\t\t\ttype: LIKE_POST_SUCCESS,\r\n\t\t\tdata: result.data, // back, postId, userId 들어있음\r\n\t\t})\r\n\t\tconsole.log('likePost 완료:::', result)\r\n\t} catch (err) {\r\n\t\tconsole.error('likePost error::: ', err)\r\n\t\tyield put({\r\n\t\t\ttype: LIKE_POST_FAILURE,\r\n\t\t\terror: err.response.data,\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction unlikePostAPI(data) { // 3 전달되면\r\n\treturn axios.delete(`/post/${data}/like`) // 4 데이터가 간다\r\n}\r\n\r\nfunction* unlikePost(action) { // 1 액션에서\r\n\ttry {\r\n\t\tconst result = yield call(unlikePostAPI, action.data) // 2 데이터를 꺼내서\r\n\t\tconsole.log('unlikePost 실행중:::', result)\r\n\t\tyield put({\r\n\t\t\ttype: UNLIKE_POST_SUCCESS,\r\n\t\t\tdata: result.data, // back, postId,userId 들어있음\r\n\t\t})\r\n\t\tconsole.log('UNLIKEPost 완료:::', result)\r\n\t} catch (err) {\r\n\t\tconsole.error('UNLIKEPost error::: ', err)\r\n\t\tyield put({\r\n\t\t\ttype: UNLIKE_POST_FAILURE,\r\n\t\t\terror: err.response.data\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction loadPostsAPI(lastId) { // 3 전달되면\r\n\t//return axios.get('/api/posts', data) // 4 데이터가 간다 front\r\n\t// 보통 get 방식은 데이터를 못 넣기때문에 쿼리스트링으로 넣어줘야한다 (주소), etc : limit=10&offset=10\r\n\t// 포스트 등은 데이터 캐싱이 안되지만, 겟은 데이터 캐싱을 같이 할 수 있다\r\n\t// lastId 가 undefined 인 경우 0\r\n\treturn axios.get(`/posts?lastId=${lastId || 0}`) // 4 데이터가 간다 ,\r\n}\r\n\r\nfunction* loadPosts(action) { // 1 액션에서\r\n\ttry {\r\n\t\tconsole.log('Sagas loadPosts 실행중::: ', action.lastId)\r\n\t\tconst result = yield call(loadPostsAPI, action.lastId) // 2 데이터를 꺼내서\r\n\t\t//yield delay(1000) front\r\n\t\tconsole.log('sagas loadPosts 완료::: ', result)\r\n\t\tyield put({\r\n\t\t\ttype: LOAD_POSTS_SUCCESS,\r\n\t\t\t// data: generateDummyPost(10), // data 10 개 front\r\n\t\t\tdata: result.data,\r\n\t\t})\r\n\t} catch (err) {\r\n\t\tconsole.error('saga loadPosts error: ', err)\r\n\t\tyield put({\r\n\t\t\ttype: LOAD_POSTS_FAILURE,\r\n\t\t\terror: err.response.data,\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction loadPostAPI(data) {\r\n\treturn axios.get(`/post/${data}`)\r\n}\r\n\r\nfunction* loadPost(action) {\r\n\ttry {\r\n\t\tconst result = yield call(loadPostAPI, action.data)\r\n\t\tconsole.log('saga loadPost 요청 ::: ', action.data)\r\n\t\tyield put({\r\n\t\t\ttype: LOAD_POST_SUCCESS,\r\n\t\t\tdata: result.data,\r\n\t\t})\r\n\t\tconsole.log('saga loadPost 성공 ::: ', result)\r\n\t} catch (err) {\r\n\t\tconsole.error('saga loadPost 실패 ::: ', err)\r\n\t\tyield put({\r\n\t\t\ttype: LOAD_POST_FAILURE,\r\n\t\t\terror: err.response.data,\r\n\t\t})\r\n\t}\r\n}\r\n\r\n\r\nfunction addPostAPI(data) { // 3 전달되면\r\n\t//return axios.post('/api/post', data) // 4 데이터가 간다 front\r\n\t// data content 가 req.body.content 로 백엔드에 변환\r\n\t//return axios.post('/post', {content: data}) // 4 데이터가 간다,\r\n\t// form data 는 {content: data} 와 같이 감싸면 안된다, 바로 data 로 넣어줘야함\r\n\treturn axios.post('/post', data) // 4 데이터가 간다\r\n}\r\n\r\nfunction* addPost(action) { // 1 액션에서\r\n\ttry {\r\n\t\tconst result = yield call(addPostAPI, action.data) // 2 데이터를 꺼내서\r\n\t\t//yield delay(1000) front\r\n\t\t//const id = shortId.generate() // front 의 더미 아디\r\n\t\tconsole.log('addPost 실행중:::', result)\r\n\t\tyield put({\r\n\t\t\ttype: ADD_POST_SUCCESS,\r\n\t\t\t/*data: { // front dummy\r\n\t\t\t\tid,\r\n\t\t\t\tcontent: action.data,\r\n\t\t\t}*/\r\n\t\t\tdata: result.data, // back, 실제로 게시글이 들어있음\r\n\t\t})\r\n\t\tconsole.log('addPost 완료:::', result)\r\n\t\tyield put({\r\n\t\t\ttype: ADD_POST_TO_ME,\r\n\t\t\t// data: id, // front dummy\r\n\t\t\tdata: result.data.id, // back\r\n\t\t})\r\n\t} catch (err) {\r\n\t\tconsole.error('saga addPost error::: ', err)\r\n\t\tyield put({\r\n\t\t\ttype: ADD_POST_FAILURE,\r\n\t\t\terror: err.response.data\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction removePostAPI(data) { // 3 전달되면\r\n\t//return axios.post('/api/post', data) // 4 데이터가 간다 front\r\n\treturn axios.delete(`/post/${data}`) // 4 데이터가 간다 back //delete 의 data 는 post.id (PostCard.js)에서 확인 가능\r\n}\r\n\r\nfunction* removePost(action) { // 1 액션에서\r\n\ttry { // 포스트 리듀서상태와 유저리듀서상태와 동시에 한방에 바꿀수 없기때문에 액션을 두번으로 바꿔준다,\r\n\t\tconst result = yield call(removePostAPI, action.data) // 2 데이터를 꺼내서\r\n\t\t//yield delay(1000) front\r\n\t\tconsole.log('removePost 실행::: ', action.data)\r\n\t\tyield put({\r\n\t\t\ttype: REMOVE_POST_SUCCESS,\r\n\t\t\tdata: result.data, // 어떤 게시물을 지웠는지 id 가있을것,\r\n\t\t})\r\n\t\tconsole.log('removePost 완료::: ', result)\r\n\t\tyield put({\r\n\t\t\ttype: REMOVE_POST_OF_ME,\r\n\t\t\t//data: action.data, front\r\n\t\t\tdata: action.data,  // action 이 들어왔을때 데이터\r\n\t\t})\r\n\t} catch (err) {\r\n\t\tconsole.error('saga removePost error: ', err)\r\n\t\tyield put({\r\n\t\t\ttype: REMOVE_POST_FAILURE,\r\n\t\t\terror: err.response.data\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction addCommentAPI(data) { // 3 전달되면\r\n\t//주소는 백엔드와 프론트의 약속일뿐 정해진건없다\r\n\t//return axios.post(`/api/post/${data.postId}/comment`, data) // 4 데이터가 간다 // front\r\n\treturn axios.post(`/post/${data.postId}/comment`, data) // 4 데이터가 간다 // POST /post/1/comment\r\n}\r\n\r\nfunction* addComment(action) { // 1 액션에서\r\n\ttry {\r\n\t\tconst result = yield call(addCommentAPI, action.data) // 2 데이터를 꺼내서 //back\r\n\t\t//yield delay(1000) front\r\n\t\tconsole.log('addComment 실행중 :::', action.data)\r\n\t\tyield put({\r\n\t\t\ttype: ADD_COMMENT_SUCCESS,\r\n\t\t\t//data: action.data // front\r\n\t\t\tdata: result.data,\r\n\t\t})\r\n\t\tconsole.log('addComment 완료:::', result)\r\n\t} catch (err) {\r\n\t\tconsole.error('saga addComment error::: ', err)\r\n\t\tyield put({\r\n\t\t\ttype: ADD_COMMENT_FAILURE,\r\n\t\t\terror: err.response.data\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction loadUserPostsAPI(data, lastId) {\r\n\treturn axios.get(`/user/${data}/posts?lastId=${lastId || 0}`)\r\n}\r\n\r\nfunction* loadUserPosts(action) {\r\n\ttry {\r\n\t\tconst result = yield call(loadUserPostsAPI, action.data, action.lastId)\r\n\t\tconsole.log('saga loadUserPosts 실행 ::: ', action.data, action.lastId)\r\n\t\tyield put({\r\n\t\t\ttype: LOAD_USER_POSTS_SUCCESS,\r\n\t\t\tdata: result.data,\r\n\t\t})\r\n\t\tconsole.log('saga loadPostsSuccess 성공::: ', result)\r\n\t} catch (err) {\r\n\t\tconsole.error('saga loadUserPosts error ::: ', err)\r\n\t\tyield put({\r\n\t\t\ttype: LOAD_USER_POSTS_FAILURE,\r\n\t\t\terror: err.response.data,\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction loadHashtagPostsAPI(data, lastId) { // 인자를 두 개 넘겨줄수도 있다\r\n\t// 한글or특수문자 들어가면 error, encode 로 감싸주자\r\n\treturn axios.get(`/hashtag/${encodeURIComponent(data)}?lastId=${lastId || 0}`)\r\n}\r\n\r\nfunction* loadHashtagPosts(action) {\r\n\ttry {\r\n\t\tconsole.log(`loadHashtagPosts log :::`)\r\n\t\tconst result = yield call(loadHashtagPostsAPI, action.data, action.lastId)\r\n\t\tconsole.log('saga loadHashtagPosts 요청 ::: ', action.data, action.lastId)\r\n\t\tyield put({\r\n\t\t\ttype: LOAD_HASHTAG_POSTS_SUCCESS,\r\n\t\t\tdata: result.data,\r\n\t\t})\r\n\t\tconsole.log('saga loadHashtagPosts 성공 ::: ')\r\n\t} catch (err) {\r\n\t\tconsole.error('saga loadHashtagPosts error ::: ', err)\r\n\t\tyield put({\r\n\t\t\ttype: LOAD_HASHTAG_POSTS_FAILURE,\r\n\t\t\terror: err.response.data,\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction* watchLoadUserPosts() {\r\n\tyield throttle(5000, LOAD_USER_POSTS_REQUEST, loadUserPosts)\r\n}\r\n\r\nfunction* watchLoadHashtagPosts() {\r\n\tyield throttle(5000, LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts)\r\n}\r\n\r\nfunction* watchLoadPost() {\r\n\tyield takeLatest(LOAD_POST_REQUEST, loadPost)\r\n}\r\n\r\nfunction* watchRetweet() {\r\n\tyield takeLatest(RETWEET_REQUEST, retweet)\r\n}\r\n\r\nfunction* watchUploadImages() {\r\n\tyield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages)\r\n}\r\n\r\nfunction* watchLikePost() {\r\n\tyield takeLatest(LIKE_POST_REQUEST, likePost)\r\n}\r\n\r\nfunction* watchUnlikePost() {\r\n\tyield takeLatest(UNLIKE_POST_REQUEST, unlikePost)\r\n}\r\n\r\nfunction* watchLoadPosts() {\r\n\tyield throttle(5000, LOAD_POSTS_REQUEST, loadPosts)\r\n}\r\n\r\nfunction* watchAddPost() {\r\n\tyield takeLatest(ADD_POST_REQUEST, addPost)\r\n}\r\n\r\nfunction* watchRemovePost() {\r\n\tyield takeLatest(REMOVE_POST_REQUEST, removePost)\r\n}\r\n\r\nfunction* watchAddComment() {\r\n\tyield takeLatest(ADD_COMMENT_REQUEST, addComment)\r\n}\r\n\r\nexport default function* postSaga() {\r\n\tyield all([\r\n\t\tfork(watchLoadPost),\r\n\t\tfork(watchRetweet),\r\n\t\tfork(watchUploadImages),\r\n\t\tfork(watchLikePost),\r\n\t\tfork(watchUnlikePost),\r\n\t\tfork(watchLoadUserPosts),\r\n\t\tfork(watchLoadHashtagPosts),\r\n\t\tfork(watchLoadPosts),\r\n\t\tfork(watchAddPost),\r\n\t\tfork(watchRemovePost),\r\n\t\tfork(watchAddComment),\r\n\t])\r\n}","import {all, call, delay, fork, put, takeLatest} from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport {\r\n\tCHANGE_NICKNAME_FAILURE,\r\n\tCHANGE_NICKNAME_REQUEST,\r\n\tCHANGE_NICKNAME_SUCCESS,\r\n\tFOLLOW_FAILURE,\r\n\tFOLLOW_REQUEST,\r\n\tFOLLOW_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWERS_REQUEST,\r\n\tLOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS,\r\n\tLOAD_MY_INFO_FAILURE,\r\n\tLOAD_MY_INFO_REQUEST,\r\n\tLOAD_MY_INFO_SUCCESS, LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS,\r\n\tLOG_IN_FAILURE,\r\n\tLOG_IN_REQUEST,\r\n\tLOG_IN_SUCCESS,\r\n\tLOG_OUT_FAILURE,\r\n\tLOG_OUT_REQUEST,\r\n\tLOG_OUT_SUCCESS, REMOVE_FOLLOWER_FAILURE, REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS,\r\n\tSIGN_UP_FAILURE,\r\n\tSIGN_UP_REQUEST,\r\n\tSIGN_UP_SUCCESS,\r\n\tUNFOLLOW_FAILURE,\r\n\tUNFOLLOW_REQUEST,\r\n\tUNFOLLOW_SUCCESS,\r\n} from \"../reducers/user\";\r\n\r\n\r\nfunction logInAPI(data) { // generator 아님\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t//return axios.post('/api/login', data) // 실제 서버에 로그인 요청을 보냄 // front\r\n\r\n\t// 실제 서버에 로그인 요청을 보냄 // back\r\n\t//return axios.post('http://localhost:3065/user/login', data)\r\n\r\n\t// localhost 중복 없애기\r\n\treturn axios.post('/user/login', data)\r\n}\r\n\r\n// 테스트 코드\r\n// const l = logIn({type: 'LOG_IN_REQUEST', data: {id: 'rlaalsdn8@naver.com'}})\r\n// \t\tl.next();\r\n// \t\tl.next();\r\n/////////////////\r\nfunction* logIn(action) { // login action request 가 action 에 전달\r\n\ttry { // 요청 실패 대비\r\n\t\t//yield delay(1000) // front\r\n\t\tconst result = yield call(logInAPI, action.data) // 서버에서 받은 결과 값을 받음\r\n\t\tconsole.log('saga logIn 실행중::', action.data)\r\n\t\tyield put({\r\n\t\t\ttype: LOG_IN_SUCCESS,\r\n\t\t\t//data: action.data, // front\r\n\t\t\tdata: result.data // (성공 결과 담김) back\r\n\t\t})\r\n\t\tconsole.log('saga logIn 완료 ::', result)\r\n\t} catch (err) {\r\n\t\tconsole.error('logIn', err)\r\n\t\tyield put({ // put 은 dispatch 라고 생각하자\r\n\t\t\ttype: LOG_IN_FAILURE,\r\n\t\t\terror: err.response.data // (실패 결과 담김)\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction logOutAPI() {\r\n\t// return axios.post('/api/logout') front\r\n\treturn axios.post('/user/logout')\r\n}\r\n\r\nfunction* logOut() {\r\n\ttry { // 요청 실패 대비\r\n\t\t//yield delay(1000) front\r\n\t\tyield call(logOutAPI) // 서버에서 받은 결과 값을 받음 back\r\n\t\tconsole.log('sagas:: logout 실행')\r\n\t\tyield put({\r\n\t\t\ttype: LOG_OUT_SUCCESS,\r\n\t\t})\r\n\t\tconsole.log('sagas:: logout 완료')\r\n\t} catch (err) {\r\n\t\tconsole.error('front logOut : ', err)\r\n\t\tyield put({ // put 은 dispatch 라고 생각하자\r\n\t\t\ttype: LOG_OUT_FAILURE,\r\n\t\t\terror: err.response.data // (실패 결과 담김)\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction changeNicknameAPI(data) { // generator 아님\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t // 실제 서버에 로그인 요청을 보냄 // back\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t //return axios.post('http://localhost:3065/user/login', data)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t // localhost 중복 없애기\r\n\treturn axios.patch('/user/nickname', {nickname: data})\r\n}\r\n\r\nfunction* changeNickname(action) { // login action request 가 action 에 전달\r\n\ttry { // 요청 실패 대비\r\n\t\t//yield delay(1000) // front\r\n\t\tconst result = yield call(changeNicknameAPI, action.data) // 서버에서 받은 결과 값을 받음\r\n\t\tconsole.log('saga changeNickname 실행중::', action.data)\r\n\t\tyield put({\r\n\t\t\ttype: CHANGE_NICKNAME_SUCCESS,\r\n\t\t\t//data: action.data, // front\r\n\t\t\tdata: result.data // (성공 결과 담김) back\r\n\t\t})\r\n\t\tconsole.log('saga changeNickname 완료 ::', result)\r\n\t} catch (err) {\r\n\t\tconsole.error('changeNickname', err)\r\n\t\tyield put({ // put 은 dispatch 라고 생각하자\r\n\t\t\ttype: CHANGE_NICKNAME_FAILURE,\r\n\t\t\terror: err.response.data // (실패 결과 담김)\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction loadMyInfoAPI(userId) {\r\n\t// 서버에 요청을 보내는 부분\r\n\treturn axios.get(userId ? `/user/${userId}` : '/user/', {\r\n\t\twithCredentials: true,// 클라이언트에서 요청 보낼 때는 브라우저가 쿠키를 같이 동봉해줘요\r\n\t}); // 서버사이드렌더링일 때는, 브라우저가 없어요.\r\n}\r\n\r\nfunction* loadMyInfo(action) {\r\n\ttry {\r\n\t\tconst result = yield call(loadMyInfoAPI, action.data)\r\n\t\tconsole.log('saga loadMyInfo 실행 :: ', action.data)\r\n\t\tyield put({\r\n\t\t\ttype: LOAD_MY_INFO_SUCCESS,\r\n\t\t\tdata: result.data,\r\n\t\t\tme: !action.data\r\n\t\t})\r\n\t\tconsole.log('saga loadMyInfo 성공:: ', result)\r\n\t} catch (err) {\r\n\t\tconsole.error('saga loadMyInfo error :: ', err)\r\n\t\tyield put({\r\n\t\t\ttype: LOAD_MY_INFO_FAILURE,\r\n\t\t\terror: err.response.data\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction followAPI(data) { // data 에 사용자 id 넣어주기\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t // return axios.post('/api/follow', data) front\r\n\treturn axios.patch(`/user/${data}/follow`)\r\n}\r\n\r\nfunction* follow(action) {\r\n\ttry {\r\n\t\t//yield delay(1000) front\r\n\t\tconst result = yield call(followAPI, action.data)\r\n\t\tconsole.log('saga follow 실행 : ', result)\r\n\t\tyield put({\r\n\t\t\ttype: FOLLOW_SUCCESS,\r\n\t\t\t//data: action.data front\r\n\t\t\tdata: result.data\r\n\t\t})\r\n\t\tconsole.log('saga follow 완료 :: ', result)\r\n\t} catch (err) {\r\n\t\tconsole.error('saga follow error :: ', err)\r\n\t\tyield put({\r\n\t\t\ttype: FOLLOW_FAILURE,\r\n\t\t\terror: err.response.data,\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction unfollowAPI(data) {// data 에 사용자 id 넣어주기\r\n\t//return axios.post('/api/unfollow', data) front\r\n\treturn axios.delete(`/user/${data}/follow`)\r\n}\r\n\r\nfunction* unfollow(action) {\r\n\ttry {\r\n\t\tconst result = yield call(unfollowAPI, action.data)\r\n\t\t//yield delay(1000) front\r\n\t\tconsole.log('saga unfollow 요청 :: ', action.data)\r\n\t\tyield put({\r\n\t\t\ttype: UNFOLLOW_SUCCESS,\r\n\t\t\t//data: action.data front\r\n\t\t\tdata: result.data\r\n\t\t})\r\n\t\tconsole.log('saga unfollow 성공:: ', result)\r\n\t} catch (err) {\r\n\t\tconsole.error('saga unfollow error:: ', err)\r\n\t\tyield put({\r\n\t\t\ttype: UNFOLLOW_FAILURE,\r\n\t\t\terror: err.response.data,\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n\t// back end server addr\r\n\t// data 는 email, nickname, password object\r\n\t//return axios.post('/api/signup', data) // front\r\n\treturn axios.post('/user', data) // back\r\n}\r\n\r\nfunction* signUp(action) {\r\n\ttry {\r\n\t\t//yield delay(1000)\r\n\t\tconst result = yield call(signUpAPI, action.data)\r\n\t\tconsole.log('saga sign up result 실행중 :: ', action.data)\r\n\t\tyield put({\r\n\t\t\ttype: SIGN_UP_SUCCESS,\r\n\t\t\t//data: result.data\r\n\t\t})\r\n\t\tconsole.log('saga sign up 완료 :: ', result)\r\n\t} catch (err) {\r\n\t\tconsole.error('saga signUp error : ', err)\r\n\t\tyield put({\r\n\t\t\ttype: SIGN_UP_FAILURE,\r\n\t\t\terror: err.response.data\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction loadFollowersAPI(data) {\r\n\treturn axios.get('/user/followers', data)\r\n}\r\n\r\nfunction* loadFollowers(action) {\r\n\ttry {\r\n\t\tconst result = yield call(loadFollowersAPI, action.data)\r\n\t\tconsole.log('saga followers:: 요청', action.data)\r\n\t\tyield put({\r\n\t\t\ttype: LOAD_FOLLOWERS_SUCCESS,\r\n\t\t\tdata: result.data,\r\n\t\t})\r\n\t\tconsole.log('saga followers:: 성공', result)\r\n\t} catch (err) {\r\n\t\tconsole.error('saga followers::', err)\r\n\t\tyield put({\r\n\t\t\ttype: LOAD_FOLLOWERS_FAILURE,\r\n\t\t\terror: err.response.data,\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction loadFollowingsAPI(data) {\r\n\treturn axios.get('/user/followings', data)\r\n}\r\n\r\nfunction* loadFollowings(action) {\r\n\ttry {\r\n\t\tconst result = yield call(loadFollowingsAPI, action.data)\r\n\t\tconsole.log('saga followings 요청::', action.data)\r\n\t\tyield put({\r\n\t\t\ttype: LOAD_FOLLOWINGS_SUCCESS,\r\n\t\t\tdata: result.data\r\n\t\t})\r\n\t\tconsole.log('saga followings 성공::', result)\r\n\t} catch (err) {\r\n\t\tconsole.error('saga followings 실패::', err)\r\n\t\tyield put({\r\n\t\t\ttype: LOAD_FOLLOWINGS_FAILURE,\r\n\t\t\terror: err.response.data\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction removeFollowerAPI(data) {\r\n\treturn axios.delete(`/user/follower/${data}`) // 몇번째의 팔로워를 제거한다\r\n}\r\n\r\nfunction* removeFollower(action) {\r\n\ttry {\r\n\t\tconst result = yield call(removeFollowerAPI, action.data)\r\n\t\tconsole.log('saga removeFollower 요청:: ', action.data)\r\n\t\tyield put({\r\n\t\t\ttype: REMOVE_FOLLOWER_SUCCESS,\r\n\t\t\tdata: result.data\r\n\t\t})\r\n\t\tconsole.log('saga removeFollower 성공:: ', result)\r\n\t} catch (err) {\r\n\t\tconsole.error('saga removeFollower 실패:: ', err)\r\n\t\tyield put({\r\n\t\t\ttype: REMOVE_FOLLOWER_FAILURE,\r\n\t\t\terror: err.response.data\r\n\t\t})\r\n\t}\r\n}\r\nfunction loadUserAPI(data){\r\n\treturn axios.get(`/user/${data}`)\r\n}\r\nfunction* loadUser(action){\r\n\ttry {\r\n\t    const result = yield call(loadUserAPI, action.data)\r\n\t\tconsole.log('saga loadUser 실행 :: ', action.data)\r\n\t\tyield put({\r\n\t\t\ttype: LOAD_USER_SUCCESS,\r\n\t\t\tdata: result.data\r\n\t\t})\r\n\t\tconsole.log('saga loadUser 성공 :: ', result)\r\n\t}catch (err) {\r\n\t\tconsole.error('saga loadUser Failure 실패 :: ', err)\r\n\t\tyield put({\r\n\t\t\ttype: LOAD_USER_FAILURE,\r\n\t\t\terror: err.response.data\r\n\t\t})\r\n\t}\r\n}\r\nfunction* watchLoadUser(){\r\n\tyield takeLatest(LOAD_USER_REQUEST, loadUser)\r\n}\r\nfunction* watchRemoveFollower() {\r\n\tyield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower)\r\n}\r\n\r\nfunction* watchLoadFollowers() {\r\n\tyield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers)\r\n}\r\n\r\nfunction* watchLoadFollowings() {\r\n\tyield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings)\r\n}\r\n\r\nfunction* watchChangeNickname() {\r\n\tyield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname)\r\n}\r\n\r\nfunction* watchLoadMyInfo() {\r\n\tyield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo)\r\n}\r\n\r\nfunction* watchFollow() {\r\n\tyield takeLatest(FOLLOW_REQUEST, follow)\r\n}\r\n\r\nfunction* watchUnFollow() {\r\n\tyield takeLatest(UNFOLLOW_REQUEST, unfollow)\r\n}\r\n\r\nfunction* watchLogIn() {\t// 로그인 액션이 실행될때까지 기다리겠다는 뜻\r\n\tyield takeLatest(LOG_IN_REQUEST, logIn) //LOG_IN_REQUEST 액션이 실행되면 logIn 함수 실행\r\n}\r\n\r\nfunction* watchLogOut() {\t// 로그아웃 액션이 실행될때까지 기다리겠다는 뜻\r\n\tyield takeLatest(LOG_OUT_REQUEST, logOut) //LOG_OUT_REQUEST 액션이 실행되면 logIn 함수 실행\r\n}\r\n\r\nfunction* watchSignUp() {\t// 회원가입 액션이 실행될때까지 기다리겠다는 뜻\r\n\tyield takeLatest(SIGN_UP_REQUEST, signUp) // SIGN_UP_REQUEST 액션이 실행되면 logIn 함수 실행\r\n}\r\n\r\nexport default function* userSaga() {\r\n\tyield all([\r\n\t\t\tfork(watchLoadUser),\r\n\t\tfork(watchRemoveFollower),\r\n\t\tfork(watchLoadFollowers),\r\n\t\tfork(watchLoadFollowings),\r\n\t\tfork(watchChangeNickname),\r\n\t\tfork(watchLoadMyInfo),\r\n\t\tfork(watchFollow),\r\n\t\tfork(watchUnFollow),\r\n\t\tfork(watchLogIn),\r\n\t\tfork(watchLogOut),\r\n\t\tfork(watchSignUp),\r\n\t])\r\n}\r\n","import {all, fork, takeLatest, call, put, delay} from 'redux-saga/effects';\r\nimport axios from 'axios'\r\nimport postSaga from './post'\r\nimport userSaga from './user'\r\n\r\naxios.defaults.baseURL = 'http://localhost:3065'\r\naxios.defaults.withCredentials = true\r\n\r\nexport default function* rootSaga() {\r\n\tyield all([ // ALL 배열안에 한방에 실행해줌\r\n\t\tfork(postSaga), // fork 는 (함수)실행\r\n\t\tfork(userSaga),\t// call 이랑은 다르다.\r\n\t])\r\n}","import {createWrapper} from 'next-redux-wrapper'\r\nimport {applyMiddleware, compose, createStore} from 'redux'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n//import thunkMiddleware from 'redux-thunk'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport reducer from '../reducers'\r\nimport rootSaga from '../sagas'\r\n\r\n\r\n// const loggerMiddleware = ({ dispatch, getState}) => (next) => (action) => {\r\n//   console.log(action) // 미들웨어를 활용해 리덕스 데브툴즈 처럼 액션 로그 찍히게 하기\r\n//   return next(action)\r\n// }\r\n\r\nconst configureStore = (context) => {\r\n\tconsole.log('configureStore context :: ', context)\r\n\tconst sagaMiddleware = createSagaMiddleware() // saga 설정 방법\r\n\tconst middlewares = [sagaMiddleware]\r\n\tconst enhancer =\r\n\t\t\tprocess.env.NODE_ENV === 'production'\r\n\t\t\t\t\t? compose(applyMiddleware(...middlewares))\r\n\t\t\t\t\t: composeWithDevTools(applyMiddleware(...middlewares))\r\n\tconst store = createStore(reducer, enhancer)\r\n\tstore.sagaTask = sagaMiddleware.run(rootSaga)\r\n\treturn store\r\n}\r\nconst wrapper = createWrapper(\r\n\t\tconfigureStore,\r\n\t\t// 옵션객체 디버그가 트루이면 리덕스에관해서 자세한 설명이나오기때문에 개발할땐 true 로 놓자\r\n\t\t{debug: process.env.NODE_ENV === 'development'},\r\n)\r\n\r\nexport default wrapper\r\n","module.exports = require(\"next-redux-wrapper\");","//import produce from 'immer'\r\nimport produce from '../util/produce' // ie11 지원하기위해 따로 produce 함수 만듬\r\n\r\nexport const initialState = {\r\n\tloadUserLoading: false, // 상대 정보 보기 시도중일땐 로딩중 띄울거임\r\n\tloadUserDone: false, // 상대 정보 보기 됨\r\n\tloadUserError: null, // 상대 정보 보기중일때 에러 없앰\r\n\tloadMyInfoLoading: false, // 유저 정보 보기 시도중일땐 로딩중 띄울거임\r\n\tloadMyInfoDone: false, // 유저 정보 보기 됨\r\n\tloadMyInfoError: null, // 유저 정보 보기중일때 에러 없앰\r\n\tremoveFollowerLoading: false, // 팔로워 유저 삭제 시도중일땐 로딩중 띄울거임\r\n\tremoveFollowerDone: false, // 팔로워 유저 삭제 됨\r\n\tremoveFollowerError: null, // 팔로워 유저 삭제 중일때 에러 없앰\r\n\tfollowLoading: false, // 팔로우 시도중일땐 로딩중 띄울거임\r\n\tfollowDone: false, // 팔로우 됨\r\n\tfollowError: null, // 팔로우중일때 에러 없앰\r\n\tunfollowLoading: false, // 언팔로우 시도중일땐 로딩중 띄울거임\r\n\tunfollowDone: false, // 언팔로우 됨\r\n\tunfollowError: null, // 언팔로우중일때 에러 없앰\r\n\tloadFollowersLoading: false, // 팔로워 시도중일땐 로딩중 띄울거임\r\n\tloadFollowersDone: false, // 팔로워 됨\r\n\tloadFollowersError: null, // 팔로워일때 에러 없앰\r\n\tloadFollowingsLoading: false, // 팔로윙 시도중일땐 로딩중 띄울거임\r\n\tloadFollowingsDone: false, // 팔로윙 됨\r\n\tloadFollowingsError: null, // 팔로윙 중일때 에러 없앰\r\n\tlogInLoading: false, // 로그인 시도중일땐 로딩중 띄울거임\r\n\tlogInDone: false, // 로그인 됨\r\n\tlogInError: null, // 로딩중일때 에러 없앰\r\n\tlogOutLoading: false, // 로그아웃 시도중\r\n\tlogOutDone: false, // 로그아웃 완료\r\n\tlogOutError: null,\r\n\tsignUpLoading: false, // 회원가입 로딩중\r\n\tsignUpDone: false, // 회원 가입 완료\r\n\tsignUpError: null,\r\n\tchangeNicknameLoading: false, // 닉네임 변경 로딩중\r\n\tchangeNicknameDone: false, // 닉네임 변경 완료\r\n\tchangeNicknameError: null,\r\n\tme: null,\r\n\tsignUpData: {}, // 회원 가입 데이터\r\n\tloginData: {},\r\n\tuserInfo: null,\r\n}\r\n\r\n// 로그인 액션 생성기 thunk\r\n// export const loginAction = (data) => { // 함수를 리턴하는 비동기 액션 크리에이터가 추가\r\n// \treturn (dispatch, getState) => {\r\n// \t\tconst state = getState()\r\n// \t\tdispatch(loginRequestAction())\r\n// \t\taxios.post('/api/login')\r\n// \t\t\t\t.then((res) => {\r\n// \t\t\t\t\tdispatch(loginSuccessAction(res.data))\r\n// \t\t\t\t})\r\n// \t\t\t\t.catch((error) => {\r\n// \t\t\t\t\tdispatch(loginFailureAction(error))\r\n// \t\t\t\t})\r\n// \t}\r\n// }\r\n\r\n// actions\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST'\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS'\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE'\r\n\r\nexport const LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST'\r\nexport const LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS'\r\nexport const LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE'\r\n\r\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST'\r\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS'\r\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE'\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST'\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS'\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE'\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST'\r\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS'\r\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE'\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST'\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS'\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE'\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST'\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS'\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE'\r\n\r\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST'\r\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS'\r\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE'\r\n\r\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST'\r\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS'\r\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE'\r\n\r\n// 유저 리듀서의 상태를 바꿀수있는 액션 생성\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME'\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME'\r\n\r\n/* front\r\nconst dummyUser = (data) => ({\r\n\t...data,\r\n\tnickname: '비타민',\r\n\tid: 1,\r\n\tPosts: [{id: 1}],\r\n\tFollowings: [{nickname: '외노'}, {nickname: '음메'}, {nickname: '썽'}, {nickname: '오댕'}, {nickname: '만뽀'}],\r\n\tFollowers: [{nickname: '까매'}, {nickname: '만두'}, {nickname: '보챙'}, {nickname: '뒷가'}, {nickname: '야덩'}],\r\n})*/\r\n\r\nexport const loginRequestAction = (data) => ({\r\n\ttype: LOG_IN_REQUEST,\r\n\tdata,\r\n});\r\n// 로그아웃 액션 생성기 thunk\r\n// export const logoutAction = (data) => {\r\n// \treturn (dispatch) => {\r\n// \t\taxios.post('/api/logout')\r\n// \t\t\t\t.then(() => {\r\n// \t\t\t\t\tdispatch(logoutSuccessAction())\r\n// \t\t\t\t})\r\n// \t\t\t\t.catch(() => {\r\n// \t\t\t\t\tdispatch(logoutFailureAction())\r\n// \t\t\t\t})\r\n// \t}\r\n// }\r\nexport const logoutRequestAction = () => ({\r\n\ttype: LOG_OUT_REQUEST,\r\n})\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n\tswitch (action.type) {\r\n\t\tcase LOAD_USER_REQUEST:\r\n\t\t\t// store 에서 보낸 state 가 만들어짐, state 자체가 user.js 의 state 임\r\n\t\t\tdraft.loadUserLoading = true\r\n\t\t\tdraft.loadUserDone = false\r\n\t\t\tdraft.loadUserError = null // 로딩 중일때는 에러 없앰\r\n\t\t\tconsole.log('reducer myInfo 요청')\r\n\t\t\tbreak;\r\n\t\tcase LOAD_USER_SUCCESS:\r\n\t\t\tdraft.userInfo = action.data // back 상대 정보가 들어있음\r\n\t\t\tdraft.loadUserLoading = false\r\n\t\t\tdraft.loadUserDone = true\r\n\t\t\t//draft.me = dummyUser(action.data)\r\n\t\t\tconsole.log('reducer myInfo 성공')\r\n\t\t\tbreak;\r\n\t\tcase LOAD_USER_FAILURE:\r\n\t\t\tconsole.error('loadUserFail 실패:: ' + action.error)\r\n\t\t\tdraft.loadUserLoading = false\r\n\t\t\tdraft.loadUserError = action.error\r\n\t\t\tbreak;\r\n\t\tcase LOAD_MY_INFO_REQUEST:\r\n\t\t\t// store 에서 보낸 state 가 만들어짐, state 자체가 user.js 의 state 임\r\n\t\t\tdraft.loadMyInfoLoading = true\r\n\t\t\tdraft.loadMyInfoDone = false\r\n\t\t\tdraft.loadMyInfoError = null // 로딩 중일때는 에러 없앰\r\n\t\t\tconsole.log('reducer myInfo 요청')\r\n\t\t\tbreak;\r\n\t\tcase LOAD_MY_INFO_SUCCESS:\r\n\t\t\tdraft.me = action.data // back 내 정보가 들어있음\r\n\t\t\tdraft.loadMyInfoLoading = false\r\n\t\t\tdraft.loadMyInfoDone = true\r\n\t\t\t//draft.me = dummyUser(action.data)\r\n\t\t\tconsole.log('reducer myInfo 성공')\r\n\t\t\tbreak;\r\n\t\tcase LOAD_MY_INFO_FAILURE:\r\n\t\t\tconsole.error('loadMyInfoFail 실패:: ' + action.error)\r\n\t\t\tdraft.loadMyInfoLoading = false\r\n\t\t\tdraft.loadMyInfoError = action.error\r\n\t\t\tbreak;\r\n\t\tcase REMOVE_FOLLOWER_REQUEST:\r\n\t\t\tdraft.removeFollowerLoading = true\r\n\t\t\tdraft.removeFollowerDone = false\r\n\t\t\tdraft.removeFollowerError = null\r\n\t\t\tconsole.log('reducer removeFollower 요청')\r\n\t\t\tbreak;\r\n\t\tcase REMOVE_FOLLOWER_SUCCESS:\r\n\t\t\t// 나의 팔로워 제거\r\n\t\t\tdraft.me.Followers = draft.me.Followers.filter((v) => v.id !== action.data.UserId)\r\n\t\t\tdraft.removeFollowerLoading = false\r\n\t\t\tdraft.removeFollowerDone = true\r\n\t\t\tconsole.log('reducer removeFollower 성공')\r\n\t\t\tbreak\r\n\t\tcase REMOVE_FOLLOWER_FAILURE:\r\n\t\t\tconsole.error('removeFollowerFail 실패:: ' + action.error)\r\n\t\t\tdraft.removeFollowerLoading = false\r\n\t\t\tdraft.removeFollowerError = action.error\r\n\t\tcase FOLLOW_REQUEST:\r\n\t\t\t// store 에서 보낸 state 가 만들어짐, state 자체가 user.js 의 state 임\r\n\t\t\tdraft.followLoading = true\r\n\t\t\tdraft.followError = null // 로딩 중일때는 에러 없앰\r\n\t\t\tdraft.followDone = false\r\n\t\t\tconsole.log('reducer FOLLOW_REQUEST 요청')\r\n\t\t\tbreak;\r\n\t\tcase FOLLOW_SUCCESS:\r\n\t\t\tdraft.followLoading = false\r\n\t\t\tdraft.followDone = true\r\n\t\t\t//draft.me = dummyUser(action.data)\r\n\t\t\tdraft.me.Followings.push({id: action.data.UserId})\r\n\t\t\tconsole.log('reducer FOLLOW_SUCCESS 성공')\r\n\t\t\tbreak;\r\n\t\tcase FOLLOW_FAILURE:\r\n\t\t\tdraft.followLoading = false\r\n\t\t\tdraft.followError = action.error\r\n\t\t\tconsole.error('reducer FOLLOW_FAILURE 실패::', action.error)\r\n\t\t\tbreak;\r\n\t\tcase UNFOLLOW_REQUEST:\r\n\t\t\t// store 에서 보낸 state 가 만들어짐, state 자체가 user.js 의 state 임\r\n\t\t\tdraft.unfollowLoading = true\r\n\t\t\tdraft.unfollowError = null // 로딩 중일때는 에러 없앰\r\n\t\t\tdraft.unfollowDone = false\r\n\t\t\tconsole.log('reducer unfollow 요청')\r\n\t\t\tbreak;\r\n\t\tcase UNFOLLOW_SUCCESS:\r\n\t\t\tdraft.unfollowLoading = false\r\n\t\t\tdraft.unfollowDone = true\r\n\t\t\t//draft.me = dummyUser(action.data)\r\n\t\t\t// 언팔로우 한 사람만 빠지게\r\n\t\t\tdraft.me.Followings = draft.me.Followings.filter((v) => v.id !== action.data.UserId)\r\n\t\t\tconsole.log('reducer unfollow 성공')\r\n\t\t\tbreak;\r\n\t\tcase UNFOLLOW_FAILURE:\r\n\t\t\tdraft.unfollowLoading = false\r\n\t\t\tdraft.unfollowError = action.error\r\n\t\t\tconsole.error('reducer unfollow 실패::', action.error)\r\n\t\t\tbreak;\r\n\t\tcase LOG_IN_REQUEST:\r\n\t\t\tdraft.logInLoading = true\r\n\t\t\tdraft.logInError = null\r\n\t\t\tdraft.logInDone = false\r\n\t\t\tconsole.log('reducer login 요청')\r\n\t\t\tbreak;\r\n\t\tcase LOG_IN_SUCCESS:\r\n\t\t\tdraft.logInLoading = false\r\n\t\t\tdraft.logInDone = true\r\n\t\t\t//draft.me = dummyUser(action.data) front\r\n\t\t\tdraft.me = action.data // back\r\n\t\t\tconsole.log('reducer login 성공')\r\n\t\t\tbreak;\r\n\t\tcase LOG_IN_FAILURE:\r\n\t\t\tdraft.logInLoading = false\r\n\t\t\tdraft.logInError = action.error\r\n\t\t\tconsole.error('reducer login 실패:: ', action.error)\r\n\t\t\tbreak;\r\n\t\tcase LOG_OUT_REQUEST:\r\n\t\t\tdraft.logOutLoading = true\r\n\t\t\tdraft.logOutDone = false\r\n\t\t\tdraft.logOutError = null\r\n\t\t\tconsole.log('reducer logout 요청')\r\n\t\t\tbreak;\r\n\t\tcase LOG_OUT_SUCCESS:\r\n\t\t\tdraft.logOutLoading = false\r\n\t\t\tdraft.logOutDone = true\r\n\t\t\tdraft.me = null\r\n\t\t\tconsole.log('reducer logout 성공')\r\n\t\t\tbreak;\r\n\t\tcase LOG_OUT_FAILURE:\r\n\t\t\tdraft.logOutLoading = false\r\n\t\t\tdraft.logOutError = action.error\r\n\t\t\tconsole.error('reducer logout 실패', action.error)\r\n\t\t\tbreak\r\n\t\tcase SIGN_UP_REQUEST:\r\n\t\t\tdraft.signUpLoading = true\r\n\t\t\tdraft.signUpDone = false\r\n\t\t\tdraft.signUpError = null\r\n\t\t\tconsole.log('reducer signup 요청')\r\n\t\t\tbreak;\r\n\t\tcase SIGN_UP_SUCCESS:\r\n\t\t\tdraft.signUpLoading = false\r\n\t\t\tdraft.signUpDone = true\r\n\t\t\tconsole.log('reducer signUp 성공')\r\n\t\t\tbreak\r\n\t\tcase SIGN_UP_FAILURE:\r\n\t\t\tdraft.signUpLoading = false\r\n\t\t\tdraft.signUpError = action.error\r\n\t\t\tconsole.error('reducer signUp 실패', action.error)\r\n\t\t\tbreak\r\n\t\tcase CHANGE_NICKNAME_REQUEST:\r\n\t\t\tdraft.changeNicknameLoading = true\r\n\t\t\tdraft.changeNicknameDone = false\r\n\t\t\tdraft.changeNicknameError = null\r\n\t\t\tconsole.log('reducer CHANGE_NICKNAME_REQUEST 요청')\r\n\t\t\tbreak\r\n\t\tcase CHANGE_NICKNAME_SUCCESS:\r\n\t\t\tdraft.changeNicknameLoading = false\r\n\t\t\tdraft.changeNicknameDone = true\r\n\t\t\tconsole.log('reducer CHANGE_NICKNAME_SUCCESS 성공')\r\n\t\t\tbreak;\r\n\t\tcase CHANGE_NICKNAME_FAILURE:\r\n\t\t\tdraft.changeNicknameLoading = false\r\n\t\t\tdraft.changeNicknameError = action.error\r\n\t\t\tconsole.error('reducer CHANGE_NICKNAME 실패', action.error)\r\n\t\t\tbreak;\r\n\t\tcase LOAD_FOLLOWERS_REQUEST:\r\n\t\t\tdraft.loadFollowersLoading = true\r\n\t\t\tdraft.loadFollowersDone = false\r\n\t\t\tdraft.loadFollowersError = null\r\n\t\t\tconsole.log('reducer LOAD_FOLLOWERS_REQUEST 요청')\r\n\t\t\tbreak\r\n\t\tcase LOAD_FOLLOWERS_SUCCESS:\r\n\t\t\tdraft.loadFollowersLoading = false\r\n\t\t\tdraft.loadFollowersDone = true\r\n\t\t\tdraft.me.Followers = action.data\r\n\t\t\tconsole.log('reducer LOAD_FOLLOWERS_SUCCESS 성공')\r\n\t\t\tbreak;\r\n\t\tcase LOAD_FOLLOWERS_FAILURE:\r\n\t\t\tdraft.loadFollowersLoading = false\r\n\t\t\tdraft.loadFollowersError = action.error\r\n\t\t\tconsole.error('reducer LOAD_FOLLOWERS 실패', action.error)\r\n\t\t\tbreak;\r\n\t\tcase LOAD_FOLLOWINGS_REQUEST:\r\n\t\t\tdraft.loadFollowingsLoading = true\r\n\t\t\tdraft.loadFollowingsDone = false\r\n\t\t\tdraft.loadFollowingsError = null\r\n\t\t\tconsole.log('reducer LOAD_FOLLOWINGS_REQUEST 요청')\r\n\t\t\tbreak\r\n\t\tcase LOAD_FOLLOWINGS_SUCCESS:\r\n\t\t\tdraft.loadFollowingsLoading = false\r\n\t\t\tdraft.loadFollowingsDone = true\r\n\t\t\tdraft.me.Followings = action.data\r\n\t\t\tconsole.log('reducer LOAD_FOLLOWINGS_SUCCESS 성공')\r\n\t\t\tbreak;\r\n\t\tcase LOAD_FOLLOWINGS_FAILURE:\r\n\t\t\tdraft.loadFollowingsLoading = false\r\n\t\t\tdraft.loadFollowingsError = action.error\r\n\t\t\tconsole.error('reducer LOAD_FOLLOWINGS 실패', action.error)\r\n\t\t\tbreak;\r\n\t\tcase ADD_POST_TO_ME: // 게시글을 쓰면 게시글 아이디가 여기로 들어와서 하나가 추가된다\r\n\t\t\tdraft.me.Posts.unshift({id: action.data})\r\n\t\t\tconsole.log('ADD_POST_TO_ME 성공')\r\n\t\t\tbreak\r\n\t\t\t// return {\r\n\t\t\t// \t...state,\r\n\t\t\t// \tme: {\r\n\t\t\t// \t\t...state.me,\r\n\t\t\t// \t\tPosts: [{id: action.data}, ...state.me.Posts],\r\n\t\t\t// \t}\r\n\t\t\t// }\r\n\t\tcase REMOVE_POST_OF_ME:\r\n\t\t\tdraft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data)\r\n\t\t\tconsole.log('REMOVE_POST_OF_ME')\r\n\t\t\tbreak;\r\n\t\t\t// return { // 불변성을 지키며 게시글을 지워야한다.\r\n\t\t\t// \t...state,\r\n\t\t\t// \tme: {\r\n\t\t\t// \t\t...state.me,\r\n\t\t\t// \t\tPosts: state.me.Posts.filter((v) => v.id !== action.data)\r\n\t\t\t// \t}\r\n\t\t\t// }\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n})\r\n\r\nexport default reducer;","module.exports = require(\"redux-saga/effects\");","module.exports = require(\"immer\");","module.exports = require(\"react\");","import produce, {enableES5} from \"immer\";\r\n\r\nexport default (...args) => { // 프로듀스 함수 확장\r\n\tenableES5()\r\n\treturn produce(...args)\r\n}","//import shortId from 'shortid' front\r\n//import produce from 'immer'\r\nimport produce from '../util/produce' // ie11 지원하기위해 따로 produce 함수 만듬\r\n//import faker from 'faker' front\r\n\r\nexport const initialState = {\r\n\tmainPosts: [], // 게시물 여러개\r\n\tsinglePost: null, // 게시물 하나만\r\n\timagePaths: [], // 이미지 경로들이 저장됨\r\n\thasMorePosts: true, // 더 많은 게시물 가져오기\r\n\tlikePostLoading: false, // 라이크 로드중 로딩\r\n\tlikePostDone: false, // 라이크 완료했을때 true 변환\r\n\tlikePostError: null,\r\n\tretweetLoading: false, // 리트윗 로드중 로딩\r\n\tretweetDone: false, // 리트윗 완료중 로딩\r\n\tretweetError: null,\r\n\tunlikePostLoading: false, // 언라이크 로드 중 로딩\r\n\tunlikePostDone: false, // 언라이크 완료했을때 true 변환\r\n\tunlikePostError: null,\r\n\tuploadImagesLoading: false, // 이미지 로드 중 로딩\r\n\tuploadImagesDone: false, // 이미지 로드 완료했을때 true 변환\r\n\tuploadImagesError: null,\r\n\t/*loadUserPostsLoading: false, // 특정 사용자 게시글 로드중 로딩\r\n\tloadUserPostsDone: false, // 특정 사용자 게시글 로드 완료시 true 변환\r\n\tloadUserPostsError: null,*/\r\n\tloadPostsLoading: false, // 화면 로드중 로딩\r\n\tloadPostsDone: false, // 화면 로드 완료되었을때 true 변환\r\n\tloadPostsError: null,\r\n\tloadPostLoading: false, // 게시글 로드중 로딩\r\n\tloadPostDone: false, // 게시글 로드 완료되었을때 true 변환\r\n\tloadPostError: null,\r\n\t/*loadHashtagPostsLoading: false, // 해쉬태그 게시글들 로드중 로딩\r\n\tloadHashtagPostsDone: false, // 해쉬태그 게시글 로드 완료되었을때 true 변환\r\n\tloadHashtagPostsError: null,*/\r\n\taddPostLoading: false, // 게시물 등록중 로딩\r\n\taddPostDone: false, // 게시물 추가가 완료되었을때 true 변환\r\n\taddPostError: null,\r\n\tremovePostLoading: false, // 게시물 삭제중 로딩\r\n\tremovePostDone: false, // 게시물 삭제가 완료되었을때 true 변환\r\n\tremovePostError: null,\r\n\taddCommentLoading: false, // 댓글 등록중 로딩\r\n\taddCommentDone: false, // 게시물 추가가 완료되었을때 true 변환\r\n\taddCommentError: null,\r\n}\r\n// 이부분을 사용해서 무한 스크롤링을 만들것 front\r\n/*export const generateDummyPost = (number) => Array(number).fill().map(() => ({\r\n\tid: shortId.generate(),\r\n\tUser: {\r\n\t\tid: shortId.generate(),\r\n\t\tnickname: faker.name.findName(),\r\n\t},\r\n\tcontent: faker.lorem.paragraph(),\r\n\tImages: [{\r\n\t\tsrc: faker.image.image(),\r\n\t}],\r\n\tComments: [{\r\n\t\tUser: {\r\n\t\t\tid: shortId.generate(),\r\n\t\t\tnickname: faker.name.findName(),\r\n\t\t},\r\n\t\tcontent: faker.lorem.sentence(),\r\n\t}],\r\n}))*/\r\n\r\n//게시글 액션\r\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST'\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS'\r\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE'\r\n\r\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST'; // 특정 사용자의 게시글을 로딩하면 바로 LOAD_POSTS_REQUEST 를 호출해줄것\r\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\r\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\r\n\r\nexport const LOAD_POSTS_REQUEST = ' LOAD_POSTS_REQUEST'; // 화면을 로딩하면 바로 LOAD_POSTS_REQUEST 를 호출해줄것\r\nexport const LOAD_POSTS_SUCCESS = ' LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = ' LOAD_POSTS_FAILURE';\r\n\r\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST' // 게시물을 로딩하면 바로 LOAD_POST_REQUEST 를 호출해줄것\r\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS'\r\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE'\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST'; // 변수로 따로 만들어줘야 중간에 오타가나는 일을 막을 수 있다\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\r\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\r\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\r\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\r\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE'\r\n\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE'; // 동기 옵션은 하나만 만들어도 된다\r\n\r\nexport const addPost = (data) => ({\r\n\ttype: ADD_POST_REQUEST,\r\n\tdata,\r\n})\r\n\r\n// dynamic action create\r\nexport const addComment = (data) => ({\r\n\ttype: ADD_COMMENT_REQUEST,\r\n\tdata,\r\n})\r\n\r\n/* front dummy\r\nconst dummyPost = (data) => ({\r\n\tid: data.id,\r\n\tcontent: data.content,\r\n\tUser: {\r\n\t\tid: 1,\r\n\t\tnickname: '비타민',\r\n\t},\r\n\tImages: [],\r\n\tComments: [],\r\n})\r\n*/\r\n\r\n/* front dummy\r\nconst dummyComment = (data) => ({\r\n\tid: shortId.generate(),\r\n\tcontent: data,\r\n\tUser: {\r\n\t\tid: 1,\r\n\t\tnickname: '비타민',\r\n\t}\r\n})*/\r\n// 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n\t// immer 사용시 state 를 draft 로 교체해주며, switch 문인걸 인식하고 break 를 까먹지말자\r\n\tswitch (action.type) {\r\n\t\tcase ADD_COMMENT_REQUEST:\r\n\t\t\tdraft.addCommentLoading = true\r\n\t\t\tdraft.addCommentDone = false\r\n\t\t\tdraft.addCommentError = null\r\n\t\t\tbreak;\r\n\t\tcase ADD_COMMENT_SUCCESS: {\r\n\t\t\t//action.data.content, postId, userId\r\n\t\t\t//const post = draft.mainPosts.find((v) => v.id === action.data.postId) // 게시글 리스트중에 post 찾기 front\r\n\t\t\tconst post = draft.mainPosts.find((v) => v.id === action.data.PostId) // 게시글 리스트중에 post 찾기 bak\r\n\t\t\t//post.Comments.unshift(dummyComment(action.data.content)) // 찾은 post 에 맨 앞에 가짜 댓글 하나 넣어줌 FRONT\r\n\t\t\tpost.Comments.unshift(action.data) // 찾은 post 에 실제 데이터 back\r\n\t\t\tdraft.addCommentLoading = false\r\n\t\t\tdraft.addCommentDone = true\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase ADD_COMMENT_FAILURE:\r\n\t\t\tdraft.addCommentLoading = false\r\n\t\t\tdraft.addCommentError = action.error\r\n\t\t\tbreak;\r\n\t\tcase LIKE_POST_REQUEST:\r\n\t\t\tdraft.likePostLoading = true;\r\n\t\t\tdraft.likePostDone = false;\r\n\t\t\tdraft.likePostError = null;\r\n\t\t\tconsole.log('reducer LIKE_POST_REQUEST 요청::')\r\n\t\t\tbreak;\r\n\t\tcase LIKE_POST_SUCCESS: {\r\n\t\t\t// mainPosts 에서 id 가 액션데이터포스트아이디를 찾아서\r\n\t\t\tconst post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n\t\t\t// 게시글 좋아요 누른 사람들에게 사용자 아이디를 넣어준다\r\n\t\t\tpost.Likers.push({id: action.data.UserId});\r\n\t\t\tdraft.likePostLoading = false;\r\n\t\t\tdraft.likePostDone = true;\r\n\t\t\tconsole.log('reducer LIKE_POST_SUCCESS 성공::')\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase LIKE_POST_FAILURE:\r\n\t\t\tdraft.likePostLoading = false;\r\n\t\t\tdraft.likePostError = action.error;\r\n\t\t\tconsole.error('reducer LIKE_POST_FAILURE 실패:::', action.error)\r\n\t\t\tbreak;\r\n\t\t\t/*보통 이렇게 같이 쓸수있는 경우는 한 페이지에서 액션 두개가 같이 사용되지 않을때는 상태가 서로 공유되도 된다*/\r\n\t\tcase LOAD_USER_POSTS_REQUEST:\r\n\t\tcase LOAD_HASHTAG_POSTS_REQUEST:\r\n\t\tcase LOAD_POSTS_REQUEST:\r\n\t\t\tdraft.loadPostsLoading = true;\r\n\t\t\tdraft.loadPostsDone = false;\r\n\t\t\tdraft.loadPostsError = null;\r\n\t\t\tbreak;\r\n\t\tcase LOAD_USER_POSTS_SUCCESS:\r\n\t\tcase LOAD_HASHTAG_POSTS_SUCCESS:\r\n\t\tcase LOAD_POSTS_SUCCESS:\r\n\t\t\tdraft.loadPostsLoading = false\r\n\t\t\tdraft.loadPostsDone = true\r\n\t\t\t// action.data 에 dummy data 가 들어있을것이며, 기존데이터와 합쳐주는것\r\n\t\t\t// concat 을 할땐 항상 앞에 대입을 해줘야한다 그래야 합쳐짐\r\n\t\t\t//draft.mainPosts = action.data.concat(draft.mainPosts) front\r\n\t\t\tdraft.mainPosts = draft.mainPosts.concat(action.data)\r\n\t\t\t// 게시물을 50 개까지만 가져오겠다\r\n\t\t\t//draft.hasMorePosts = draft.mainPosts.length < 50 front\r\n\t\t\tdraft.hasMorePosts = action.data.length === 10\r\n\t\t\tbreak;\r\n\t\tcase LOAD_USER_POSTS_FAILURE:\r\n\t\tcase LOAD_HASHTAG_POSTS_FAILURE:\r\n\t\tcase LOAD_POSTS_FAILURE:\r\n\t\t\tdraft.loadPostsLoading = false\r\n\t\t\tdraft.loadPostsError = action.error\r\n\t\t\tbreak;\r\n\t\tcase ADD_POST_REQUEST:\r\n\t\t\tdraft.addPostLoading = true;\r\n\t\t\tdraft.addPostDone = false;\r\n\t\t\tdraft.addPostError = null;\r\n\t\t\tbreak;\r\n\t\tcase ADD_POST_SUCCESS:\r\n\t\t\t// draft.mainPosts.unshift(dummyPost(action.data)) // front dummy\r\n\t\t\tdraft.mainPosts.unshift(action.data) // back 실제 데이터\r\n\t\t\tdraft.addPostLoading = false\r\n\t\t\tdraft.addPostDone = true\r\n\t\t\tdraft.imagePaths = [] // add post 성공 시, 사용자 게시글 작성에 이미지 초기화\r\n\t\t\tbreak;\r\n\t\tcase ADD_POST_FAILURE:\r\n\t\t\tdraft.addPostLoading = false\r\n\t\t\tdraft.addPostError = action.error\r\n\t\t\tbreak;\r\n\t\tcase LOAD_POST_REQUEST:\r\n\t\t\tdraft.loadPostLoading = true\r\n\t\t\tdraft.loadPostDone = false\r\n\t\t\tdraft.loadPostError = null\r\n\t\t\tconsole.log('reducer LOAD_POST_REQUEST 요청:: ')\r\n\t\t\tbreak\r\n\t\tcase LOAD_POST_SUCCESS:\r\n\t\t\tdraft.singlePost = action.data // 하나의 게시물만 로드\r\n\t\t\tdraft.loadPostLoading = false\r\n\t\t\tdraft.loadPostDone = true\r\n\t\t\tconsole.log('reducer LOAD_POST_SUCCESS 성공:: ')\r\n\t\t\tbreak\r\n\t\tcase LOAD_POST_FAILURE:\r\n\t\t\tdraft.loadPostLoading = false\r\n\t\t\tdraft.loadPostError = action.error\r\n\t\t\tconsole.error('reducer LOAD_POST_FAILURE 실패:: ', action.error)\r\n\t\tcase REMOVE_IMAGE:\r\n\t\t\tdraft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data)\r\n\t\t\tconsole.log('reducer REMOVE_IMAGE 성공')\r\n\t\t\tbreak\r\n\t\tcase RETWEET_REQUEST:\r\n\t\t\tdraft.retweetLoading = true\r\n\t\t\tdraft.retweetDone = false\r\n\t\t\tdraft.retweetError = null\r\n\t\t\tconsole.log('reducer RETWEET_REQUEST 요청::')\r\n\t\t\tbreak\r\n\t\tcase RETWEET_SUCCESS: {\r\n\t\t\tdraft.retweetLoading = false\r\n\t\t\tdraft.retweetDone = true\r\n\t\t\tdraft.mainPosts.unshift(action.data) // 리트윗된 게시글 메인포스트에 추가\r\n\t\t\tconsole.log('reducer RETWEET_SUCCESS 성공::')\r\n\t\t\tbreak\r\n\t\t}\r\n\t\tcase RETWEET_FAILURE:\r\n\t\t\tdraft.retweetLoading = false\r\n\t\t\tdraft.retweetError = action.error\r\n\t\t\tconsole.error('reducer RETWEET_FAILURE 실패::', action.data)\r\n\t\t\tbreak\r\n\t\tcase UNLIKE_POST_REQUEST:\r\n\t\t\tdraft.unlikePostLoading = true;\r\n\t\t\tdraft.unlikePostDone = false;\r\n\t\t\tdraft.unlikePostError = null;\r\n\t\t\tconsole.log('reducer UNLIKE_POST_REQUEST 요청::')\r\n\t\t\tbreak;\r\n\t\tcase UNLIKE_POST_SUCCESS: {\r\n\t\t\tconst post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n\t\t\tpost.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\r\n\t\t\tdraft.unlikePostLoading = false;\r\n\t\t\tdraft.unlikePostDone = true;\r\n\t\t\tconsole.log('reducer UNLIKE_POST_SUCCESS 성공::')\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase UNLIKE_POST_FAILURE:\r\n\t\t\tdraft.unlikePostLoading = false;\r\n\t\t\tdraft.unlikePostError = action.error;\r\n\t\t\tconsole.error('reducer UNLIKE_POST_FAILURE 실패:::', action.error)\r\n\t\t\tbreak;\r\n\t\tcase UPLOAD_IMAGES_REQUEST:\r\n\t\t\tdraft.uploadImagesLoading = true\r\n\t\t\tdraft.uploadImagesDone = false\r\n\t\t\tdraft.uploadImagesError = null\r\n\t\t\tconsole.log('reducer UPLOAD_IMAGES_REQUEST 요청::')\r\n\t\t\tbreak\r\n\t\tcase UPLOAD_IMAGES_SUCCESS:\r\n\t\t\tdraft.imagePaths = action.data\r\n\t\t\tdraft.uploadImagesLoading = false\r\n\t\t\tdraft.uploadImagesDone = true\r\n\t\t\tconsole.log('reducer UPLOAD_IMAGES_SUCCESS 성공::')\r\n\t\t\tbreak\r\n\t\tcase UPLOAD_IMAGES_FAILURE:\r\n\t\t\tdraft.uploadImagesLoading = false\r\n\t\t\tdraft.uploadImagesError = action.error\r\n\t\t\tconsole.error('reducer UPLOAD_IMAGES_FAILURE 실패:::', action.error)\r\n\t\t\tbreak\r\n\t\tcase REMOVE_POST_REQUEST:\r\n\t\t\tdraft.removePostLoading = true\r\n\t\t\tdraft.removePostDone = false\r\n\t\t\tdraft.removePostError = null\r\n\t\t\tbreak;\r\n\t\tcase REMOVE_POST_SUCCESS:\r\n\t\t\tdraft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data.PostId) // 지울땐 보통 filter 가 편하다\r\n\t\t\tdraft.PostLoading = false\r\n\t\t\tdraft.PostDone = true\r\n\t\t\tbreak;\r\n\t\tcase REMOVE_POST_FAILURE:\r\n\t\t\tdraft.removePostLoading = false\r\n\t\t\tdraft.removePostError = action.error\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n})\r\nexport default reducer\r\n","module.exports = require(\"redux\");","module.exports = require(\"redux-devtools-extension\");","module.exports = require(\"next/head\");","module.exports = require(\"axios\");"],"sourceRoot":""}